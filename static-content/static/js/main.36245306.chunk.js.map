{"version":3,"sources":["actions.js","components/withApiWatch.js","pages/Volume.js","components/Link.js","pages/Volumes.js","pages/Images.js","pages/Image.js","pages/ImageCreate.js","pages/Container.js","pages/Containers.js","pages/ContainerRun.js","pages/PageNotFound.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["app","setApp","appInstance","setState","state","setMessage","message","messageType","length","console","error","clearMessage","e","preventDefault","setArg","name","value","Object","assign","args","api","id","endpoint","params","isLoading","fetch","method","then","res","json","Array","isArray","catch","err","getInitialState","view","loc","window","location","pathname","matchFound","r","v","m","match","type","imageId","forEach","check","exec","WrapperComponent","props","apiId","repeating","timer","mounted","this","setInterval","timerCallback","bind","prevProps","messages","prev","apiResults","push","results","msg","command","msgJoined","join","Actions","clearInterval","concat","key","c","hasOwnProperty","item","self","add","indexOf","addRepeatingApi","found","find","warn","addApiWatchId","setApiWatchId","React","Component","withApiWatch","socket","WebSocket","onopen","onclose","onmessage","data","JSON","parse","output","_","get","line","finished","setTimeout","stdout","scrollTop","scrollHeight","getId","socketOpen","send","stringify","confirm","val","objectToString","obj","keys","map","k","parseValue","volume","volumeDetails","backupStarted","keysUsed","className","href","onClick","handleDeleteClick","handleBackupClick","index","toLowerCase","ref","to","history","pushState","title","children","volumes","Link","col","i","vol","Images","images","image","REPOSITORY","SIZE","CREATED","isShowFull","cmd","body","options","Size","imageCommand","toggleShowFullDetails","Author","Architecture","Os","toFixed","RepoTags","tag","Config","ExposedPorts","replace","Env","Labels","path","buildStarted","onSubmit","handleFormSubmit","onChange","target","container","State","Status","containerCommand","StartedAt","field","Image","Containers","getType","containers","first","Fragment","total","emptyCount","con","split","lineI","flag","mounts","flagRm","flagTty","local","remote","additionalArgs","ports","volumeId","argType","slice","splice","imageKey","availableVolumes","handleForm","inputListener","checked","port","readOnly","placeholder","addBountMount","vi","addVolume","App","originalPopstateListener","onpopstate","handleHistoryEvent","viewName","ret","Home","PageNotFound","style","color","textDecoration","route","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36245306.chunk.js","sourcesContent":["var app = null;\r\n\r\nexport const setApp = (appInstance) => {\r\n  app = appInstance;\r\n};\r\n\r\nexport const setState = (state = {}) => {\r\n  app.setState(state);\r\n};\r\n\r\nexport const clearStateKey = (key) => {\r\n  if ( app && app.state.hasOwnProperty(key) ){\r\n    delete app.state[key];\r\n    app.setState(app.state);\r\n  }\r\n};\r\n\r\nexport const setMessage = (message = \"\", messageType = \"success\") => {\r\n  if ( typeof message === \"string\" && message.length ){\r\n    app.setState({\r\n      message,\r\n      messageType\r\n    });\r\n  } \r\n  else if ( typeof message !== \"string\" ){\r\n    console.error(`setErrorMessage only accepts strings.  A '${(typeof message)}' was provided`);\r\n  }\r\n  else {\r\n    console.error(\"Trying to call setErrorMessage with an empty string\");\r\n  }\r\n};\r\n\r\nexport const clearMessage = (e = null) => {\r\n  if ( e && e.preventDefault ){\r\n    e.preventDefault();\r\n  }\r\n  app.setState({\r\n    message: null,\r\n    messageType: \"success\"\r\n  });\r\n};\r\n\r\nexport const setArg = (name, value) => {\r\n  var state =  Object.assign( {}, app.state, {\r\n    args: Object.assign({}, app.state.args, {\r\n      [name]: value\r\n    } )\r\n  } );\r\n  app.setState(state);\r\n};\r\n\r\nexport const navClickListener = (view, args = {}) => {\r\n  return (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    app.setState({\r\n      view,\r\n      args\r\n    });\r\n  };\r\n};\r\n\r\nexport const api = (id, endpoint, params = {}) => {\r\n  var state = app.state[id] || {};\r\n  app.setState({\r\n    [id]: Object.assign({}, state, {\r\n      isLoading: true\r\n    } )\r\n  });\r\n  fetch( \"http://localhost:8085/\" + endpoint, Object.assign({}, {\r\n    method: \"GET\",\r\n  }, params) )\r\n  .then( (res) => {\r\n    return res.json();\r\n  } )\r\n  .then( (json) => {\r\n    if ( Array.isArray(json) && json.length === 1 ){\r\n      json = json[0];\r\n    }\r\n    app.setState({\r\n      [id]: json\r\n    });\r\n  } )\r\n  .catch( (err) => {\r\n    app.setState({\r\n      [id]: {\r\n        error: err\r\n      }\r\n    });\r\n  } );\r\n};\r\n\r\nexport const getInitialState = () => {\r\n  var state = {\r\n    view: \"unknown\", \r\n    args: { }\r\n  };\r\n  var loc = window.location.pathname;\r\n  var matchFound = false;\r\n  var matches = [\r\n    // Matches Home Page /\r\n    {\r\n      r: /^\\/$/,\r\n      v: \"home\"\r\n    },\r\n    {\r\n      r: /^\\/image\\/create$/,\r\n      v: \"image-create\"\r\n    },\r\n    // Matches /image/:id\r\n    {\r\n      r: /\\/image\\/(.*)/,\r\n      v: \"image\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /images\r\n    {\r\n      r: /\\/images/,\r\n      v: \"images\"\r\n    },\r\n    // Matches /containers/show/:type\r\n    {\r\n      r: /\\/containers\\/show\\/(.*)/,\r\n      v: \"containers\",\r\n      m: (match) => {\r\n        return {\r\n          type: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/run/:id\r\n    {\r\n      r: /\\/container\\/run\\/(.*)/,\r\n      v: \"container-run\",\r\n      m: (match) => {\r\n        return {\r\n          imageId: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/:id\r\n    {\r\n      r: /\\/container\\/(.*)/,\r\n      v: \"container\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /volumes\r\n    {\r\n      r: /\\/volumes\\/?$/,\r\n      v: \"volumes\"\r\n    },\r\n    // Matches /volume/:id\r\n    {\r\n      r: /\\/volume\\/(.*)/,\r\n      v: \"volume\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n  ];\r\n  matches.forEach( (check) => {\r\n    if ( matchFound === true ){\r\n      return;\r\n    }\r\n    var m = check.r.exec( loc );\r\n    if ( m  ){\r\n      if ( check.v ){\r\n        state.view = check.v;\r\n      }\r\n      state.args = check.m ? check.m(m) : {};\r\n      matchFound = true;\r\n    }\r\n  } );\r\n  return state;\r\n};\r\n\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default function(WrapperComponent){\r\n  return class extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.apiId = [];\r\n      this.repeating = [];\r\n      this.timer = null;\r\n      this.mounted = false;\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.mounted = true;\r\n      if ( this.repeating ){\r\n        this.timer = setInterval(this.timerCallback.bind(this), 1500);\r\n        this.timerCallback();\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if ( this.apiId ){\r\n        var messages = [],\r\n          type = \"success\",\r\n          prev = prevProps.message || null;\r\n        this.apiId.forEach( (id) => {\r\n          var apiResults = this.props[id];\r\n          if ( apiResults ){\r\n            if ( apiResults.error ){\r\n              messages.push(apiResults.error);\r\n              type = \"error\";\r\n            }\r\n            else if ( apiResults.results ){\r\n              var msg = \"\";\r\n              if ( apiResults.command ){\r\n                msg += `Successful Result\\n`;\r\n                msg += `Command:\\n ${apiResults.command}`;\r\n                msg += \"\\n\\n\";\r\n              }\r\n              msg += `Ouput:\\n${apiResults.results}`;\r\n              messages.push(msg);\r\n            }\r\n          }\r\n        } );\r\n        if ( messages && messages.length ){\r\n          var msgJoined = messages.join(\"\\n\\n\");\r\n          if ( prev !== msgJoined ){\r\n            Actions.setMessage(msgJoined, type);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      this.mounted = false;\r\n      if ( this.timer ){\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n      }\r\n      this.repeating.concat(this.apiId).forEach( (id) => {\r\n        var c = id;\r\n        if ( id && id.id ){\r\n          c = id.id;\r\n        }\r\n        Actions.clearStateKey(c);\r\n      } );\r\n    }\r\n\r\n    timerCallback(e){\r\n      if ( !this.mounted ){\r\n        if ( this.timer ){\r\n          clearInterval(this.timer);\r\n          this.timer = null;\r\n        }\r\n        return;\r\n      }\r\n      this.repeating.forEach( (item) => {\r\n        Actions.api(item.id, item.endpoint, item.params);\r\n      } );\r\n    }\r\n\r\n    render(){\r\n      var self = this;\r\n      var add =  (id) => {\r\n        if ( self.apiId.indexOf(id) < 0 ){\r\n          self.apiId.push(id);\r\n        }\r\n      };\r\n      var repeat = (id, endpoint, params = {}) => {\r\n        if ( self.mounted === true ){\r\n          console.warn(\"`addRepeatingApi` must be called before `withApiWatch` is mounted\")\r\n          return;\r\n        }\r\n        var found = self.repeating.find( (item) => {\r\n          return item.id === id;\r\n        } );\r\n        if ( !found ){\r\n          self.repeating.push({\r\n            id,\r\n            endpoint,\r\n            params,\r\n            timer: null\r\n          });\r\n        }\r\n      };\r\n      return (\r\n        <WrapperComponent \r\n          addRepeatingApi={repeat}\r\n          addApiWatchId={add}\r\n          setApiWatchId={add}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nclass Volume extends React.Component {\r\n  constructor(props){\r\n    super(props); \r\n    var self = this;\r\n    Actions.setArg(\"socketOpen\", false);\r\n    this.socket = new WebSocket(\"ws://localhost:8086\");\r\n    this.socket.onopen = () => {\r\n      Actions.setArg(\"socketOpen\", true);\r\n    };\r\n    this.socket.onclose = () => {\r\n      Actions.setArg(\"socketOpen\", false);\r\n    };\r\n    this.socket.onmessage = (msg) => {\r\n      var data;\r\n      try {\r\n        data = JSON.parse(msg.data);\r\n      } catch ( e ) {\r\n        return;\r\n      }\r\n      if ( data && data.type === \"volume-create-backup\" ){\r\n        if ( data && ( data.data || data.error ) ){\r\n          var output = _.get(self.props,\"args.output\") || [];\r\n          var line = data.data || data.error;\r\n          if ( line.match(/^\\(/) ){\r\n            if ( output.length && output[output.length - 1].match(/^\\(/) ){\r\n              output[output - 1] = line;\r\n            } else {\r\n              output.push(line);\r\n            }\r\n          } else {\r\n            output.push(line);\r\n          }\r\n          Actions.setArg(\"output\", output);\r\n        }\r\n        if ( data && data.finished === true ){\r\n          Actions.setArg(\"backupStarted\", false);\r\n        }\r\n        setTimeout( () => {\r\n          if ( self.stdout ){\r\n            self.stdout.scrollTop = self.stdout.scrollHeight;\r\n          }\r\n        }, 100 );\r\n      }\r\n    };\r\n\r\n    this.stdout = null;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.addApiWatchId(\"volume-delete\");\r\n    this.props.addRepeatingApi(\"volume-info\", \"volume/\" + this.getId());\r\n  }\r\n\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  handleBackupClick(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var name = this.getId();\r\n    var {\r\n      socketOpen\r\n    } = this.props.args;\r\n    if ( name && socketOpen ){\r\n      this.socket.send(JSON.stringify({\r\n        type: \"volume-create-backup\",\r\n        name\r\n      }));\r\n      Actions.setArg(\"backupStarted\", true);\r\n    } \r\n    else if ( !socketOpen ){\r\n      Actions.setMessage(\"Socket is not connected.  Please refresh the page.\", \"error\");\r\n    }\r\n    else if ( !name ) {\r\n      Actions.setMessage(\"Please enter a path first.\", \"error\");\r\n    }\r\n  }\r\n\r\n  handleDeleteClick(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    if ( !window.confirm(\"Are you sure you want to delete this image?\") ){\r\n      return;\r\n    } \r\n    Actions.api(\"volume-delete\", \"volume/\" + this.getId(), {\r\n      method: \"DELETE\"\r\n    } );\r\n  }\r\n\r\n  parseValue(val){\r\n    if ( Array.isArray(val) ){\r\n      return val.join(\", \");\r\n    }\r\n    switch ( typeof val ){\r\n      case \"string\":\r\n      case \"number\":\r\n        return val;\r\n      case \"object\":\r\n        return this.objectToString(val);\r\n      default:\r\n        return val;\r\n    }\r\n  }\r\n\r\n  objectToString(obj){\r\n    return (\r\n      <ul>\r\n        { Object.keys(obj).map( (k) => {\r\n          return (\r\n            <li key={`entry-${k}`}><strong>{k}</strong> => {this.parseValue(obj[k])}</li>\r\n          );\r\n        } ) }\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    var volume = _.get(this.props, \"volume-info.results.basic\"),\r\n      volumeDetails = _.get(this.props, \"volume-info.results.meta\"),\r\n      socketOpen = _.get(this.props,\"args.socketOpen\") || false,\r\n      output = _.get(this.props, \"args.output\"),\r\n      backupStarted = _.get(this.props, \"args.backupStarted\") || false,\r\n      self = this;\r\n\r\n    var keysUsed = [];\r\n\r\n    return (\r\n      <div className=\"Volume\">\r\n        <h1>Volume {this.getId()}</h1>\r\n        <p>This page container information about a specific Volume, and provides simple actions to manage the Volume.</p>\r\n        <p>\r\n          <span className={`toggler danger${(socketOpen === true ? \" checked\" : \"\")}`}> \r\n            Connection Open\r\n          </span><br />\r\n          <em>This page uses WebSockets to stream the output of the build process to this page.  If the indicator above is red, there is no connection.</em><br />\r\n          { backupStarted ? (\r\n            <span className={`toggler danger${(backupStarted === true ? \" checked\" : \"\")}`}> \r\n              Backup Started\r\n            </span>\r\n          ) : null }\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.handleDeleteClick.bind(this)}>\r\n              Delete Volume\r\n            </a>\r\n          </li>\r\n          { !backupStarted  ? (\r\n            <li>\r\n              <a href=\"void\" onClick={this.handleBackupClick.bind(this)}>\r\n                Create Backup\r\n              </a>\r\n            </li>\r\n          ) : null }\r\n        </ul>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <table className=\"border\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    Name\r\n                  </th>\r\n                  <th>\r\n                    Value \r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { volume ? (\r\n                  Object.keys(volume).map( (key, index) => {\r\n                    keysUsed.push(key.toLowerCase());\r\n                    return (\r\n                      <tr key={`volume-basic-${key}-${index}`}>\r\n                        <td>{key}</td><td>{this.parseValue(volume[key])}</td>\r\n                      </tr>\r\n                    );\r\n                  } )\r\n                ) : null }\r\n                { volumeDetails ? (\r\n                  Object.keys(volumeDetails).map( (key, index) => {\r\n                    if ( keysUsed.indexOf(key.toLowerCase()) >= 0 ){\r\n                      return null;\r\n                    }\r\n                    return (\r\n                      <tr key={`volume-meta-${key}-${index}`}>\r\n                        <td>{key}</td><td>{this.parseValue(volumeDetails[key])}</td>\r\n                      </tr>\r\n                    );\r\n                  } )\r\n                ) : null }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre \r\n            className=\"console\" \r\n            key=\"console\"\r\n            ref={ (r) => {\r\n              self.stdout = r;\r\n            } }\r\n          >\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withApiWatch(Volume);\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default (props) => {\r\n  const listener = (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    window.history.pushState({}, props.title || \"Page Change\", props.to);\r\n    if ( typeof props.onClick === \"function\" ){\r\n      props.onClick();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  };\r\n  return (\r\n    <a href={props.to} onClick={listener} className={props.className || \"\"}>\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport Link from '../components/Link';\r\nimport withApiWatch from '../components/withApiWatch';\r\n\r\nclass Volumes extends React.Component {\r\n  componentDidMount(){\r\n    this.props.addRepeatingApi(\"volumes\", \"volumes\");\r\n  }\r\n\r\n  render(){\r\n    var volumes = _.get(this.props, \"volumes.output\") || [];\r\n    return (\r\n      <div className='Images'>\r\n        <h1>Images</h1>\r\n        <p>This page lists the available images</p>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/volume/create\">\r\n              Create new Image\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        { volumes && volumes.length ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                { Object.keys(volumes[0]).map( (col,i) => {\r\n                  return (\r\n                    <th key={`col-${col}`}>{col}</th>\r\n                  );\r\n                } ) }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { volumes.map( (vol, index) => {\r\n                return (\r\n                  <tr key={`vol-${index}`}>\r\n                    { Object.keys(vol).map( (v,i) => {\r\n                      var val = vol[v];\r\n                      if ( v === \"VOLUME NAME\" ){\r\n                        val = <Link to={`/volume/${vol[v]}`}>{vol[v]}</Link>;\r\n                      }\r\n                      return (\r\n                        <td key={`vol-key-${v}`}>\r\n                          {val}\r\n                        </td>\r\n                      );\r\n                    } ) }\r\n                  </tr>\r\n                );\r\n              } ) }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Volumes);\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\nimport * as Actions from '../actions';\r\n\r\nclass Images extends React.Component {\r\n  componentDidMount(){\r\n    Actions.api(\"images\", \"images\");\r\n  }\r\n\r\n  render(){\r\n    var images = this.props.images || {};\r\n    return (\r\n      <div className='Images'>\r\n        <h1>Images</h1>\r\n        <p>This page lists the available images</p>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/image/create\">\r\n              Create new Image\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        { images && images.output ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image ID</th>\r\n                <th>Repository</th>\r\n                <th>Size</th>\r\n                <th>Created</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { images.output.map( (image, index) => {\r\n                if ( !image['IMAGE ID'] ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={image['IMAGE ID']}>\r\n                    <td>\r\n                      <Link to={`/image/${image['IMAGE ID']}`}>{image['IMAGE ID']}</Link>\r\n                    </td>\r\n                    <td>\r\n                      {image.REPOSITORY}\r\n                    </td>\r\n                    <td>\r\n                      {image.SIZE}\r\n                    </td>\r\n                    <td>\r\n                      {image.CREATED}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              } ) }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport _ from 'lodash';\r\nimport './Images.css';\r\n\r\nclass Image extends React.Component {\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.addRepeatingApi(`image-${this.getId()}`, `image/inspect/${this.getId()}`);\r\n    this.props.addApiWatchId(`image-${this.getId()}`);\r\n    this.props.addApiWatchId(`run-img-command`);\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  imageCommand(cmd){\r\n    var self = this;\r\n    return (e) => {\r\n      e.preventDefault();\r\n      var params = {\r\n        method: \"post\"\r\n      };\r\n      if ( cmd === \"force-rm\" ){\r\n        cmd = \"rm\";\r\n        params.body = JSON.stringify({\r\n          options: [\"-f\"]\r\n        });\r\n      }\r\n      Actions.api(\"run-img-command\", `image/${self.getId()}/perform/${cmd}`, params );\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var image = this.props[`image-${this.getId()}`] || {},\r\n      isLoading = _.get(this.props,`image-${this.getId()}.isLoading`) || false,\r\n      isShowFull = this.props.args.isShowFull || false;\r\n    if ( Array.isArray(image) ){\r\n      image = image[0]\r\n    }\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Image {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for an Image</p>\r\n        <h2>Details</h2>\r\n        { isLoading && !image.Size ? (\r\n          <p>Please wait while the image details is loaded</p>\r\n        ) : null }\r\n        <ul className=\"inline\">\r\n          <li>\r\n            <Link to={`/container/run/${this.getId()}`}>\r\n              Create a Container\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.imageCommand(\"rm\")}>\r\n              Delete Image\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.imageCommand(\"force-rm\")}>\r\n              Force Delete Image\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a key=\"full-link\" href=\"void\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  Author\r\n                </td>\r\n                <td>\r\n                  {image.Author}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Architecture\r\n                </td>\r\n                <td>\r\n                  {image.Architecture}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  OS\r\n                </td>\r\n                <td>\r\n                  {image.Os}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Size\r\n                </td>\r\n                <td>\r\n                  {image.Size > 0 ? (\r\n                    <ul className=\"no-bullets\">\r\n                      <li>\r\n                        {(image.Size/1000000).toFixed(2)} MB\r\n                      </li>\r\n                      <li>\r\n                        {(image.Size/1000000000).toFixed(2)} GB\r\n                      </li>\r\n                    </ul>\r\n                  ) : null }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Tags\r\n                </td>\r\n                <td>\r\n                  { image.RepoTags && image.RepoTags.length ? (\r\n                    <ul className=\"no-bullets\">\r\n                      {image.RepoTags.map( (tag, index) => {\r\n                        return (\r\n                          <li key={`tag-${index}`}>{tag}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Exposed Ports\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.ExposedPorts ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.ExposedPorts).map((key,index) => {\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Environment Variables\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Env ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { image.Config.Env.map((key,index) => {\r\n                        if ( key.match(/^PATH/) ){\r\n                          return null;\r\n                        }\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Labels\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Labels ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.Labels).map((key,index) => {\r\n                        return (\r\n                          <li key={`label-${key}`}><em>{key}</em> : \"{image.Config.Labels[key]}\"</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(image, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Image);\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nclass ImageCreate extends React.Component {\r\n  constructor(props){\r\n    super(props); \r\n    var self = this;\r\n    Actions.setArg(\"socketOpen\", false);\r\n    this.socket = new WebSocket(\"ws://localhost:8086\");\r\n    this.socket.onopen = () => {\r\n      Actions.setArg(\"socketOpen\", true);\r\n    };\r\n    this.socket.onclose = () => {\r\n      Actions.setArg(\"socketOpen\", false);\r\n    };\r\n    this.socket.onmessage = (msg) => {\r\n      var data;\r\n      try {\r\n        data = JSON.parse(msg.data);\r\n      } catch ( e ) {\r\n        return;\r\n      }\r\n      if ( data && data.type === \"build-image\" ){\r\n        if ( data && ( data.data || data.error ) ){\r\n          var output = _.get(self.props,\"args.output\") || [];\r\n          var line = data.data || data.error;\r\n          if ( line.match(/^\\(/) ){\r\n            if ( output.length && output[output.length - 1].match(/^\\(/) ){\r\n              output[output - 1] = line;\r\n            } else {\r\n              output.push(line);\r\n            }\r\n          } else {\r\n            output.push(line);\r\n          }\r\n          Actions.setArg(\"output\", output);\r\n        }\r\n        if ( data && data.finished === true ){\r\n          Actions.setArg(\"buildStarted\", false);\r\n        }\r\n        setTimeout( () => {\r\n          if ( self.stdout ){\r\n            self.stdout.scrollTop = self.stdout.scrollHeight;\r\n          }\r\n        }, 100 );\r\n      }\r\n    };\r\n\r\n    this.stdout = null;\r\n  }\r\n\r\n  handleFormSubmit(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var {\r\n      path,\r\n      name,\r\n      socketOpen\r\n    } = this.props.args;\r\n    if ( path && socketOpen ){\r\n      this.socket.send(JSON.stringify({\r\n        type: \"build-image\",\r\n        name,\r\n        path\r\n      }));\r\n      Actions.setArg(\"buildStarted\", true);\r\n    } \r\n    else if ( !socketOpen ){\r\n      Actions.setMessage(\"Socket is not connected.  Please refresh the page.\", \"error\");\r\n    }\r\n    else if ( !path ) {\r\n      Actions.setMessage(\"Please enter a path first.\", \"error\");\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var socketOpen = _.get(this.props,\"args.socketOpen\") || false,\r\n      output = _.get(this.props, \"args.output\"),\r\n      buildStarted = _.get(this.props, \"args.buildStarted\") || false,\r\n      path = _.get(this.props,\"args.path\") || \"\",\r\n      name = _.get(this.props,\"args.name\") || \"\",\r\n      self = this;\r\n\r\n    return (\r\n      <div className=\"Image-create\">\r\n        <h1>Create an Image</h1>\r\n        <p>This page can be used to build an image from a Dockerfile</p>\r\n        <p>\r\n          <span className={`toggler danger${(socketOpen === true ? \" checked\" : \"\")}`}> \r\n            Connection Open\r\n          </span><br />\r\n          <em>This page uses WebSockets to stream the output of the build process to this page.  If the indicator above is red, there is no connection.</em><br />\r\n          { buildStarted ? (\r\n            <span className={`toggler danger${(buildStarted === true ? \" checked\" : \"\")}`}> \r\n              Build Started\r\n            </span>\r\n          ) : null }\r\n        </p>\r\n        <form onSubmit={this.handleFormSubmit.bind(this)}>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Name</strong> <em>(optional)</em><br />\r\n                  Please enter name to easily identify this image\r\n                </p>\r\n                <input \r\n                  type=\"text\" \r\n                  onChange={(e) => {\r\n                    Actions.setArg(\"name\", e.target.value);\r\n                  }}\r\n                  value={name}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Build Directory</strong><br />\r\n                  Please enter the full path of the <strong>directory</strong> where your Dockerfile is located\r\n                </p>\r\n                <input \r\n                  type=\"text\" \r\n                  onChange={(e) => {\r\n                    Actions.setArg(\"path\", e.target.value);\r\n                  }}\r\n                  value={path}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <button type=\"submit\">Create Image</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre \r\n            className=\"console\" \r\n            key=\"console\"\r\n            ref={ (r) => {\r\n              self.stdout = r;\r\n            } }\r\n          >\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withApiWatch(ImageCreate);\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Images.css';\r\n\r\nclass Container extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n  }\r\n\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.mounted = true;\r\n    var id = this.getId(),\r\n      key = `container-${id}`;\r\n    this.props.addApiWatchId(key);\r\n    this.props.addApiWatchId(\"run-command\");\r\n    Actions.api(key, `container/inspect/${id}`);\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( self.props[key].isLoading === true ){\r\n        return;\r\n      }\r\n      if ( self.props[key].error ){\r\n        clearInterval(self.timer);\r\n        self.timer = null;\r\n        return;\r\n      }\r\n      Actions.api(key, `container/inspect/${id}`);\r\n    }, 1000 );\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  containerCommand(cmd){\r\n    var self = this;\r\n    return (e) => {\r\n      e.preventDefault();\r\n      Actions.api(\"run-command\", `container/${self.getId()}/perform/${cmd}`, {\r\n        method: \"post\"\r\n      } );\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var container = this.props[`container-${this.getId()}`] || {},\r\n      isShowFull = this.props.args.isShowFull || false;\r\n    if ( Array.isArray(container) ){\r\n      container = container[0];\r\n    }\r\n    var state = container.State ? container.State.Status : null;\r\n    var stateFieldList = [\r\n      \"Status\",\"Running\",\"Paused\",\"Restarting\",\"Dead\"\r\n    ];\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Container {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for a Container</p>\r\n        <h2>Details</h2>\r\n        <ul className=\"inline\">\r\n          { state === \"exited\" ? [\r\n            <li key=\"start\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"start\")}>\r\n                Start\r\n              </a>\r\n            </li>,\r\n            <li key=\"remove\">\r\n              <a href=\"void\" className=\"text-danger\" onClick={this.containerCommand(\"rm\")}>\r\n                Remove\r\n              </a>\r\n            </li>,\r\n          ] : null } \r\n          { state === \"running\" ? [\r\n            <li key=\"stop\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"stop\")}>\r\n                Stop\r\n              </a>\r\n            </li>,\r\n            <li key=\"pause\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"pause\")}>\r\n                Pause\r\n              </a>\r\n            </li>,\r\n            <li key=\"restart\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"restart\")}>\r\n                Restart\r\n              </a>\r\n            </li>\r\n          ] : null }\r\n          { state === \"paused\" ? (\r\n            <li>\r\n              <a href=\"void\" onClick={this.containerCommand(\"unpause\")}>\r\n                Unpause\r\n              </a>\r\n            </li>\r\n          ) : null }\r\n          <li>\r\n            <a key=\"full-link\" href=\"void\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { state === \"running\" ? (\r\n                <tr>\r\n                  <td>\r\n                    Started At\r\n                  </td>\r\n                  <td>\r\n                    {container.State.StartedAt}\r\n                  </td>\r\n                </tr>\r\n              ) : null }\r\n              { container.State ? (\r\n              <tr>\r\n                <td>\r\n                  State\r\n                </td>\r\n                <td>\r\n                  <ul>\r\n                    { stateFieldList.map( (field) => {\r\n                      return (\r\n                        <li key={field}>\r\n                          <strong>{field}</strong> : {\"\" + container.State[field]}\r\n                        </li>\r\n                      );\r\n                    } ) }\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n              { container.Config && container.Config.Image ? (\r\n              <tr>\r\n                <td>\r\n                  Image\r\n                </td>\r\n                <td>\r\n                  <Link to={`/image/${container.Config.Image}`}>{container.Config.Image}</Link>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(container, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Container);\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Containers.css';\r\n\r\nclass Containers extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n  }\r\n\r\n  getType(){\r\n    var type = this.props.args || {};\r\n    type = type.type || \"all\";\r\n    return type;\r\n  }\r\n\r\n  componentDidMount(){\r\n    var type = this.getType();\r\n    Actions.api(\"containers\", `containers/show/${type}`);\r\n    this.mounted = true;\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( !self.mounted ){\r\n        clearInterval(self.timer);\r\n        return;\r\n      }\r\n      Actions.api(\"containers\", `containers/show/${self.getType()}`);\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    var type = this.getType();\r\n    if ( prevProps.args.type !== type ){\r\n      Actions.api(\"containers\", `containers/show/${type}`);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var args = this.props.args || {},\r\n      containers = this.props.containers || [];\r\n    if ( containers.output && containers.output.length ){\r\n      containers = containers.output;\r\n    }\r\n    var first = containers.length ? containers[0] : null;\r\n    return (\r\n      <React.Fragment>\r\n        <div className='Containers'>\r\n          <h1>Containers</h1>\r\n          <div className=\"Containers-options\">\r\n            <Link to={`/containers/show/${this.getType() === \"all\" ? \"running\" : \"all\"}`} className={`toggler${(args.type === \"all\" ? \" checked\" : \"\")}`}>\r\n              Show All\r\n            </Link>\r\n          </div>\r\n          { args.type === \"all\" ? (\r\n            <p>This page is showing all containers.</p>\r\n          ) : (\r\n            <p>This page is showing only the running containers.</p>\r\n          ) }\r\n          { first ? (\r\n            <table className=\"border\">\r\n              <thead>\r\n                <tr>\r\n                  { Object.keys(first).map( (col) => <th key={col}>{col}</th> ) }\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              { containers.map ( (container, index) => {\r\n                var total = 0,\r\n                  emptyCount = 0;\r\n                Object.keys(container).forEach( (con,i) => {\r\n                  total++;\r\n                  if ( !container[con] ){\r\n                    emptyCount++;\r\n                  }\r\n                } );\r\n                // Skip Empty row\r\n                if ( total === emptyCount ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={`row-${index}`}>\r\n                    { Object.keys(container).map( (con,i) => {\r\n                      var v = container[con];\r\n                      if ( con === \"IMAGE\" ){\r\n                        v = <Link to={`/image/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"CONTAINER ID\" ){\r\n                        v = <Link to={`/container/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"PORTS\" && v.length ){\r\n                        v = (\r\n                          <ul>\r\n                            { v.split(/,/).map( (line, lineI) => {\r\n                              return (\r\n                                <li key={`line-${lineI}`}>\r\n                                  {line}\r\n                                </li>\r\n                              );\r\n                            } ) }\r\n                          </ul>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <td key={`row-${i}`}>{v}</td> \r\n                      );\r\n                    } ) }\r\n                  </tr>\r\n                );\r\n              } ) }\r\n              </tbody>\r\n            </table>\r\n          ) : null }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Containers;\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport _ from 'lodash';\r\n\r\nclass ContainerRun extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      flag: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    var key = `image-${this.props.args.imageId}`;\r\n    this.props.addApiWatchId(\"container_run\");\r\n    this.props.addApiWatchId(key);\r\n    if ( !this.props[key] ){\r\n      Actions.api(key, `image/inspect/${this.props.args.imageId}`);\r\n    }\r\n    Actions.api(\"volumes\", \"volumes\");\r\n  }\r\n \r\n  handleForm(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var args = this.props.args || {},\r\n      options = [],\r\n      mounts = [];\r\n    var map = {\r\n      flagRm: \"--rm\",\r\n      flagTty: \"-t\"\r\n    };\r\n    Object.keys(args).forEach( (key) => {\r\n      if ( map.hasOwnProperty(key) ){\r\n        var v = map[key].split(/\\s/);\r\n        options.push({\r\n          key: v[0],\r\n          value: v[1] || \"\"\r\n        });\r\n      }\r\n    } );\r\n    if ( args.name && args.name.length ){\r\n      options.push({\r\n        key: \"--name\",\r\n        value: args.name\r\n      });\r\n    }\r\n    if ( args.mounts && args.mounts.length ){\r\n      args.mounts.forEach( (vol) => {\r\n        if ( vol.local && vol.remote ){\r\n          mounts.push(vol);\r\n        }\r\n      } );\r\n    }\r\n    Actions.api(\"container_run\", `container/run/${this.props.args.imageId}`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        options,\r\n        mounts,\r\n        additionalArgs: args.additionalArgs || \"\",\r\n        ports: args.ports,\r\n      })\r\n    });\r\n  }\r\n\r\n  addBountMount(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var mounts = this.props.args.mounts || [];\r\n    mounts.push({\r\n      local: \"\",\r\n      remote: \"\"\r\n    });\r\n    Actions.setArg(\"mounts\", mounts);\r\n  }\r\n\r\n  addVolume(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var volumes = this.props.args.volumes || [];\r\n    volumes.push({\r\n      volumeId: \"\",\r\n      remote: \"\"\r\n    });\r\n    Actions.setArg(\"volumes\", volumes);\r\n  }\r\n\r\n  inputListener(name){\r\n    var self = this;\r\n    return (e) => {\r\n      switch ( name ){\r\n        case \"flagRm\":\r\n          Actions.setArg(\"flagRm\", self.props.args.flagRm ? false : true);\r\n          self.setState({\r\n            flag: !self.state.flag\r\n          });\r\n          break;\r\n\r\n        case \"flagTty\":\r\n          Actions.setArg(\"flagTty\", self.props.args.flagTty === true ? false : true);\r\n          break;\r\n\r\n        default:\r\n          var match,\r\n            i,\r\n            mounts,\r\n            argType;\r\n          if ( name.match(/port_/) ){\r\n            var ports = this.props.args.ports || {};\r\n            ports[name.replace(/port_/,'')] = e.target.value;\r\n            Actions.setArg(\"ports\", ports);\r\n          } \r\n          else if ( match = name.match(/(mounts|volumes)-(\\d+)-(volumeId|local|remote)/) ){\r\n            argType = match[1];\r\n            i = match[2];\r\n            var type = match[3];\r\n            mounts = self.props.args[argType] || [];\r\n            mounts = mounts.slice();\r\n            if ( mounts[i] ){\r\n              mounts[i][type] = e.target.value;\r\n            }\r\n            Actions.setArg(argType, mounts);\r\n          }\r\n          else if ( match = name.match(/remove-(volumes|mounts)-(\\d+)/) ){\r\n            e.preventDefault();\r\n            argType = match[1];\r\n            i = match[2];\r\n            mounts = ( _.get(self.props,`args.${argType}`) || [] ).slice();\r\n            mounts.splice(i,1);\r\n            Actions.setArg(argType, mounts);\r\n          }\r\n          else {\r\n            Actions.setArg(name, e.target.value);\r\n          }\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var imageKey = `image-${this.props.args.imageId}`;\r\n    var image = this.props[imageKey] || {},\r\n      args = this.props.args,\r\n      ports = args.ports || {},\r\n      additionalArgs = args.additionalArgs || \"\",\r\n      mounts = args.mounts || [],\r\n      volumes = args.volumes || [],\r\n      availableVolumes = _.get(this.props, \"volumes.output\") || [];\r\n    if ( Array.isArray(image) ){\r\n      image = image[0];\r\n    }\r\n    var self = this;\r\n    return (\r\n      <div className=\"Container-run\">\r\n        <h1>Start a Container</h1>\r\n        <p>From this page you can start a new container using the selected image.  Please customize the details below to set different options on the container.</p>\r\n        <form onSubmit={this.handleForm.bind(this)}>\r\n          <p>\r\n            <strong>Name</strong> <em>(optional)</em><br />\r\n            <em>Gives the container a name so you can easily run commands on the container.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input value={args.name || \"\"} onChange={this.inputListener(\"name\")} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/** ==================== FLAGS ==================== **/}\r\n          <p><strong>Flags</strong></p>\r\n          <div className=\"flex-col\">\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagRm} onChange={this.inputListener(\"flagRm\")} checked={args.flagRm ? true : false} /> Don't Persist\r\n              </label>\r\n              &nbsp;- <em>When the container is stopped, it is automatically removed, and can't be restarted.</em>\r\n            </span>\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagTty} onChange={this.inputListener(\"flagTty\")} checked={args.flagTty ? true : false} /> Prevent Exit\r\n                &nbsp;- <em>Containers exit if a script isn't set to run at start, this flag prevents the container from exiting</em> \r\n              </label>\r\n            </span>\r\n          </div>\r\n          {/** ==================== PORT MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Port Mapping</strong> <em>(optional)</em><br />\r\n            <em>If left empty, that port will not be exposed to localhost</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <div className=\"flex-row flex-justify-between\">\r\n                  <span>Local Port</span><span></span><span>Container Port</span>\r\n                </div>\r\n            { image.Config && image.Config.ExposedPorts ? ( \r\n              Object.keys(image.Config.ExposedPorts).map( (port) => {\r\n                port = port.replace(/(\\d+).*/,\"$1\");\r\n                return (\r\n                  <div key={`port-${port}`} className=\"flex-row flex-justify-between\">\r\n                    <div>\r\n                      <input onChange={self.inputListener(`port_${port}`)} value={ports[port] || \"\"} />\r\n                    </div>\r\n                    <span>=></span>\r\n                    <div>\r\n                      <input readOnly value={port} />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              } )\r\n            ) : \"No Exposed Ports\" }\r\n            </div>\r\n          </div>\r\n          {/** ==================== BIND MOUNT MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Volume Binding Mapping</strong> <em>(optional)</em><br />\r\n            <em>Binds a local directory to a directory in the container.  Please use full paths</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            { mounts.map( (vol,index) => {\r\n              return (\r\n                <div key={`vol-${index}`} className=\"flex-row flex-justify-between\">\r\n                  <div>\r\n                    <input placeholder=\"local\" value={vol.local} onChange={self.inputListener(`mounts-${index}-local`)} />\r\n                  </div>\r\n                  <span>=></span>\r\n                  <div>\r\n                    <input placeholder=\"container\" value={vol.remote} onChange={self.inputListener(`mounts-${index}-remote`)} /> &nbsp;\r\n                    <a href=\"void\" onClick={this.inputListener(`remove-mounts-${index}`)} className=\"no-style text-danger\">- Delete</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            } ) }\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <a href=\"void\" onClick={this.addBountMount.bind(this)}>\r\n                + Add a Local Mount\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/** ==================== VOLUME MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Volume Mapping</strong> <em>(optional)</em><br />\r\n            <em>Binds a docker volume to a directory in the container.  Please use full paths</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            { volumes.map( (vol,index) => {\r\n              return (\r\n                <div key={`vol-${index}`} className=\"flex-row flex-justify-between\">\r\n                  <div>\r\n                    <div className=\"flex-col\">\r\n                      <select value={vol.volumeId || \"\"} onChange={self.inputListener(`volumes-${index}-volumeId`)}>\r\n                        { availableVolumes.map( (vol, vi) => {\r\n                          return (\r\n                            <option key={vol['VOLUME NAME']}>{vol['VOLUME NAME']}</option>\r\n                          );\r\n                        } ) }\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <span>=></span>\r\n                  <div>\r\n                    <input placeholder=\"container\" value={vol.remote} onChange={self.inputListener(`volume-${index}-remote`)} /> &nbsp;\r\n                    <a href=\"void\" onClick={this.inputListener(`remove-volumes-${index}`)} className=\"no-style text-danger\">- Delete</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            } ) }\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <a href=\"void\" onClick={this.addVolume.bind(this)}>\r\n                + Add a Volume\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/** ==================== Additional Arguments ==================== **/}\r\n          <p>\r\n            <strong>Additional Arguments</strong><br />\r\n            <em>Enter any other options/arguments to the command.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input placeholder=\"docker run arguments\" value={additionalArgs} onChange={self.inputListener(`additionalArgs`)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button type=\"submit\">Start Container</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(ContainerRun);\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div>\r\n      <h1>404 - Page Not Found</h1>\r\n      <p>\r\n        Return to <Link to=\"/containers/show/running\">Containers</Link> page.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Docker GUI</h1>      \r\n      <p>\r\n        This is a simple interface for managing your local Docker images, containers, and volumes (<em>coming soon</em>)\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport * as Actions from './actions';\r\nimport Volume from './pages/Volume';\r\nimport Volumes from './pages/Volumes';\r\nimport Images from './pages/Images';\r\nimport Image from './pages/Image';\r\nimport ImageCreate from './pages/ImageCreate';\r\nimport Container from './pages/Container';\r\nimport Containers from './pages/Containers';\r\nimport ContainerRun from './pages/ContainerRun';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport Home from './pages/Home';\r\nimport Link from './components/Link';\r\nimport './App.scss';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    /**\r\n     * Create Global access reference to\r\n     * Main App Wrapper Component\r\n     */\r\n    Actions.setApp(this);\r\n\r\n    this.originalPopstateListener = window.onpopstate;\r\n\r\n    /**\r\n     * Main App State\r\n     * Changes are managed through\r\n     * Actions.js function calls\r\n     */\r\n    this.state = Actions.getInitialState();\r\n  }\r\n\r\n  handleHistoryEvent(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.onpopstate = this.handleHistoryEvent;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.onpopstate = this.originalPopstateListener;\r\n  }\r\n\r\n  route(viewName){\r\n    var ret = null;\r\n    switch ( viewName ){\r\n      // Containers List Page\r\n      case \"containers\":\r\n        ret = <Containers {...this.state} />;\r\n        break;\r\n\r\n      // Images List Page\r\n      case \"images\":\r\n        ret = <Images {...this.state} />;\r\n        break;\r\n\r\n      // Image Create Page\r\n      case \"image-create\":\r\n        ret = <ImageCreate {...this.state} />;\r\n        break;\r\n\r\n      // Image Summary Page\r\n      case \"image\":\r\n        ret = <Image {...this.state} />;\r\n        break;\r\n\r\n      // Start Container from Image Page\r\n      case \"container-run\":\r\n        ret = <ContainerRun {...this.state} />;\r\n        break;\r\n\r\n      // Container Summary Page\r\n      case \"container\":\r\n        ret = <Container {...this.state} />;\r\n        break;\r\n        \r\n      // Volume Summary Page\r\n      case \"volume\":\r\n        ret = <Volume {...this.state} />;\r\n        break;\r\n\r\n      // Volumes List Page\r\n      case \"volumes\":\r\n        ret = <Volumes {...this.state} />;\r\n        break;\r\n        \r\n      // Home Page\r\n      case \"home\":\r\n        ret = <Home />;\r\n        break;\r\n\r\n      default: \r\n        ret = <PageNotFound />;\r\n        break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <ul className=\"App-nav\">\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/containers/show/running\">Containers</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/images\">Images</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/volumes\">Volumes</Link>\r\n            </li>\r\n          </ul>\r\n          <p>\r\n            <a style={{color:\"white\",textDecoration: \"none\"}} href=\"https://github.com/chrisonbass/docker-gui\">@chrisonbass</a>\r\n          </p>\r\n        </header>\r\n        {/** =========== OUTPUT ERROR ============= **/}\r\n        { this.state.message && (\"\" + this.state.message).length ? (\r\n          <div className={`App-msg-${this.state.messageType === \"success\" ? \"success\" : \"error\"}`}>\r\n            <a href=\"void\" onClick={Actions.clearMessage} className=\"close\">x</a>\r\n            <pre>\r\n              {this.state.message}\r\n            </pre>\r\n          </div>\r\n        ) : null }\r\n\r\n        <div className=\"App-body\">\r\n          { this.route(this.state.view) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}