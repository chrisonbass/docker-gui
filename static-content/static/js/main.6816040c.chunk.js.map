{"version":3,"sources":["components/withSocket.js","actions.js","components/withApiWatch.js","pages/Volume.js","components/Link.js","pages/Volumes.js","pages/Images.js","pages/Image.js","pages/ImageCreate.js","pages/Container.js","pages/Containers.js","pages/ContainerRun.js","pages/PageNotFound.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["WrapperComponent","app","setApp","appInstance","setState","state","setMessage","message","messageType","length","console","error","clearMessage","e","preventDefault","setArg","name","value","Object","assign","args","api","id","endpoint","params","isLoading","fetch","method","then","res","json","Array","isArray","catch","err","getInitialState","view","loc","window","location","pathname","matchFound","r","v","m","match","type","imageId","forEach","check","exec","props","apiId","repeating","timer","mounted","this","setInterval","timerCallback","bind","prevProps","messages","prev","apiResults","push","results","msg","command","msgJoined","join","Actions","clearInterval","concat","key","c","hasOwnProperty","item","self","add","indexOf","addRepeatingApi","found","find","warn","addApiWatchId","setApiWatchId","React","Component","withApiWatch","socket","WebSocket","onopen","onclose","onmessage","data","JSON","parse","output","_","get","line","finished","setTimeout","stdout","scrollTop","scrollHeight","getId","socketOpen","send","stringify","confirm","val","objectToString","obj","keys","map","k","parseValue","volume","volumeDetails","backupStarted","keysUsed","className","href","onClick","handleDeleteClick","handleBackupClick","index","toLowerCase","ref","to","history","pushState","title","children","volumeName","prompt","body","volumes","handleNewVolume","col","i","vol","Link","Images","images","image","REPOSITORY","SIZE","CREATED","isShowFull","cmd","options","Size","imageCommand","toggleShowFullDetails","Author","Architecture","Os","toFixed","RepoTags","tag","Config","ExposedPorts","replace","Env","Labels","path","buildStarted","onSubmit","handleFormSubmit","onChange","target","Container","setSocketKey","volName","sendMessage","sourceDirectory","containerId","container","isSocketOpen","State","Status","containerCommand","StartedAt","field","Image","stdoutRef","withSocket","isOpen","Containers","getType","containers","first","Fragment","total","emptyCount","con","split","lineI","flag","mounts","flagRm","flagTty","local","remote","volumeId","additionalArgs","ports","argType","slice","splice","imageKey","availableVolumes","handleForm","inputListener","checked","port","readOnly","placeholder","addBountMount","vi","addVolume","App","originalPopstateListener","onpopstate","handleHistoryEvent","viewName","ret","Home","PageNotFound","style","color","textDecoration","route","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6816040c.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nexport default function(WrapperComponent){\r\n  return class extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.type = null;\r\n      this.stdout = null;\r\n\r\n      var self = this;\r\n      Actions.setArg(\"socketOpen\", false);\r\n      this.socket = new WebSocket(\"ws://localhost:8086\");\r\n      this.socket.onopen = () => {\r\n        Actions.setArg(\"socketOpen\", true);\r\n      };\r\n      this.socket.onclose = () => {\r\n        Actions.setArg(\"socketOpen\", false);\r\n      };\r\n      this.socket.onmessage = (msg) => {\r\n        var data;\r\n        try {\r\n          data = JSON.parse(msg.data);\r\n        } catch ( e ) {\r\n          return;\r\n        }\r\n        if ( data && data.type === self.type ){\r\n          if ( data && ( data.data || data.error ) ){\r\n            var output = _.get(self.props,\"args.output\") || [];\r\n            var line = data.data || data.error;\r\n            if ( line.match(/^\\(/) ){\r\n              if ( output.length && output[output.length - 1].match(/^\\(/) ){\r\n                output[output - 1] = line;\r\n              } else {\r\n                output.push(line);\r\n              }\r\n            } else {\r\n              output.push(line);\r\n            }\r\n            Actions.setArg(\"output\", output);\r\n          }\r\n          if ( data && data.finished === true ){\r\n            Actions.setArg(\"backupStarted\", false);\r\n          }\r\n          setTimeout( () => {\r\n            if ( self.stdout ){\r\n              self.stdout.scrollTop = self.stdout.scrollHeight;\r\n            }\r\n          }, 100 );\r\n        }\r\n      };\r\n    }\r\n\r\n    sendMessage(msg){\r\n      var message;\r\n      var isOpen = _.get(this.props, \"args.socketOpen\");\r\n      if ( typeof msg === \"object\" ){\r\n        if ( !Array.isArray(msg) && !msg.type ){\r\n          message = JSON.stringify(\r\n            Object.assign( {}, {\r\n              type: this.type\r\n            }, msg )\r\n          );\r\n        } else {\r\n          message = JSON.stringify(msg);\r\n        }\r\n      } else {\r\n        message = \"\" + msg;\r\n      }\r\n      if ( message && isOpen ){\r\n        this.socket.send(message);\r\n      }\r\n    }\r\n\r\n    render(){\r\n      var self = this;\r\n      return (\r\n        <WrapperComponent \r\n          stdoutRef={(r) => {\r\n            if ( r ){\r\n              self.stdout = r;\r\n            }\r\n          }}\r\n          sendMessage={this.sendMessage.bind(this)}\r\n          setSocketKey={(key) => {\r\n            self.type = key;\r\n          }}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n};\r\n","var app = null;\r\n\r\nexport const setApp = (appInstance) => {\r\n  app = appInstance;\r\n};\r\n\r\nexport const setState = (state = {}) => {\r\n  app.setState(state);\r\n};\r\n\r\nexport const clearStateKey = (key) => {\r\n  if ( app && app.state.hasOwnProperty(key) ){\r\n    delete app.state[key];\r\n    app.setState(app.state);\r\n  }\r\n};\r\n\r\nexport const setMessage = (message = \"\", messageType = \"success\") => {\r\n  if ( typeof message === \"string\" && message.length ){\r\n    app.setState({\r\n      message,\r\n      messageType\r\n    });\r\n  } \r\n  else if ( typeof message !== \"string\" ){\r\n    console.error(`setErrorMessage only accepts strings.  A '${(typeof message)}' was provided`);\r\n  }\r\n  else {\r\n    console.error(\"Trying to call setErrorMessage with an empty string\");\r\n  }\r\n};\r\n\r\nexport const clearMessage = (e = null) => {\r\n  if ( e && e.preventDefault ){\r\n    e.preventDefault();\r\n  }\r\n  app.setState({\r\n    message: null,\r\n    messageType: \"success\"\r\n  });\r\n};\r\n\r\nexport const setArg = (name, value) => {\r\n  var state =  Object.assign( {}, app.state, {\r\n    args: Object.assign({}, app.state.args, {\r\n      [name]: value\r\n    } )\r\n  } );\r\n  app.setState(state);\r\n};\r\n\r\nexport const navClickListener = (view, args = {}) => {\r\n  return (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    app.setState({\r\n      view,\r\n      args\r\n    });\r\n  };\r\n};\r\n\r\nexport const api = (id, endpoint, params = {}) => {\r\n  var state = app.state[id] || {};\r\n  app.setState({\r\n    [id]: Object.assign({}, state, {\r\n      isLoading: true\r\n    } )\r\n  });\r\n  fetch( \"http://localhost:8085/\" + endpoint, Object.assign({}, {\r\n    method: \"GET\",\r\n  }, params) )\r\n  .then( (res) => {\r\n    return res.json();\r\n  } )\r\n  .then( (json) => {\r\n    if ( Array.isArray(json) && json.length === 1 ){\r\n      json = json[0];\r\n    }\r\n    app.setState({\r\n      [id]: json\r\n    });\r\n  } )\r\n  .catch( (err) => {\r\n    app.setState({\r\n      [id]: {\r\n        error: err\r\n      }\r\n    });\r\n  } );\r\n};\r\n\r\nexport const getInitialState = () => {\r\n  var state = {\r\n    view: \"unknown\", \r\n    args: { }\r\n  };\r\n  var loc = window.location.pathname;\r\n  var matchFound = false;\r\n  var matches = [\r\n    // Matches Home Page /\r\n    {\r\n      r: /^\\/$/,\r\n      v: \"home\"\r\n    },\r\n    {\r\n      r: /^\\/image\\/create$/,\r\n      v: \"image-create\"\r\n    },\r\n    // Matches /image/:id\r\n    {\r\n      r: /\\/image\\/(.*)/,\r\n      v: \"image\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /images\r\n    {\r\n      r: /\\/images/,\r\n      v: \"images\"\r\n    },\r\n    // Matches /containers/show/:type\r\n    {\r\n      r: /\\/containers\\/show\\/(.*)/,\r\n      v: \"containers\",\r\n      m: (match) => {\r\n        return {\r\n          type: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/run/:id\r\n    {\r\n      r: /\\/container\\/run\\/(.*)/,\r\n      v: \"container-run\",\r\n      m: (match) => {\r\n        return {\r\n          imageId: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/:id\r\n    {\r\n      r: /\\/container\\/(.*)/,\r\n      v: \"container\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /volumes\r\n    {\r\n      r: /\\/volumes\\/?$/,\r\n      v: \"volumes\"\r\n    },\r\n    // Match /volume/create\r\n    {\r\n      r: /\\/volume\\/create$/,\r\n      v: \"volume-create\"\r\n    },\r\n    // Matches /volume/:id\r\n    {\r\n      r: /\\/volume\\/(.*)/,\r\n      v: \"volume\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n  ];\r\n  matches.forEach( (check) => {\r\n    if ( matchFound === true ){\r\n      return;\r\n    }\r\n    var m = check.r.exec( loc );\r\n    if ( m  ){\r\n      if ( check.v ){\r\n        state.view = check.v;\r\n      }\r\n      state.args = check.m ? check.m(m) : {};\r\n      matchFound = true;\r\n    }\r\n  } );\r\n  return state;\r\n};\r\n\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default function(WrapperComponent){\r\n  return class extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.apiId = [];\r\n      this.repeating = [];\r\n      this.timer = null;\r\n      this.mounted = false;\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.mounted = true;\r\n      if ( this.repeating ){\r\n        this.timer = setInterval(this.timerCallback.bind(this), 1500);\r\n        this.timerCallback();\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if ( this.apiId ){\r\n        var messages = [],\r\n          type = \"success\",\r\n          prev = prevProps.message || null;\r\n        this.apiId.forEach( (id) => {\r\n          var apiResults = this.props[id];\r\n          if ( apiResults ){\r\n            if ( apiResults.error ){\r\n              messages.push(apiResults.error);\r\n              type = \"error\";\r\n            }\r\n            else if ( apiResults.results ){\r\n              var msg = \"\";\r\n              if ( apiResults.command ){\r\n                msg += `Successful Result\\n`;\r\n                msg += `Command:\\n ${apiResults.command}`;\r\n                msg += \"\\n\\n\";\r\n              }\r\n              msg += `Ouput:\\n${apiResults.results}`;\r\n              messages.push(msg);\r\n            }\r\n          }\r\n        } );\r\n        if ( messages && messages.length ){\r\n          var msgJoined = messages.join(\"\\n\\n\");\r\n          if ( prev !== msgJoined ){\r\n            Actions.setMessage(msgJoined, type);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      this.mounted = false;\r\n      if ( this.timer ){\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n      }\r\n      this.repeating.concat(this.apiId).forEach( (id) => {\r\n        var c = id;\r\n        if ( id && id.id ){\r\n          c = id.id;\r\n        }\r\n        Actions.clearStateKey(c);\r\n      } );\r\n    }\r\n\r\n    timerCallback(e){\r\n      if ( !this.mounted ){\r\n        if ( this.timer ){\r\n          clearInterval(this.timer);\r\n          this.timer = null;\r\n        }\r\n        return;\r\n      }\r\n      this.repeating.forEach( (item) => {\r\n        Actions.api(item.id, item.endpoint, item.params);\r\n      } );\r\n    }\r\n\r\n    render(){\r\n      var self = this;\r\n      var add =  (id) => {\r\n        if ( self.apiId.indexOf(id) < 0 ){\r\n          self.apiId.push(id);\r\n        }\r\n      };\r\n      var repeat = (id, endpoint, params = {}) => {\r\n        if ( self.mounted === true ){\r\n          console.warn(\"`addRepeatingApi` must be called before `withApiWatch` is mounted\")\r\n          return;\r\n        }\r\n        var found = self.repeating.find( (item) => {\r\n          return item.id === id;\r\n        } );\r\n        if ( !found ){\r\n          self.repeating.push({\r\n            id,\r\n            endpoint,\r\n            params,\r\n            timer: null\r\n          });\r\n        }\r\n      };\r\n      return (\r\n        <WrapperComponent \r\n          addRepeatingApi={repeat}\r\n          addApiWatchId={add}\r\n          setApiWatchId={add}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nclass Volume extends React.Component {\r\n  constructor(props){\r\n    super(props); \r\n    var self = this;\r\n    Actions.setArg(\"socketOpen\", false);\r\n    this.socket = new WebSocket(\"ws://localhost:8086\");\r\n    this.socket.onopen = () => {\r\n      Actions.setArg(\"socketOpen\", true);\r\n    };\r\n    this.socket.onclose = () => {\r\n      Actions.setArg(\"socketOpen\", false);\r\n    };\r\n    this.socket.onmessage = (msg) => {\r\n      var data;\r\n      try {\r\n        data = JSON.parse(msg.data);\r\n      } catch ( e ) {\r\n        return;\r\n      }\r\n      if ( data && data.type === \"volume-create-backup\" ){\r\n        if ( data && ( data.data || data.error ) ){\r\n          var output = _.get(self.props,\"args.output\") || [];\r\n          var line = data.data || data.error;\r\n          if ( line.match(/^\\(/) ){\r\n            if ( output.length && output[output.length - 1].match(/^\\(/) ){\r\n              output[output - 1] = line;\r\n            } else {\r\n              output.push(line);\r\n            }\r\n          } else {\r\n            output.push(line);\r\n          }\r\n          Actions.setArg(\"output\", output);\r\n        }\r\n        if ( data && data.finished === true ){\r\n          Actions.setArg(\"backupStarted\", false);\r\n        }\r\n        setTimeout( () => {\r\n          if ( self.stdout ){\r\n            self.stdout.scrollTop = self.stdout.scrollHeight;\r\n          }\r\n        }, 100 );\r\n      }\r\n    };\r\n\r\n    this.stdout = null;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.addApiWatchId(\"volume-delete\");\r\n    this.props.addRepeatingApi(\"volume-info\", \"volume/\" + this.getId());\r\n  }\r\n\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  handleBackupClick(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var name = this.getId();\r\n    var {\r\n      socketOpen\r\n    } = this.props.args;\r\n    if ( name && socketOpen ){\r\n      this.socket.send(JSON.stringify({\r\n        type: \"volume-create-backup\",\r\n        name\r\n      }));\r\n      Actions.setArg(\"backupStarted\", true);\r\n    } \r\n    else if ( !socketOpen ){\r\n      Actions.setMessage(\"Socket is not connected.  Please refresh the page.\", \"error\");\r\n    }\r\n    else if ( !name ) {\r\n      Actions.setMessage(\"Please enter a path first.\", \"error\");\r\n    }\r\n  }\r\n\r\n  handleDeleteClick(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    if ( !window.confirm(\"Are you sure you want to delete this image?\") ){\r\n      return;\r\n    } \r\n    Actions.api(\"volume-delete\", \"volume/\" + this.getId(), {\r\n      method: \"DELETE\"\r\n    } );\r\n  }\r\n\r\n  parseValue(val){\r\n    if ( Array.isArray(val) ){\r\n      return val.join(\", \");\r\n    }\r\n    switch ( typeof val ){\r\n      case \"string\":\r\n      case \"number\":\r\n        return val;\r\n      case \"object\":\r\n        return this.objectToString(val);\r\n      default:\r\n        return val;\r\n    }\r\n  }\r\n\r\n  objectToString(obj){\r\n    return (\r\n      <ul>\r\n        { Object.keys(obj).map( (k) => {\r\n          return (\r\n            <li key={`entry-${k}`}><strong>{k}</strong> => {this.parseValue(obj[k])}</li>\r\n          );\r\n        } ) }\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    var volume = _.get(this.props, \"volume-info.results.basic\"),\r\n      volumeDetails = _.get(this.props, \"volume-info.results.meta\"),\r\n      socketOpen = _.get(this.props,\"args.socketOpen\") || false,\r\n      output = _.get(this.props, \"args.output\"),\r\n      backupStarted = _.get(this.props, \"args.backupStarted\") || false,\r\n      self = this;\r\n\r\n    var keysUsed = [];\r\n\r\n    return (\r\n      <div className=\"Volume\">\r\n        <h1>Volume {this.getId()}</h1>\r\n        <p>This page container information about a specific Volume, and provides simple actions to manage the Volume.</p>\r\n        <p>\r\n          <span className={`toggler danger${(socketOpen === true ? \" checked\" : \"\")}`}> \r\n            Connection Open\r\n          </span><br />\r\n          <em>This page uses WebSockets to stream the output of the build process to this page.  If the indicator above is red, there is no connection.</em><br />\r\n          { backupStarted ? (\r\n            <span className={`toggler danger${(backupStarted === true ? \" checked\" : \"\")}`}> \r\n              Backup Started\r\n            </span>\r\n          ) : null }\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.handleDeleteClick.bind(this)}>\r\n              Delete Volume\r\n            </a>\r\n          </li>\r\n          { !backupStarted  ? (\r\n            <li>\r\n              <a href=\"void\" onClick={this.handleBackupClick.bind(this)}>\r\n                Create Backup\r\n              </a>\r\n            </li>\r\n          ) : null }\r\n        </ul>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <table className=\"border\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    Name\r\n                  </th>\r\n                  <th>\r\n                    Value \r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { volume ? (\r\n                  Object.keys(volume).map( (key, index) => {\r\n                    keysUsed.push(key.toLowerCase());\r\n                    return (\r\n                      <tr key={`volume-basic-${key}-${index}`}>\r\n                        <td>{key}</td><td>{this.parseValue(volume[key])}</td>\r\n                      </tr>\r\n                    );\r\n                  } )\r\n                ) : null }\r\n                { volumeDetails ? (\r\n                  Object.keys(volumeDetails).map( (key, index) => {\r\n                    if ( keysUsed.indexOf(key.toLowerCase()) >= 0 ){\r\n                      return null;\r\n                    }\r\n                    return (\r\n                      <tr key={`volume-meta-${key}-${index}`}>\r\n                        <td>{key}</td><td>{this.parseValue(volumeDetails[key])}</td>\r\n                      </tr>\r\n                    );\r\n                  } )\r\n                ) : null }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre \r\n            className=\"console\" \r\n            key=\"console\"\r\n            ref={ (r) => {\r\n              self.stdout = r;\r\n            } }\r\n          >\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withApiWatch(Volume);\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default (props) => {\r\n  const listener = (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    window.history.pushState({}, props.title || \"Page Change\", props.to);\r\n    if ( typeof props.onClick === \"function\" ){\r\n      props.onClick();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  };\r\n  return (\r\n    <a href={props.to} onClick={listener} className={props.className || \"\"}>\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport Link from '../components/Link';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\n\r\nclass Volumes extends React.Component {\r\n  componentDidMount(){\r\n    this.props.addRepeatingApi(\"volumes\", \"volumes\");\r\n    this.props.addApiWatchId(\"volume-create\");\r\n  }\r\n\r\n  handleNewVolume(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var volumeName = window.prompt(\"Please enter a name for the Volume.\");\r\n    if ( volumeName ){\r\n      Actions.api(\"volume-create\", \"volume/create\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          name: volumeName\r\n        })\r\n      } );\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var volumes = _.get(this.props, \"volumes.output\") || [];\r\n    return (\r\n      <div className='Volumes'>\r\n        <h1>Volumes</h1>\r\n        <p>This page lists the available volumes.</p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"void\" onClick={this.handleNewVolume.bind(this)}>\r\n              Create new Volume\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        { volumes && volumes.length ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                { Object.keys(volumes[0]).map( (col,i) => {\r\n                  return (\r\n                    <th key={`col-${col}`}>{col}</th>\r\n                  );\r\n                } ) }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { volumes.map( (vol, index) => {\r\n                return (\r\n                  <tr key={`vol-${index}`}>\r\n                    { Object.keys(vol).map( (v,i) => {\r\n                      var val = vol[v];\r\n                      if ( v === \"VOLUME NAME\" ){\r\n                        val = <Link to={`/volume/${vol[v]}`}>{vol[v]}</Link>;\r\n                      }\r\n                      return (\r\n                        <td key={`vol-key-${v}`}>\r\n                          {val}\r\n                        </td>\r\n                      );\r\n                    } ) }\r\n                  </tr>\r\n                );\r\n              } ) }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Volumes);\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\nimport * as Actions from '../actions';\r\n\r\nclass Images extends React.Component {\r\n  componentDidMount(){\r\n    Actions.api(\"images\", \"images\");\r\n  }\r\n\r\n  render(){\r\n    var images = this.props.images || {};\r\n    return (\r\n      <div className='Images'>\r\n        <h1>Images</h1>\r\n        <p>This page lists the available images</p>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/image/create\">\r\n              Create new Image\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        { images && images.output ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image ID</th>\r\n                <th>Repository</th>\r\n                <th>Size</th>\r\n                <th>Created</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { images.output.map( (image, index) => {\r\n                if ( !image['IMAGE ID'] ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={image['IMAGE ID']}>\r\n                    <td>\r\n                      <Link to={`/image/${image['IMAGE ID']}`}>{image['IMAGE ID']}</Link>\r\n                    </td>\r\n                    <td>\r\n                      {image.REPOSITORY}\r\n                    </td>\r\n                    <td>\r\n                      {image.SIZE}\r\n                    </td>\r\n                    <td>\r\n                      {image.CREATED}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              } ) }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport _ from 'lodash';\r\nimport './Images.css';\r\n\r\nclass Image extends React.Component {\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.addRepeatingApi(`image-${this.getId()}`, `image/inspect/${this.getId()}`);\r\n    this.props.addApiWatchId(`image-${this.getId()}`);\r\n    this.props.addApiWatchId(`run-img-command`);\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  imageCommand(cmd){\r\n    var self = this;\r\n    return (e) => {\r\n      e.preventDefault();\r\n      var params = {\r\n        method: \"post\"\r\n      };\r\n      if ( cmd === \"force-rm\" ){\r\n        cmd = \"rm\";\r\n        params.body = JSON.stringify({\r\n          options: [\"-f\"]\r\n        });\r\n      }\r\n      Actions.api(\"run-img-command\", `image/${self.getId()}/perform/${cmd}`, params );\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var image = this.props[`image-${this.getId()}`] || {},\r\n      isLoading = _.get(this.props,`image-${this.getId()}.isLoading`) || false,\r\n      isShowFull = this.props.args.isShowFull || false;\r\n    if ( Array.isArray(image) ){\r\n      image = image[0]\r\n    }\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Image {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for an Image</p>\r\n        <h2>Details</h2>\r\n        { isLoading && !image.Size ? (\r\n          <p>Please wait while the image details is loaded</p>\r\n        ) : null }\r\n        <ul className=\"inline\">\r\n          <li>\r\n            <Link to={`/container/run/${this.getId()}`}>\r\n              Create a Container\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.imageCommand(\"rm\")}>\r\n              Delete Image\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.imageCommand(\"force-rm\")}>\r\n              Force Delete Image\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a key=\"full-link\" href=\"void\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  Author\r\n                </td>\r\n                <td>\r\n                  {image.Author}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Architecture\r\n                </td>\r\n                <td>\r\n                  {image.Architecture}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  OS\r\n                </td>\r\n                <td>\r\n                  {image.Os}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Size\r\n                </td>\r\n                <td>\r\n                  {image.Size > 0 ? (\r\n                    <ul className=\"no-bullets\">\r\n                      <li>\r\n                        {(image.Size/1000000).toFixed(2)} MB\r\n                      </li>\r\n                      <li>\r\n                        {(image.Size/1000000000).toFixed(2)} GB\r\n                      </li>\r\n                    </ul>\r\n                  ) : null }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Tags\r\n                </td>\r\n                <td>\r\n                  { image.RepoTags && image.RepoTags.length ? (\r\n                    <ul className=\"no-bullets\">\r\n                      {image.RepoTags.map( (tag, index) => {\r\n                        return (\r\n                          <li key={`tag-${index}`}>{tag}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Exposed Ports\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.ExposedPorts ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.ExposedPorts).map((key,index) => {\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Environment Variables\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Env ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { image.Config.Env.map((key,index) => {\r\n                        if ( key.match(/^PATH/) ){\r\n                          return null;\r\n                        }\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Labels\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Labels ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.Labels).map((key,index) => {\r\n                        return (\r\n                          <li key={`label-${key}`}><em>{key}</em> : \"{image.Config.Labels[key]}\"</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(image, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Image);\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nclass ImageCreate extends React.Component {\r\n  constructor(props){\r\n    super(props); \r\n    var self = this;\r\n    Actions.setArg(\"socketOpen\", false);\r\n    this.socket = new WebSocket(\"ws://localhost:8086\");\r\n    this.socket.onopen = () => {\r\n      Actions.setArg(\"socketOpen\", true);\r\n    };\r\n    this.socket.onclose = () => {\r\n      Actions.setArg(\"socketOpen\", false);\r\n    };\r\n    this.socket.onmessage = (msg) => {\r\n      var data;\r\n      try {\r\n        data = JSON.parse(msg.data);\r\n      } catch ( e ) {\r\n        return;\r\n      }\r\n      if ( data && data.type === \"build-image\" ){\r\n        if ( data && ( data.data || data.error ) ){\r\n          var output = _.get(self.props,\"args.output\") || [];\r\n          var line = data.data || data.error;\r\n          if ( line.match(/^\\(/) ){\r\n            if ( output.length && output[output.length - 1].match(/^\\(/) ){\r\n              output[output - 1] = line;\r\n            } else {\r\n              output.push(line);\r\n            }\r\n          } else {\r\n            output.push(line);\r\n          }\r\n          Actions.setArg(\"output\", output);\r\n        }\r\n        if ( data && data.finished === true ){\r\n          Actions.setArg(\"buildStarted\", false);\r\n        }\r\n        setTimeout( () => {\r\n          if ( self.stdout ){\r\n            self.stdout.scrollTop = self.stdout.scrollHeight;\r\n          }\r\n        }, 100 );\r\n      }\r\n    };\r\n\r\n    this.stdout = null;\r\n  }\r\n\r\n  handleFormSubmit(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var {\r\n      path,\r\n      name,\r\n      socketOpen\r\n    } = this.props.args;\r\n    if ( path && socketOpen ){\r\n      this.socket.send(JSON.stringify({\r\n        type: \"build-image\",\r\n        name,\r\n        path\r\n      }));\r\n      Actions.setArg(\"buildStarted\", true);\r\n    } \r\n    else if ( !socketOpen ){\r\n      Actions.setMessage(\"Socket is not connected.  Please refresh the page.\", \"error\");\r\n    }\r\n    else if ( !path ) {\r\n      Actions.setMessage(\"Please enter a path first.\", \"error\");\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var socketOpen = _.get(this.props,\"args.socketOpen\") || false,\r\n      output = _.get(this.props, \"args.output\"),\r\n      buildStarted = _.get(this.props, \"args.buildStarted\") || false,\r\n      path = _.get(this.props,\"args.path\") || \"\",\r\n      name = _.get(this.props,\"args.name\") || \"\",\r\n      self = this;\r\n\r\n    return (\r\n      <div className=\"Image-create\">\r\n        <h1>Create an Image</h1>\r\n        <p>This page can be used to build an image from a Dockerfile</p>\r\n        <p>\r\n          <span className={`toggler danger${(socketOpen === true ? \" checked\" : \"\")}`}> \r\n            Connection Open\r\n          </span><br />\r\n          <em>This page uses WebSockets to stream the output of the build process to this page.  If the indicator above is red, there is no connection.</em><br />\r\n          { buildStarted ? (\r\n            <span className={`toggler danger${(buildStarted === true ? \" checked\" : \"\")}`}> \r\n              Build Started\r\n            </span>\r\n          ) : null }\r\n        </p>\r\n        <form onSubmit={this.handleFormSubmit.bind(this)}>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Name</strong> <em>(optional)</em><br />\r\n                  Please enter name to easily identify this image\r\n                </p>\r\n                <input \r\n                  type=\"text\" \r\n                  onChange={(e) => {\r\n                    Actions.setArg(\"name\", e.target.value);\r\n                  }}\r\n                  value={name}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Build Directory</strong><br />\r\n                  Please enter the full path of the <strong>directory</strong> where your Dockerfile is located\r\n                </p>\r\n                <input \r\n                  type=\"text\" \r\n                  onChange={(e) => {\r\n                    Actions.setArg(\"path\", e.target.value);\r\n                  }}\r\n                  value={path}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <button type=\"submit\">Create Image</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre \r\n            className=\"console\" \r\n            key=\"console\"\r\n            ref={ (r) => {\r\n              self.stdout = r;\r\n            } }\r\n          >\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withApiWatch(ImageCreate);\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport withSocket from '../components/withSocket';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport _ from 'lodash';\r\nimport './Images.css';\r\n\r\nclass Container extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n    this.stdout = null;\r\n    if ( this.props.setSocketKey ){\r\n      this.props.setSocketKey(\"container-create-directory-backup\");\r\n    }\r\n  }\r\n\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.mounted = true;\r\n    var id = this.getId(),\r\n      key = `container-${id}`;\r\n    this.props.addApiWatchId(key);\r\n    this.props.addApiWatchId(\"run-command\");\r\n    Actions.api(key, `container/inspect/${id}`);\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( self.props[key].isLoading === true ){\r\n        return;\r\n      }\r\n      if ( self.props[key].error ){\r\n        clearInterval(self.timer);\r\n        self.timer = null;\r\n        return;\r\n      }\r\n      Actions.api(key, `container/inspect/${id}`);\r\n    }, 1000 );\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  containerCommand(cmd){\r\n    var self = this;\r\n    return (e) => {\r\n      e.preventDefault();\r\n      if ( cmd == \"create-dir-backup\" ){\r\n        var path = window.prompt(\"Please enter the full path to the container's folder.\",\"/app\");\r\n        if ( path ){\r\n          var volName = window.prompt(\"Please enter a name for the volume.\");\r\n          this.props.sendMessage({\r\n            sourceDirectory: path,\r\n            containerId: this.getId(),\r\n            volumeName: volName\r\n          });\r\n        }\r\n      } else {\r\n        Actions.api(\"run-command\", `container/${self.getId()}/perform/${cmd}`, {\r\n          method: \"post\"\r\n        } );\r\n      }\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var container = this.props[`container-${this.getId()}`] || {},\r\n      isShowFull = this.props.args.isShowFull || false,\r\n      isSocketOpen = _.get(this.props, \"args.socketOpen\");\r\n    if ( Array.isArray(container) ){\r\n      container = container[0];\r\n    }\r\n    var state = container.State ? container.State.Status : null,\r\n      stateFieldList = [\r\n        \"Status\",\"Running\",\"Paused\",\"Restarting\",\"Dead\"\r\n      ],\r\n      output = _.get(this.props, \"args.output\");\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Container {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for a Container</p>\r\n        <span className={`toggler danger${(isSocketOpen === true ? \" checked\" : \"\")}`}> \r\n          Connection Open\r\n        </span><br />\r\n        <h2>Details</h2>\r\n        <ul className=\"inline\">\r\n          { state === \"exited\" ? [\r\n            <li key=\"start\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"start\")}>\r\n                Start\r\n              </a>\r\n            </li>,\r\n            <li key=\"remove\">\r\n              <a href=\"void\" className=\"text-danger\" onClick={this.containerCommand(\"rm\")}>\r\n                Remove\r\n              </a>\r\n            </li>,\r\n          ] : null } \r\n          { state === \"running\" ? [\r\n\r\n            <li key=\"stop\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"stop\")}>\r\n                Stop\r\n              </a>\r\n            </li>,\r\n            <li key=\"pause\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"pause\")}>\r\n                Pause\r\n              </a>\r\n            </li>,\r\n            <li key=\"restart\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"restart\")}>\r\n                Restart\r\n              </a>\r\n            </li>,\r\n            <li key=\"create-dir-backup\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"create-dir-backup\")}>\r\n                Create Volume from Container Directory\r\n              </a>\r\n            </li>\r\n          ] : null }\r\n          { state === \"paused\" ? (\r\n            <li>\r\n              <a href=\"void\" onClick={this.containerCommand(\"unpause\")}>\r\n                Unpause\r\n              </a>\r\n            </li>\r\n          ) : null }\r\n          <li>\r\n            <a key=\"full-link\" href=\"void\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { state === \"running\" ? (\r\n                <tr>\r\n                  <td>\r\n                    Started At\r\n                  </td>\r\n                  <td>\r\n                    {container.State.StartedAt}\r\n                  </td>\r\n                </tr>\r\n              ) : null }\r\n              { container.State ? (\r\n              <tr>\r\n                <td>\r\n                  State\r\n                </td>\r\n                <td>\r\n                  <ul>\r\n                    { stateFieldList.map( (field) => {\r\n                      return (\r\n                        <li key={field}>\r\n                          <strong>{field}</strong> : {\"\" + container.State[field]}\r\n                        </li>\r\n                      );\r\n                    } ) }\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n              { container.Config && container.Config.Image ? (\r\n              <tr>\r\n                <td>\r\n                  Image\r\n                </td>\r\n                <td>\r\n                  <Link to={`/image/${container.Config.Image}`}>{container.Config.Image}</Link>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(container, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre \r\n            className=\"console\" \r\n            key=\"console\"\r\n            ref={this.props.stdoutRef}\r\n          >\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSocket(withApiWatch(Container));\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Containers.css';\r\n\r\nclass Containers extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n  }\r\n\r\n  getType(){\r\n    var type = this.props.args || {};\r\n    type = type.type || \"all\";\r\n    return type;\r\n  }\r\n\r\n  componentDidMount(){\r\n    var type = this.getType();\r\n    Actions.api(\"containers\", `containers/show/${type}`);\r\n    this.mounted = true;\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( !self.mounted ){\r\n        clearInterval(self.timer);\r\n        return;\r\n      }\r\n      Actions.api(\"containers\", `containers/show/${self.getType()}`);\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    var type = this.getType();\r\n    if ( prevProps.args.type !== type ){\r\n      Actions.api(\"containers\", `containers/show/${type}`);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var args = this.props.args || {},\r\n      containers = this.props.containers || [];\r\n    if ( containers.output && containers.output.length ){\r\n      containers = containers.output;\r\n    }\r\n    var first = containers.length ? containers[0] : null;\r\n    return (\r\n      <React.Fragment>\r\n        <div className='Containers'>\r\n          <h1>Containers</h1>\r\n          <div className=\"Containers-options\">\r\n            <Link to={`/containers/show/${this.getType() === \"all\" ? \"running\" : \"all\"}`} className={`toggler${(args.type === \"all\" ? \" checked\" : \"\")}`}>\r\n              Show All\r\n            </Link>\r\n          </div>\r\n          { args.type === \"all\" ? (\r\n            <p>This page is showing all containers.</p>\r\n          ) : (\r\n            <p>This page is showing only the running containers.</p>\r\n          ) }\r\n          { first ? (\r\n            <table className=\"border\">\r\n              <thead>\r\n                <tr>\r\n                  { Object.keys(first).map( (col) => <th key={col}>{col}</th> ) }\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              { containers.map ( (container, index) => {\r\n                var total = 0,\r\n                  emptyCount = 0;\r\n                Object.keys(container).forEach( (con,i) => {\r\n                  total++;\r\n                  if ( !container[con] ){\r\n                    emptyCount++;\r\n                  }\r\n                } );\r\n                // Skip Empty row\r\n                if ( total === emptyCount ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={`row-${index}`}>\r\n                    { Object.keys(container).map( (con,i) => {\r\n                      var v = container[con];\r\n                      if ( con === \"IMAGE\" ){\r\n                        v = <Link to={`/image/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"CONTAINER ID\" ){\r\n                        v = <Link to={`/container/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"PORTS\" && v.length ){\r\n                        v = (\r\n                          <ul>\r\n                            { v.split(/,/).map( (line, lineI) => {\r\n                              return (\r\n                                <li key={`line-${lineI}`}>\r\n                                  {line}\r\n                                </li>\r\n                              );\r\n                            } ) }\r\n                          </ul>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <td key={`row-${i}`}>{v}</td> \r\n                      );\r\n                    } ) }\r\n                  </tr>\r\n                );\r\n              } ) }\r\n              </tbody>\r\n            </table>\r\n          ) : null }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Containers;\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport _ from 'lodash';\r\n\r\nclass ContainerRun extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      flag: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    var key = `image-${this.props.args.imageId}`;\r\n    this.props.addApiWatchId(\"container_run\");\r\n    this.props.addApiWatchId(key);\r\n    if ( !this.props[key] ){\r\n      Actions.api(key, `image/inspect/${this.props.args.imageId}`);\r\n    }\r\n    Actions.api(\"volumes\", \"volumes\");\r\n  }\r\n \r\n  handleForm(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var args = this.props.args || {},\r\n      options = [],\r\n      mounts = [],\r\n      volumes = [];\r\n    var map = {\r\n      flagRm: \"--rm\",\r\n      flagTty: \"-t\"\r\n    };\r\n    Object.keys(args).forEach( (key) => {\r\n      if ( map.hasOwnProperty(key) ){\r\n        var v = map[key].split(/\\s/);\r\n        options.push({\r\n          key: v[0],\r\n          value: v[1] || \"\"\r\n        });\r\n      }\r\n    } );\r\n    if ( args.name && args.name.length ){\r\n      options.push({\r\n        key: \"--name\",\r\n        value: args.name\r\n      });\r\n    }\r\n    if ( args.mounts && args.mounts.length ){\r\n      args.mounts.forEach( (vol) => {\r\n        if ( vol.local && vol.remote ){\r\n          mounts.push(vol);\r\n        }\r\n      } );\r\n    }\r\n    if ( args.volumes && args.volumes.length ){\r\n      args.volumes.forEach( (vol) => {\r\n        if ( vol.volumeId && vol.remote ){\r\n          volumes.push(vol);\r\n        }\r\n      } );\r\n    }\r\n    Actions.api(\"container_run\", `container/run/${this.props.args.imageId}`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        options,\r\n        mounts,\r\n        volumes,\r\n        additionalArgs: args.additionalArgs || \"\",\r\n        ports: args.ports,\r\n      })\r\n    });\r\n  }\r\n\r\n  addBountMount(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var mounts = this.props.args.mounts || [];\r\n    mounts.push({\r\n      local: \"\",\r\n      remote: \"\"\r\n    });\r\n    Actions.setArg(\"mounts\", mounts);\r\n  }\r\n\r\n  addVolume(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var volumes = this.props.args.volumes || [];\r\n    volumes.push({\r\n      volumeId: \"\",\r\n      remote: \"\"\r\n    });\r\n    Actions.setArg(\"volumes\", volumes);\r\n  }\r\n\r\n  inputListener(name){\r\n    var self = this;\r\n    return (e) => {\r\n      switch ( name ){\r\n        case \"flagRm\":\r\n          Actions.setArg(\"flagRm\", self.props.args.flagRm ? false : true);\r\n          self.setState({\r\n            flag: !self.state.flag\r\n          });\r\n          break;\r\n\r\n        case \"flagTty\":\r\n          Actions.setArg(\"flagTty\", self.props.args.flagTty === true ? false : true);\r\n          break;\r\n\r\n        default:\r\n          var match,\r\n            i,\r\n            mounts,\r\n            argType;\r\n          if ( name.match(/port_/) ){\r\n            var ports = this.props.args.ports || {};\r\n            ports[name.replace(/port_/,'')] = e.target.value;\r\n            Actions.setArg(\"ports\", ports);\r\n          } \r\n          else if ( match = name.match(/(mounts|volumes)-(\\d+)-(volumeId|local|remote)/) ){\r\n            argType = match[1];\r\n            i = match[2];\r\n            var type = match[3];\r\n            mounts = self.props.args[argType] || [];\r\n            mounts = mounts.slice();\r\n            if ( mounts[i] ){\r\n              mounts[i][type] = e.target.value;\r\n            }\r\n            Actions.setArg(argType, mounts);\r\n          }\r\n          else if ( match = name.match(/remove-(volumes|mounts)-(\\d+)/) ){\r\n            e.preventDefault();\r\n            argType = match[1];\r\n            i = match[2];\r\n            mounts = ( _.get(self.props,`args.${argType}`) || [] ).slice();\r\n            mounts.splice(i,1);\r\n            Actions.setArg(argType, mounts);\r\n          }\r\n          else {\r\n            Actions.setArg(name, e.target.value);\r\n          }\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var imageKey = `image-${this.props.args.imageId}`;\r\n    var image = this.props[imageKey] || {},\r\n      args = this.props.args,\r\n      ports = args.ports || {},\r\n      additionalArgs = args.additionalArgs || \"\",\r\n      mounts = args.mounts || [],\r\n      volumes = args.volumes || [],\r\n      availableVolumes = _.get(this.props, \"volumes.output\") || [];\r\n    if ( Array.isArray(image) ){\r\n      image = image[0];\r\n    }\r\n    var self = this;\r\n    return (\r\n      <div className=\"Container-run\">\r\n        <h1>Start a Container</h1>\r\n        <p>From this page you can start a new container using the selected image.  Please customize the details below to set different options on the container.</p>\r\n        <form onSubmit={this.handleForm.bind(this)}>\r\n          <p>\r\n            <strong>Name</strong> <em>(optional)</em><br />\r\n            <em>Gives the container a name so you can easily run commands on the container.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input value={args.name || \"\"} onChange={this.inputListener(\"name\")} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/** ==================== FLAGS ==================== **/}\r\n          <p><strong>Flags</strong></p>\r\n          <div className=\"flex-col\">\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagRm} onChange={this.inputListener(\"flagRm\")} checked={args.flagRm ? true : false} /> Don't Persist\r\n              </label>\r\n              &nbsp;- <em>When the container is stopped, it is automatically removed, and can't be restarted.</em>\r\n            </span>\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagTty} onChange={this.inputListener(\"flagTty\")} checked={args.flagTty ? true : false} /> Prevent Exit\r\n                &nbsp;- <em>Containers exit if a script isn't set to run at start, this flag prevents the container from exiting</em> \r\n              </label>\r\n            </span>\r\n          </div>\r\n          {/** ==================== PORT MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Port Mapping</strong> <em>(optional)</em><br />\r\n            <em>If left empty, that port will not be exposed to localhost</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <div className=\"flex-row flex-justify-between\">\r\n                  <span>Local Port</span><span></span><span>Container Port</span>\r\n                </div>\r\n            { image.Config && image.Config.ExposedPorts ? ( \r\n              Object.keys(image.Config.ExposedPorts).map( (port) => {\r\n                port = port.replace(/(\\d+).*/,\"$1\");\r\n                return (\r\n                  <div key={`port-${port}`} className=\"flex-row flex-justify-between\">\r\n                    <div>\r\n                      <input onChange={self.inputListener(`port_${port}`)} value={ports[port] || \"\"} />\r\n                    </div>\r\n                    <span>=></span>\r\n                    <div>\r\n                      <input readOnly value={port} />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              } )\r\n            ) : \"No Exposed Ports\" }\r\n            </div>\r\n          </div>\r\n          {/** ==================== BIND MOUNT MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Volume Binding Mapping</strong> <em>(optional)</em><br />\r\n            <em>Binds a local directory to a directory in the container.  Please use full paths</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            { mounts.map( (vol,index) => {\r\n              return (\r\n                <div key={`vol-${index}`} className=\"flex-row flex-justify-between\">\r\n                  <div>\r\n                    <input placeholder=\"local\" value={vol.local} onChange={self.inputListener(`mounts-${index}-local`)} />\r\n                  </div>\r\n                  <span>=></span>\r\n                  <div>\r\n                    <input placeholder=\"container\" value={vol.remote} onChange={self.inputListener(`mounts-${index}-remote`)} /> &nbsp;\r\n                    <a href=\"void\" onClick={this.inputListener(`remove-mounts-${index}`)} className=\"no-style text-danger\">- Delete</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            } ) }\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <a href=\"void\" onClick={this.addBountMount.bind(this)}>\r\n                + Add a Local Mount\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/** ==================== VOLUME MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Volume Mapping</strong> <em>(optional)</em><br />\r\n            <em>Binds a docker volume to a directory in the container.  Please use full paths</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            { volumes.map( (vol,index) => {\r\n              return (\r\n                <div key={`vol-${index}`} className=\"flex-row flex-justify-between\">\r\n                  <div>\r\n                    <div className=\"flex-col\">\r\n                      <select value={vol.volumeId || \"\"} onChange={self.inputListener(`volumes-${index}-volumeId`)}>\r\n                        <option>Select a Volume</option>\r\n                        { availableVolumes.map( (vol, vi) => {\r\n                          return (\r\n                            <option key={vol['VOLUME NAME']}>{vol['VOLUME NAME']}</option>\r\n                          );\r\n                        } ) }\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <span>=></span>\r\n                  <div>\r\n                    <input placeholder=\"container\" value={vol.remote} onChange={self.inputListener(`volumes-${index}-remote`)} /> &nbsp;\r\n                    <a href=\"void\" onClick={this.inputListener(`remove-volumes-${index}`)} className=\"no-style text-danger\">- Delete</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            } ) }\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <a href=\"void\" onClick={this.addVolume.bind(this)}>\r\n                + Add a Volume\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/** ==================== Additional Arguments ==================== **/}\r\n          <p>\r\n            <strong>Additional Arguments</strong><br />\r\n            <em>Enter any other options/arguments to the command.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input placeholder=\"docker run arguments\" value={additionalArgs} onChange={self.inputListener(`additionalArgs`)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button type=\"submit\">Start Container</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(ContainerRun);\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div>\r\n      <h1>404 - Page Not Found</h1>\r\n      <p>\r\n        Return to the <Link to=\"/\">Home page</Link>.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Docker GUI</h1>      \r\n      <p>\r\n        This is a simple interface for managing your local Docker images, containers, and volumes (<em>coming soon</em>)\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport * as Actions from './actions';\r\nimport Volume from './pages/Volume';\r\nimport Volumes from './pages/Volumes';\r\nimport Images from './pages/Images';\r\nimport Image from './pages/Image';\r\nimport ImageCreate from './pages/ImageCreate';\r\nimport Container from './pages/Container';\r\nimport Containers from './pages/Containers';\r\nimport ContainerRun from './pages/ContainerRun';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport Home from './pages/Home';\r\nimport Link from './components/Link';\r\nimport './App.scss';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    /**\r\n     * Create Global access reference to\r\n     * Main App Wrapper Component\r\n     */\r\n    Actions.setApp(this);\r\n\r\n    this.originalPopstateListener = window.onpopstate;\r\n\r\n    /**\r\n     * Main App State\r\n     * Changes are managed through\r\n     * Actions.js function calls\r\n     */\r\n    this.state = Actions.getInitialState();\r\n  }\r\n\r\n  handleHistoryEvent(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.onpopstate = this.handleHistoryEvent;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.onpopstate = this.originalPopstateListener;\r\n  }\r\n\r\n  route(viewName){\r\n    var ret = null;\r\n    switch ( viewName ){\r\n      // Containers List Page\r\n      case \"containers\":\r\n        ret = <Containers {...this.state} />;\r\n        break;\r\n\r\n      // Images List Page\r\n      case \"images\":\r\n        ret = <Images {...this.state} />;\r\n        break;\r\n\r\n      // Image Create Page\r\n      case \"image-create\":\r\n        ret = <ImageCreate {...this.state} />;\r\n        break;\r\n\r\n      // Image Summary Page\r\n      case \"image\":\r\n        ret = <Image {...this.state} />;\r\n        break;\r\n\r\n      // Start Container from Image Page\r\n      case \"container-run\":\r\n        ret = <ContainerRun {...this.state} />;\r\n        break;\r\n\r\n      // Container Summary Page\r\n      case \"container\":\r\n        ret = <Container {...this.state} />;\r\n        break;\r\n        \r\n      // Volume Summary Page\r\n      case \"volume\":\r\n        ret = <Volume {...this.state} />;\r\n        break;\r\n\r\n      // Volumes List Page\r\n      case \"volumes\":\r\n        ret = <Volumes {...this.state} />;\r\n        break;\r\n        \r\n      // Home Page\r\n      case \"home\":\r\n        ret = <Home />;\r\n        break;\r\n\r\n      default: \r\n        ret = <PageNotFound />;\r\n        break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <ul className=\"App-nav\">\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/containers/show/running\">Containers</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/images\">Images</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/volumes\">Volumes</Link>\r\n            </li>\r\n          </ul>\r\n          <p>\r\n            <a style={{color:\"white\",textDecoration: \"none\"}} href=\"https://github.com/chrisonbass/docker-gui\">@chrisonbass</a>\r\n          </p>\r\n        </header>\r\n        {/** =========== OUTPUT ERROR ============= **/}\r\n        { this.state.message && (\"\" + this.state.message).length ? (\r\n          <div className={`App-msg-${this.state.messageType === \"success\" ? \"success\" : \"error\"}`}>\r\n            <a href=\"void\" onClick={Actions.clearMessage} className=\"close\">x</a>\r\n            <pre>\r\n              {this.state.message}\r\n            </pre>\r\n          </div>\r\n        ) : null }\r\n\r\n        <div className=\"App-body\">\r\n          { this.route(this.state.view) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}