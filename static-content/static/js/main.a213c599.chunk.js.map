{"version":3,"sources":["actions.js","components/Link.js","pages/Images.js","components/withApiWatch.js","pages/Image.js","pages/Container.js","pages/Containers.js","pages/ContainerRun.js","pages/PageNotFound.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["app","setApp","appInstance","setState","state","clearMessage","e","preventDefault","message","messageType","setArg","name","value","Object","assign","args","api","id","endpoint","params","isLoading","fetch","method","then","res","json","Array","isArray","length","catch","err","error","getInitialState","view","loc","window","location","pathname","matchFound","r","v","m","match","type","imageId","forEach","check","exec","props","href","to","onClick","history","pushState","title","Actions","className","children","Images","images","this","output","map","image","index","key","Link","REPOSITORY","SIZE","CREATED","React","Component","WrapperComponent","apiId","prevProps","messages","prev","apiResults","push","results","msg","command","msgJoined","join","console","self","add","indexOf","addApiWatchId","setApiWatchId","withApiWatch","getId","isShowFull","toggleShowFullDetails","bind","Author","Architecture","Os","Size","toFixed","RepoTags","tag","Config","ExposedPorts","keys","replace","Env","Labels","JSON","stringify","mounted","timer","setInterval","clearInterval","cmd","container","State","Status","containerCommand","StartedAt","field","Image","Containers","getType","containers","first","Fragment","col","total","emptyCount","con","i","split","line","lineI","flag","options","volumes","flagRm","flagTty","hasOwnProperty","vol","local","remote","body","additionalArgs","ports","target","slice","splice","imageKey","onSubmit","handleForm","onChange","inputListener","checked","port","readOnly","placeholder","addVolume","App","originalPopstateListener","onpopstate","handleHistoryEvent","viewName","ret","Home","PageNotFound","style","color","textDecoration","route","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a213c599.chunk.js","sourcesContent":["var app = null;\r\n\r\nexport const setApp = (appInstance) => {\r\n  app = appInstance;\r\n};\r\n\r\nexport const setState = (state = {}) => {\r\n  app.setState(state);\r\n};\r\n\r\nexport const setMessage = (message = \"\", messageType = \"success\") => {\r\n  if ( typeof message === \"string\" && message.length ){\r\n    app.setState({\r\n      message,\r\n      messageType\r\n    });\r\n  } \r\n  else if ( typeof message !== \"string\" ){\r\n    console.error(`setErrorMessage only accepts strings.  A '${(typeof message)}' was provided`);\r\n  }\r\n  else {\r\n    console.error(\"Trying to call setErrorMessage with an empty string\");\r\n  }\r\n};\r\n\r\nexport const clearMessage = (e = null) => {\r\n  if ( e && e.preventDefault ){\r\n    e.preventDefault();\r\n  }\r\n  app.setState({\r\n    message: null,\r\n    messageType: \"success\"\r\n  });\r\n};\r\n\r\nexport const setArg = (name, value) => {\r\n  var state =  Object.assign( {}, app.state, {\r\n    args: Object.assign({}, app.state.args, {\r\n      [name]: value\r\n    } )\r\n  } );\r\n  app.setState(state);\r\n};\r\n\r\nexport const navClickListener = (view, args = {}) => {\r\n  return (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    app.setState({\r\n      view,\r\n      args\r\n    });\r\n  };\r\n};\r\n\r\nexport const api = (id, endpoint, params = {}) => {\r\n  var state = app.state[id] || {};\r\n  app.setState({\r\n    [id]: Object.assign({}, state, {\r\n      isLoading: true\r\n    } )\r\n  });\r\n  fetch( \"http://localhost:8085/\" + endpoint, Object.assign({}, {\r\n    method: \"GET\",\r\n  }, params) )\r\n  .then( (res) => {\r\n    return res.json();\r\n  } )\r\n  .then( (json) => {\r\n    if ( Array.isArray(json) && json.length === 1 ){\r\n      json = json[0];\r\n    }\r\n    app.setState({\r\n      [id]: json\r\n    });\r\n  } )\r\n  .catch( (err) => {\r\n    app.setState({\r\n      [id]: {\r\n        error: err\r\n      }\r\n    });\r\n  } );\r\n};\r\n\r\nexport const getInitialState = () => {\r\n  var state = {\r\n    view: \"unknown\", \r\n    args: { }\r\n  };\r\n  var loc = window.location.pathname;\r\n  var matchFound = false;\r\n  var matches = [\r\n    // Matches Home Page /\r\n    {\r\n      r: /^\\/$/,\r\n      v: \"home\"\r\n    },\r\n    // Matches /image/:id\r\n    {\r\n      r: /\\/image\\/(.*)/,\r\n      v: \"image\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /images\r\n    {\r\n      r: /\\/images/,\r\n      v: \"images\"\r\n    },\r\n    // Matches /containers/show/:type\r\n    {\r\n      r: /\\/containers\\/show\\/(.*)/,\r\n      v: \"containers\",\r\n      m: (match) => {\r\n        return {\r\n          type: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/run/:id\r\n    {\r\n      r: /\\/container\\/run\\/(.*)/,\r\n      v: \"container-run\",\r\n      m: (match) => {\r\n        return {\r\n          imageId: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/:id\r\n    {\r\n      r: /\\/container\\/(.*)/,\r\n      v: \"container\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n\r\n  ];\r\n  matches.forEach( (check) => {\r\n    if ( matchFound === true ){\r\n      return;\r\n    }\r\n    var m = check.r.exec( loc );\r\n    if ( m  ){\r\n      if ( check.v ){\r\n        state.view = check.v;\r\n      }\r\n      state.args = check.m ? check.m(m) : {};\r\n      matchFound = true;\r\n    }\r\n  } );\r\n  return state;\r\n};\r\n\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default (props) => {\r\n  const listener = (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    window.history.pushState({}, props.title || \"Page Change\", props.to);\r\n    if ( typeof props.onClick === \"function\" ){\r\n      props.onClick();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  };\r\n  return (\r\n    <a href={props.to} onClick={listener} className={props.className || \"\"}>\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\nimport * as Actions from '../actions';\r\n\r\nclass Images extends React.Component {\r\n  componentDidMount(){\r\n    Actions.api(\"images\", \"images\");\r\n  }\r\n\r\n  render(){\r\n    var images = this.props.images || {};\r\n    return (\r\n      <div className='Images'>\r\n        <h1>Images</h1>\r\n        <p>This page lists the available images</p>\r\n\r\n        { images && images.isLoading === true ? (\r\n          <p>Loading...</p>\r\n        ) : null }\r\n\r\n        { images && images.output ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image ID</th>\r\n                <th>Repository</th>\r\n                <th>Size</th>\r\n                <th>Created</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { images.output.map( (image, index) => {\r\n                return (\r\n                  <tr key={image['IMAGE ID']}>\r\n                    <td>\r\n                      <Link to={`/image/${image['IMAGE ID']}`}>{image['IMAGE ID']}</Link>\r\n                    </td>\r\n                    <td>\r\n                      {image.REPOSITORY}\r\n                    </td>\r\n                    <td>\r\n                      {image.SIZE}\r\n                    </td>\r\n                    <td>\r\n                      {image.CREATED}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              } ) }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default function(WrapperComponent){\r\n  return class extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.apiId = [];\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if ( this.apiId ){\r\n        var messages = [],\r\n          type = \"success\",\r\n          prev = prevProps.message || null;\r\n        this.apiId.forEach( (id) => {\r\n          var apiResults = this.props[id];\r\n          if ( apiResults ){\r\n            if ( apiResults.error ){\r\n              messages.push(apiResults.error);\r\n              type = \"error\";\r\n            }\r\n            else if ( apiResults.results ){\r\n              var msg = \"\";\r\n              if ( apiResults.command ){\r\n                msg += `Successful Result\\n`;\r\n                msg += `Command:\\n ${apiResults.command}`;\r\n                msg += \"\\n\\n\";\r\n              }\r\n              msg += `Ouput:\\n${apiResults.results}`;\r\n              messages.push(msg);\r\n            }\r\n          }\r\n        } );\r\n        if ( messages && messages.length ){\r\n          var msgJoined = messages.join(\"\\n\\n\");\r\n          if ( prev !== msgJoined ){\r\n            Actions.setMessage(msgJoined, type);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    render(){\r\n      var self = this;\r\n      var add =  (id) => {\r\n        if ( self.apiId.indexOf(id) < 0 ){\r\n          self.apiId.push(id);\r\n        }\r\n      };\r\n      return (\r\n        <WrapperComponent \r\n          addApiWatchId={add}\r\n          setApiWatchId={add}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Images.css';\r\n\r\nclass Image extends React.Component {\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.setApiWatchId(`image-${this.getId()}`);\r\n    Actions.api(`image-${this.getId()}`, `image/inspect/${this.getId()}`);\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  render(){\r\n    var image = this.props[`image-${this.getId()}`] || {},\r\n      isShowFull = this.props.args.isShowFull || false;\r\n    if ( Array.isArray(image) ){\r\n      image = image[0]\r\n    }\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Image {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for an Image</p>\r\n        <h2>Details</h2>\r\n        <ul className=\"inline\">\r\n          <li>\r\n            <Link to={`/container/run/${this.getId()}`}>\r\n              Start a Container using this Image\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <a key=\"full-link\" href=\"#\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  Author\r\n                </td>\r\n                <td>\r\n                  {image.Author}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Architecture\r\n                </td>\r\n                <td>\r\n                  {image.Architecture}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  OS\r\n                </td>\r\n                <td>\r\n                  {image.Os}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Size\r\n                </td>\r\n                <td>\r\n                  {image.Size > 0 ? (\r\n                    <ul className=\"no-bullets\">\r\n                      <li>\r\n                        {(image.Size/1000000).toFixed(2)} MB\r\n                      </li>\r\n                      <li>\r\n                        {(image.Size/1000000000).toFixed(2)} GB\r\n                      </li>\r\n                    </ul>\r\n                  ) : null }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Tags\r\n                </td>\r\n                <td>\r\n                  { image.RepoTags && image.RepoTags.length ? (\r\n                    <ul className=\"no-bullets\">\r\n                      {image.RepoTags.map( (tag, index) => {\r\n                        return (\r\n                          <li key={`tag-${index}`}>{tag}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Exposed Ports\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.ExposedPorts ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.ExposedPorts).map((key,index) => {\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Environment Variables\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Env ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { image.Config.Env.map((key,index) => {\r\n                        if ( key.match(/^PATH/) ){\r\n                          return null;\r\n                        }\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Labels\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Labels ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.Labels).map((key,index) => {\r\n                        return (\r\n                          <li key={`label-${key}`}><em>{key}</em> : \"{image.Config.Labels[key]}\"</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(image, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Image);\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Images.css';\r\n\r\nclass Container extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n  }\r\n\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.mounted = true;\r\n    var id = this.getId(),\r\n      key = `container-${id}`;\r\n    this.props.addApiWatchId(key);\r\n    this.props.addApiWatchId(\"run-command\");\r\n    Actions.api(key, `container/inspect/${id}`);\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( self.props[key].isLoading === true ){\r\n        return;\r\n      }\r\n      if ( self.props[key].error ){\r\n        clearInterval(self.timer);\r\n        self.timer = null;\r\n        return;\r\n      }\r\n      Actions.api(key, `container/inspect/${id}`);\r\n    }, 1000 );\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  containerCommand(cmd){\r\n    return ((e) => {\r\n      e.preventDefault();\r\n      Actions.api(\"run-command\", `container/${this.getId()}/perform/${cmd}`, {\r\n        method: \"post\"\r\n      } );\r\n    }).bind(this);\r\n  }\r\n\r\n  render(){\r\n    var container = this.props[`container-${this.getId()}`] || {},\r\n      isShowFull = this.props.args.isShowFull || false;\r\n    if ( Array.isArray(container) ){\r\n      container = container[0];\r\n    }\r\n    var state = container.State ? container.State.Status : null;\r\n    var stateFieldList = [\r\n      \"Status\",\"Running\",\"Paused\",\"Restarting\",\"Dead\"\r\n    ];\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Container {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for a Container</p>\r\n        <h2>Details</h2>\r\n        <ul className=\"inline\">\r\n          { state === \"exited\" ? [\r\n            <li key=\"start\">\r\n              <a href=\"#\" onClick={this.containerCommand(\"start\")}>\r\n                Start\r\n              </a>\r\n            </li>,\r\n            <li key=\"remove\">\r\n              <a href=\"#\" className=\"text-danger\" onClick={this.containerCommand(\"rm\")}>\r\n                Remove\r\n              </a>\r\n            </li>,\r\n          ] : null } \r\n          { state === \"running\" ? [\r\n            <li key=\"stop\">\r\n              <a href=\"#\" onClick={this.containerCommand(\"stop\")}>\r\n                Stop\r\n              </a>\r\n            </li>,\r\n            <li key=\"pause\">\r\n              <a href=\"#\" onClick={this.containerCommand(\"pause\")}>\r\n                Pause\r\n              </a>\r\n            </li>,\r\n            <li key=\"restart\">\r\n              <a href=\"#\" onClick={this.containerCommand(\"restart\")}>\r\n                Restart\r\n              </a>\r\n            </li>\r\n          ] : null }\r\n          { state === \"paused\" ? (\r\n            <li>\r\n              <a href=\"#\" onClick={this.containerCommand(\"unpause\")}>\r\n                Unpause\r\n              </a>\r\n            </li>\r\n          ) : null }\r\n          <li>\r\n            <a key=\"full-link\" href=\"#\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { state === \"running\" ? (\r\n                <tr>\r\n                  <td>\r\n                    Started At\r\n                  </td>\r\n                  <td>\r\n                    {container.State.StartedAt}\r\n                  </td>\r\n                </tr>\r\n              ) : null }\r\n              { container.State ? (\r\n              <tr>\r\n                <td>\r\n                  State\r\n                </td>\r\n                <td>\r\n                  <ul>\r\n                    { stateFieldList.map( (field) => {\r\n                      return (\r\n                        <li key={field}>\r\n                          <strong>{field}</strong> : {\"\" + container.State[field]}\r\n                        </li>\r\n                      );\r\n                    } ) }\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n              { container.Config && container.Config.Image ? (\r\n              <tr>\r\n                <td>\r\n                  Image\r\n                </td>\r\n                <td>\r\n                  <Link to={`/image/${container.Config.Image}`}>{container.Config.Image}</Link>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(container, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Container);\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Containers.css';\r\n\r\nclass Containers extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n  }\r\n\r\n  getType(){\r\n    var type = this.props.args || {};\r\n    type = type.type || \"all\";\r\n    return type;\r\n  }\r\n\r\n  componentDidMount(){\r\n    var type = this.getType();\r\n    Actions.api(\"containers\", `containers/show/${type}`);\r\n    this.mounted = true;\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( !self.mounted ){\r\n        clearInterval(self.timer);\r\n        return;\r\n      }\r\n      Actions.api(\"containers\", `containers/show/${self.getType()}`);\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    var type = this.getType();\r\n    if ( prevProps.args.type !== type ){\r\n      Actions.api(\"containers\", `containers/show/${type}`);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var args = this.props.args || {},\r\n      containers = this.props.containers || [];\r\n    if ( containers.output && containers.output.length ){\r\n      containers = containers.output;\r\n    }\r\n    var first = containers.length ? containers[0] : null;\r\n    return (\r\n      <React.Fragment>\r\n        <div className='Containers'>\r\n          <h1>Containers</h1>\r\n          <div className=\"Containers-options\">\r\n            <Link to={`/containers/show/${this.getType() === \"all\" ? \"running\" : \"all\"}`} className={`toggler${(args.type === \"all\" ? \" checked\" : \"\")}`}>\r\n              Show All\r\n            </Link>\r\n          </div>\r\n          { args.type === \"all\" ? (\r\n            <p>This page is showing all containers.</p>\r\n          ) : (\r\n            <p>This page is showing only the running containers.</p>\r\n          ) }\r\n          { first ? (\r\n            <table className=\"border\">\r\n              <thead>\r\n                <tr>\r\n                  { Object.keys(first).map( (col) => <th key={col}>{col}</th> ) }\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              { containers.map ( (container, index) => {\r\n                var total = 0,\r\n                  emptyCount = 0;\r\n                Object.keys(container).forEach( (con,i) => {\r\n                  total++;\r\n                  if ( !container[con] ){\r\n                    emptyCount++;\r\n                  }\r\n                } );\r\n                // Skip Empty row\r\n                if ( total === emptyCount ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={`row-${index}`}>\r\n                    { Object.keys(container).map( (con,i) => {\r\n                      var v = container[con];\r\n                      if ( con === \"IMAGE\" ){\r\n                        v = <Link to={`/image/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"CONTAINER ID\" ){\r\n                        v = <Link to={`/container/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"PORTS\" && v.length ){\r\n                        v = (\r\n                          <ul>\r\n                            { v.split(/\\,/).map( (line, lineI) => {\r\n                              return (\r\n                                <li key={`line-${lineI}`}>\r\n                                  {line}\r\n                                </li>\r\n                              );\r\n                            } ) }\r\n                          </ul>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <td key={`row-${i}`}>{v}</td> \r\n                      );\r\n                    } ) }\r\n                  </tr>\r\n                );\r\n              } ) }\r\n              </tbody>\r\n            </table>\r\n          ) : null }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Containers;\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport Link from '../components/Link';\r\n\r\nclass ContainerRun extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      flag: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    var key = `image-${this.props.args.imageId}`;\r\n    this.props.addApiWatchId(\"container_run\");\r\n    this.props.addApiWatchId(key);\r\n    if ( !this.props[key] ){\r\n      Actions.api(key, `image/inspect/${this.props.args.imageId}`);\r\n    }\r\n  }\r\n \r\n  handleForm(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var args = this.props.args || {},\r\n      options = [],\r\n      volumes = [];\r\n    var map = {\r\n      flagRm: \"--rm\",\r\n      flagTty: \"-t\"\r\n    };\r\n    Object.keys(args).forEach( (key) => {\r\n      if ( map.hasOwnProperty(key) ){\r\n        var v = map[key].split(/\\s/);\r\n        options.push({\r\n          key: v[0],\r\n          value: v[1] || \"\"\r\n        });\r\n      }\r\n    } );\r\n    if ( args.name && args.name.length ){\r\n      options.push({\r\n        key: \"--name\",\r\n        value: args.name\r\n      });\r\n    }\r\n    if ( args.volumes && args.volumes.length ){\r\n      args.volumes.forEach( (vol) => {\r\n        if ( vol.local && vol.remote ){\r\n          volumes.push(vol);\r\n        }\r\n      } );\r\n    }\r\n    Actions.api(\"container_run\", `container/run/${this.props.args.imageId}`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        options,\r\n        volumes,\r\n        additionalArgs: args.additionalArgs || \"\",\r\n        ports: args.ports,\r\n      })\r\n    });\r\n  }\r\n\r\n  addVolume(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var volumes = this.props.args.volumes || [];\r\n    volumes.push({\r\n      local: \"\",\r\n      remote: \"\"\r\n    });\r\n    Actions.setArg(\"volumes\", volumes);\r\n  }\r\n\r\n  inputListener(name){\r\n    var self = this;\r\n    return (e) => {\r\n      switch ( name ){\r\n        case \"flagRm\":\r\n          Actions.setArg(\"flagRm\", self.props.args.flagRm ? false : true);\r\n          self.setState({\r\n            flag: !self.state.flag\r\n          });\r\n          break;\r\n        case \"flagTty\":\r\n          Actions.setArg(\"flagTty\", self.props.args.flagTty === true ? false : true);\r\n          break;\r\n\r\n        default:\r\n          var match;\r\n          if ( name.match(/port_/) ){\r\n            var ports = this.props.args.ports || {};\r\n            ports[name.replace(/port_/,'')] = e.target.value;\r\n            Actions.setArg(\"ports\", ports);\r\n          } \r\n          else if ( match = name.match(/volume-(\\d+)-(local|remote)/) ){\r\n            var i = match[1],\r\n              type = match[2];\r\n            var volumes = self.props.args.volumes || [];\r\n            volumes = volumes.slice();\r\n            if ( volumes[i] ){\r\n              volumes[i][type] = e.target.value;\r\n            }\r\n            Actions.setArg(\"volumes\", volumes);\r\n          }\r\n          else if ( match = name.match(/remove-volume-(\\d+)/) ){\r\n            e.preventDefault();\r\n            var i = match[1];\r\n            var volumes = self.props.args.volumes ? self.props.args.volumes.slice() : [];\r\n            volumes.splice(i,1);\r\n            Actions.setArg(\"volumes\", volumes);\r\n          }\r\n          else {\r\n            Actions.setArg(name, e.target.value);\r\n          }\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var imageKey = `image-${this.props.args.imageId}`;\r\n    var image = this.props[imageKey] || {},\r\n      args = this.props.args,\r\n      ports = args.ports || {},\r\n      additionalArgs = args.additionalArgs || \"\",\r\n      volumes = args.volumes || [];\r\n    if ( Array.isArray(image) ){\r\n      image = image[0];\r\n    }\r\n    var self = this;\r\n    return (\r\n      <div className=\"Container-run\">\r\n        <h1>Start a Container</h1>\r\n        <p>From this page you can start a new container using the selected image.  Please customize the details below to set different options on the container.</p>\r\n        <form onSubmit={this.handleForm.bind(this)}>\r\n          <p>\r\n            <strong>Name</strong> <em>(optional)</em><br />\r\n            <em>Gives the container a name so you can easily run commands on the container.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input value={args.name || \"\"} onChange={this.inputListener(\"name\")} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/** ==================== FLAGS ==================== **/}\r\n          <p><strong>Flags</strong></p>\r\n          <div className=\"flex-col\">\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagRm} onChange={this.inputListener(\"flagRm\")} checked={args.flagRm ? true : false} /> Don't Persist\r\n              </label>\r\n              &nbsp;- <em>When the container is stopped, it is automatically removed, and can't be restarted.</em>\r\n            </span>\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagTty} onChange={this.inputListener(\"flagTty\")} checked={args.flagTty ? true : false} /> Prevent Exit\r\n                &nbsp;- <em>Containers exit if a script isn't set to run at start, this flag prevents the container from exiting</em> \r\n              </label>\r\n            </span>\r\n          </div>\r\n          {/** ==================== PORT MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Port Mapping</strong> <em>(optional)</em><br />\r\n            <em>If left empty, that port will not be exposed to localhost</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <div className=\"flex-row flex-justify-between\">\r\n                  <span>Local Port</span><span></span><span>Container Port</span>\r\n                </div>\r\n            { image.Config && image.Config.ExposedPorts ? ( \r\n              Object.keys(image.Config.ExposedPorts).map( (port) => {\r\n                port = port.replace(/(\\d+).*/,\"$1\");\r\n                return (\r\n                  <div key={`port-${port}`} className=\"flex-row flex-justify-between\">\r\n                    <div>\r\n                      <input onChange={self.inputListener(`port_${port}`)} value={ports[port] || \"\"} />\r\n                    </div>\r\n                    <span>=></span>\r\n                    <div>\r\n                      <input readOnly value={port} />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              } )\r\n            ) : \"No Exposed Ports\" }\r\n            </div>\r\n          </div>\r\n          {/** ==================== VOLUME MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Volume Binding Mapping</strong> <em>(optional)</em><br />\r\n            <em>Binds a local directory to a directory in the container.  Please use full paths</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            { volumes.map( (vol,index) => {\r\n              return (\r\n                <div key={`vol-${index}`} className=\"flex-row flex-justify-between\">\r\n                  <div>\r\n                    <input placeholder=\"local\" value={vol.local} onChange={self.inputListener(`volume-${index}-local`)} />\r\n                  </div>\r\n                  <span>=></span>\r\n                  <div>\r\n                    <input placeholder=\"container\" value={vol.remote} onChange={self.inputListener(`volume-${index}-remote`)} /> &nbsp;\r\n                    <a href=\"#\" onClick={this.inputListener(`remove-volume-${index}`)} className=\"no-style text-danger\">- Delete</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            } ) }\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <a href=\"#\" onClick={this.addVolume.bind(this)}>\r\n                + Add a Volume\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/** ==================== VOLUME MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Additional Arguments</strong><br />\r\n            <em>Enter any other options/arguments to the command.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input placeholder=\"docker run arguments\" value={additionalArgs} onChange={self.inputListener(`additionalArgs`)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button type=\"submit\">Start Container</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(ContainerRun);\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div>\r\n      <h1>404 - Page Not Found</h1>\r\n      <p>\r\n        Return to <Link to=\"/containers/show/running\">Containers</Link> page.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Docker GUI</h1>      \r\n      <p>\r\n        This is a simple interface for managing your local Docker images, containers, and volumes (<em>coming soon</em>)\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport * as Actions from './actions';\r\nimport Images from './pages/Images';\r\nimport Image from './pages/Image';\r\nimport Container from './pages/Container';\r\nimport Containers from './pages/Containers';\r\nimport ContainerRun from './pages/ContainerRun';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport Home from './pages/Home';\r\nimport Link from './components/Link';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    /**\r\n     * Create Global access reference to\r\n     * Main App Wrapper Component\r\n     */\r\n    Actions.setApp(this);\r\n\r\n    this.originalPopstateListener = window.onpopstate;\r\n\r\n    /**\r\n     * Main App State\r\n     * Changes are managed through\r\n     * Actions.js function calls\r\n     */\r\n    this.state = Actions.getInitialState();\r\n  }\r\n\r\n  handleHistoryEvent(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.onpopstate = this.handleHistoryEvent;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.onpopstate = this.originalPopstateListener;\r\n  }\r\n\r\n  route(viewName){\r\n    var ret = null;\r\n    switch ( viewName ){\r\n      // Containers List Page\r\n      case \"containers\":\r\n        ret = <Containers {...this.state} />;\r\n        break;\r\n\r\n      // Images List Page\r\n      case \"images\":\r\n        ret = <Images {...this.state} />;\r\n        break;\r\n\r\n      // Image Summary Page\r\n      case \"image\":\r\n        ret = <Image {...this.state} />;\r\n        break;\r\n\r\n      // Start Container from Image Page\r\n      case \"container-run\":\r\n        ret = <ContainerRun {...this.state} />;\r\n        break;\r\n\r\n      // Container Summary Page\r\n      case \"container\":\r\n        ret = <Container {...this.state} />;\r\n        break;\r\n        \r\n      // Home Page\r\n      case \"home\":\r\n        ret = <Home />;\r\n        break;\r\n\r\n      default: \r\n        ret = <PageNotFound />;\r\n        break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <ul className=\"App-nav\">\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/containers/show/running\">Containers</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/images\">Images</Link>\r\n            </li>\r\n          </ul>\r\n          <p>\r\n            <a style={{color:\"white\",textDecoration: \"none\"}} href=\"https://github.com/chrisonbass/docker-gui\">@chrisonbass</a>\r\n          </p>\r\n        </header>\r\n        {/** =========== OUTPUT ERROR ============= **/}\r\n        { this.state.message && (\"\" + this.state.message).length ? (\r\n          <div className={`App-msg-${this.state.messageType === \"success\" ? \"success\" : \"error\"}`}>\r\n            <a href=\"#\" onClick={Actions.clearMessage} className=\"close\">x</a>\r\n            <pre>\r\n              {this.state.message}\r\n            </pre>\r\n          </div>\r\n        ) : null }\r\n\r\n        <div className=\"App-body\">\r\n          { this.route(this.state.view) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}