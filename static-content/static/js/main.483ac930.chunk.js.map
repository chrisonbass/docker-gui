{"version":3,"sources":["actions.js","components/withApiWatch.js","pages/Volume.js","components/Link.js","pages/Volumes.js","pages/Images.js","pages/Image.js","components/withSocket.js","pages/ImageCreate.js","pages/Container.js","pages/Containers.js","pages/ContainerRun.js","pages/PageNotFound.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["app","setApp","appInstance","setState","state","setMessage","message","messageType","length","console","error","clearMessage","e","preventDefault","setArg","name","value","Object","assign","args","api","id","endpoint","params","isLoading","fetch","method","then","res","json","Array","isArray","catch","err","outputArgs","data","hasOwnProperty","socketOpen","JSON","stringify","file","Blob","type","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","handleLoadArgs","_","get","reader","FileReader","readAsText","onload","evt","parse","target","result","isLoadArgs","onerror","getInitialState","view","loc","location","pathname","matchFound","r","v","m","match","imageId","forEach","check","exec","WrapperComponent","props","apiId","repeating","timer","mounted","this","setInterval","timerCallback","bind","prevProps","messages","prev","apiResults","push","results","msg","command","msgJoined","join","Actions","clearInterval","concat","key","c","item","self","add","indexOf","addRepeatingApi","found","find","warn","addApiWatchId","setApiWatchId","React","Component","withApiWatch","socket","WebSocket","onopen","onclose","onmessage","output","line","finished","stdout","scrollTop","scrollHeight","getId","send","confirm","val","objectToString","obj","keys","map","k","parseValue","volume","volumeDetails","backupStarted","keysUsed","className","onClick","handleDeleteClick","handleBackupClick","index","toLowerCase","ref","to","history","pushState","title","children","volumeName","prompt","volumes","handleNewVolume","col","i","vol","Link","Images","images","image","REPOSITORY","SIZE","CREATED","isShowFull","cmd","options","Size","imageCommand","toggleShowFullDetails","Author","Architecture","Os","toFixed","RepoTags","tag","Config","ExposedPorts","replace","Env","Labels","isOpen","stdoutRef","sendMessage","setSocketKey","withSocket","path","buildArgs","slice","splice","newArg","onSubmit","handleFormSubmit","onChange","arg","style","marginRight","getArgChangeListener","handleAddArg","volName","sourceDirectory","containerId","container","isSocketOpen","State","Status","containerCommand","StartedAt","field","Image","Containers","getType","containers","first","Fragment","total","emptyCount","con","split","lineI","flag","mounts","flagRm","flagTty","local","remote","volumeId","additionalArgs","ports","argType","imageKey","availableVolumes","handleForm","inputListener","checked","port","readOnly","placeholder","addBountMount","vi","addVolume","App","originalPopstateListener","onpopstate","handleHistoryEvent","viewName","ret","Home","PageNotFound","color","textDecoration","route","textAlign","handleLoadSwitch","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.483ac930.chunk.js","sourcesContent":["import _ from 'lodash';\r\n\r\nvar app = null;\r\n\r\nexport const setApp = (appInstance) => {\r\n  app = appInstance;\r\n};\r\n\r\nexport const setState = (state = {}) => {\r\n  app.setState(state);\r\n};\r\n\r\nexport const clearStateKey = (key) => {\r\n  if ( app && app.state.hasOwnProperty(key) ){\r\n    delete app.state[key];\r\n    app.setState(app.state);\r\n  }\r\n};\r\n\r\nexport const setMessage = (message = \"\", messageType = \"success\") => {\r\n  if ( typeof message === \"string\" && message.length ){\r\n    app.setState({\r\n      message,\r\n      messageType\r\n    });\r\n  } \r\n  else if ( typeof message !== \"string\" ){\r\n    console.error(`setErrorMessage only accepts strings.  A '${(typeof message)}' was provided`);\r\n  }\r\n  else {\r\n    console.error(\"Trying to call setErrorMessage with an empty string\");\r\n  }\r\n};\r\n\r\nexport const clearMessage = (e = null) => {\r\n  if ( e && e.preventDefault ){\r\n    e.preventDefault();\r\n  }\r\n  app.setState({\r\n    message: null,\r\n    messageType: \"success\"\r\n  });\r\n};\r\n\r\nexport const setArg = (name, value) => {\r\n  var state =  Object.assign( {}, app.state, {\r\n    args: Object.assign({}, app.state.args, {\r\n      [name]: value\r\n    } )\r\n  } );\r\n  app.setState(state);\r\n};\r\n\r\nexport const navClickListener = (view, args = {}) => {\r\n  return (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    app.setState({\r\n      view,\r\n      args\r\n    });\r\n  };\r\n};\r\n\r\nexport const api = (id, endpoint, params = {}) => {\r\n  var state = app.state[id] || {};\r\n  app.setState({\r\n    [id]: Object.assign({}, state, {\r\n      isLoading: true\r\n    } )\r\n  });\r\n  fetch( \"http://localhost:8085/\" + endpoint, Object.assign({}, {\r\n    method: \"GET\",\r\n  }, params) )\r\n  .then( (res) => {\r\n    return res.json();\r\n  } )\r\n  .then( (json) => {\r\n    if ( Array.isArray(json) && json.length === 1 ){\r\n      json = json[0];\r\n    }\r\n    app.setState({\r\n      [id]: json\r\n    });\r\n  } )\r\n  .catch( (err) => {\r\n    app.setState({\r\n      [id]: {\r\n        error: err\r\n      }\r\n    });\r\n  } );\r\n};\r\n\r\nexport const getArgsDisplay = () => {\r\n  var args = Object.assign({}, ( _.get(app.state, \"args\") || {} ));\r\n  if ( args.hasOwnProperty(\"socketOpen\") ){\r\n    delete args.socketOpen;\r\n  }\r\n  return JSON.stringify(args, null, 2);\r\n};\r\n\r\nexport const outputArgs = (e) => {\r\n  if ( e && e.preventDefault ){\r\n    e.preventDefault();\r\n  }\r\n  var filename = \"args.json\";\r\n  var data = Object.assign({}, app.state.args);\r\n  if ( data.hasOwnProperty('socketOpen') ){\r\n    delete data.socketOpen;\r\n  }\r\n  data = JSON.stringify(data);\r\n  var file = new Blob([data], {type: \"json\"});\r\n  if (window.navigator.msSaveOrOpenBlob){ // IE10+\r\n    window.navigator.msSaveOrOpenBlob(file, filename);\r\n  }\r\n  else { // Others\r\n    var a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function() {\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);  \r\n    }, 0); \r\n  }\r\n};\r\n\r\nexport const handleLoadArgs = (e) => {\r\n  var file = _.get(e, \"target.files[0]\");\r\n  if (file) {\r\n    var reader = new FileReader();\r\n    reader.readAsText(file, \"UTF-8\");\r\n    reader.onload = function (evt) {\r\n      try {\r\n        var json = JSON.parse(evt.target.result);\r\n        var state = Object.assign({}, app.state);\r\n        state.args = Object.assign({}, state.args, json);\r\n        state.isLoadArgs = false;\r\n        setState(state);\r\n      } catch (e ){\r\n        console.error(e);\r\n        setState({isLoadArgs: false});\r\n      }\r\n    }\r\n    reader.onerror = function (evt) {\r\n      console.error(evt);\r\n      setState({isLoadArgs: false});\r\n    }\r\n  }\r\n};\r\n\r\nexport const getInitialState = () => {\r\n  var state = {\r\n    view: \"unknown\", \r\n    isLoadArgs: false,\r\n    args: { }\r\n  };\r\n  var loc = window.location.pathname;\r\n  var matchFound = false;\r\n  var matches = [\r\n    // Matches Home Page /\r\n    {\r\n      r: /^\\/$/,\r\n      v: \"home\"\r\n    },\r\n    {\r\n      r: /^\\/image\\/create$/,\r\n      v: \"image-create\"\r\n    },\r\n    // Matches /image/:id\r\n    {\r\n      r: /\\/image\\/(.*)/,\r\n      v: \"image\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /images\r\n    {\r\n      r: /\\/images/,\r\n      v: \"images\"\r\n    },\r\n    // Matches /containers/show/:type\r\n    {\r\n      r: /\\/containers\\/show\\/(.*)/,\r\n      v: \"containers\",\r\n      m: (match) => {\r\n        return {\r\n          type: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/run/:id\r\n    {\r\n      r: /\\/container\\/run\\/(.*)/,\r\n      v: \"container-run\",\r\n      m: (match) => {\r\n        return {\r\n          imageId: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/:id\r\n    {\r\n      r: /\\/container\\/(.*)/,\r\n      v: \"container\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /volumes\r\n    {\r\n      r: /\\/volumes\\/?$/,\r\n      v: \"volumes\"\r\n    },\r\n    // Match /volume/create\r\n    {\r\n      r: /\\/volume\\/create$/,\r\n      v: \"volume-create\"\r\n    },\r\n    // Matches /volume/:id\r\n    {\r\n      r: /\\/volume\\/(.*)/,\r\n      v: \"volume\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n  ];\r\n  matches.forEach( (check) => {\r\n    if ( matchFound === true ){\r\n      return;\r\n    }\r\n    var m = check.r.exec( loc );\r\n    if ( m  ){\r\n      if ( check.v ){\r\n        state.view = check.v;\r\n      }\r\n      state.args = check.m ? check.m(m) : {};\r\n      matchFound = true;\r\n    }\r\n  } );\r\n  return state;\r\n};\r\n\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default function(WrapperComponent){\r\n  return class extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.apiId = [];\r\n      this.repeating = [];\r\n      this.timer = null;\r\n      this.mounted = false;\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.mounted = true;\r\n      if ( this.repeating ){\r\n        this.timer = setInterval(this.timerCallback.bind(this), 1500);\r\n        this.timerCallback();\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if ( this.apiId ){\r\n        var messages = [],\r\n          type = \"success\",\r\n          prev = prevProps.message || null;\r\n        this.apiId.forEach( (id) => {\r\n          var apiResults = this.props[id];\r\n          if ( apiResults ){\r\n            if ( apiResults.error ){\r\n              messages.push(apiResults.error);\r\n              type = \"error\";\r\n            }\r\n            else if ( apiResults.results ){\r\n              var msg = \"\";\r\n              if ( apiResults.command ){\r\n                msg += `Successful Result\\n`;\r\n                msg += `Command:\\n ${apiResults.command}`;\r\n                msg += \"\\n\\n\";\r\n              }\r\n              msg += `Ouput:\\n${apiResults.results}`;\r\n              messages.push(msg);\r\n            }\r\n          }\r\n        } );\r\n        if ( messages && messages.length ){\r\n          var msgJoined = messages.join(\"\\n\\n\");\r\n          if ( prev !== msgJoined ){\r\n            Actions.setMessage(msgJoined, type);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      this.mounted = false;\r\n      if ( this.timer ){\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n      }\r\n      this.repeating.concat(this.apiId).forEach( (id) => {\r\n        var c = id;\r\n        if ( id && id.id ){\r\n          c = id.id;\r\n        }\r\n        Actions.clearStateKey(c);\r\n      } );\r\n    }\r\n\r\n    timerCallback(e){\r\n      if ( !this.mounted ){\r\n        if ( this.timer ){\r\n          clearInterval(this.timer);\r\n          this.timer = null;\r\n        }\r\n        return;\r\n      }\r\n      this.repeating.forEach( (item) => {\r\n        Actions.api(item.id, item.endpoint, item.params);\r\n      } );\r\n    }\r\n\r\n    render(){\r\n      var self = this;\r\n      var add =  (id) => {\r\n        if ( self.apiId.indexOf(id) < 0 ){\r\n          self.apiId.push(id);\r\n        }\r\n      };\r\n      var repeat = (id, endpoint, params = {}) => {\r\n        if ( self.mounted === true ){\r\n          console.warn(\"`addRepeatingApi` must be called before `withApiWatch` is mounted\")\r\n          return;\r\n        }\r\n        var found = self.repeating.find( (item) => {\r\n          return item.id === id;\r\n        } );\r\n        if ( !found ){\r\n          self.repeating.push({\r\n            id,\r\n            endpoint,\r\n            params,\r\n            timer: null\r\n          });\r\n        }\r\n      };\r\n      return (\r\n        <WrapperComponent \r\n          addRepeatingApi={repeat}\r\n          addApiWatchId={add}\r\n          setApiWatchId={add}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nclass Volume extends React.Component {\r\n  constructor(props){\r\n    super(props); \r\n    var self = this;\r\n    Actions.setArg(\"socketOpen\", false);\r\n    this.socket = new WebSocket(\"ws://localhost:8086\");\r\n    this.socket.onopen = () => {\r\n      Actions.setArg(\"socketOpen\", true);\r\n    };\r\n    this.socket.onclose = () => {\r\n      Actions.setArg(\"socketOpen\", false);\r\n    };\r\n    this.socket.onmessage = (msg) => {\r\n      var data;\r\n      try {\r\n        data = JSON.parse(msg.data);\r\n      } catch ( e ) {\r\n        return;\r\n      }\r\n      if ( data && data.type === \"volume-create-backup\" ){\r\n        if ( data && ( data.data || data.error ) ){\r\n          var output = _.get(self.props,\"args.output\") || [];\r\n          var line = data.data || data.error;\r\n          if ( line.match(/^\\(/) ){\r\n            if ( output.length && output[output.length - 1].match(/^\\(/) ){\r\n              output[output - 1] = line;\r\n            } else {\r\n              output.push(line);\r\n            }\r\n          } else {\r\n            output.push(line);\r\n          }\r\n          Actions.setArg(\"output\", output);\r\n        }\r\n        if ( data && data.finished === true ){\r\n          Actions.setArg(\"backupStarted\", false);\r\n        }\r\n        setTimeout( () => {\r\n          if ( self.stdout ){\r\n            self.stdout.scrollTop = self.stdout.scrollHeight;\r\n          }\r\n        }, 100 );\r\n      }\r\n    };\r\n\r\n    this.stdout = null;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.addApiWatchId(\"volume-delete\");\r\n    this.props.addRepeatingApi(\"volume-info\", \"volume/\" + this.getId());\r\n  }\r\n\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  handleBackupClick(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var name = this.getId();\r\n    var {\r\n      socketOpen\r\n    } = this.props.args;\r\n    if ( name && socketOpen ){\r\n      this.socket.send(JSON.stringify({\r\n        type: \"volume-create-backup\",\r\n        name\r\n      }));\r\n      Actions.setArg(\"backupStarted\", true);\r\n    } \r\n    else if ( !socketOpen ){\r\n      Actions.setMessage(\"Socket is not connected.  Please refresh the page.\", \"error\");\r\n    }\r\n    else if ( !name ) {\r\n      Actions.setMessage(\"Please enter a path first.\", \"error\");\r\n    }\r\n  }\r\n\r\n  handleDeleteClick(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    if ( !window.confirm(\"Are you sure you want to delete this image?\") ){\r\n      return;\r\n    } \r\n    Actions.api(\"volume-delete\", \"volume/\" + this.getId(), {\r\n      method: \"DELETE\"\r\n    } );\r\n  }\r\n\r\n  parseValue(val){\r\n    if ( Array.isArray(val) ){\r\n      return val.join(\", \");\r\n    }\r\n    switch ( typeof val ){\r\n      case \"string\":\r\n      case \"number\":\r\n        return val;\r\n      case \"object\":\r\n        return this.objectToString(val);\r\n      default:\r\n        return val;\r\n    }\r\n  }\r\n\r\n  objectToString(obj){\r\n    return (\r\n      <ul>\r\n        { Object.keys(obj).map( (k) => {\r\n          return (\r\n            <li key={`entry-${k}`}><strong>{k}</strong> => {this.parseValue(obj[k])}</li>\r\n          );\r\n        } ) }\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    var volume = _.get(this.props, \"volume-info.results.basic\"),\r\n      volumeDetails = _.get(this.props, \"volume-info.results.meta\"),\r\n      socketOpen = _.get(this.props,\"args.socketOpen\") || false,\r\n      output = _.get(this.props, \"args.output\"),\r\n      backupStarted = _.get(this.props, \"args.backupStarted\") || false,\r\n      self = this;\r\n\r\n    var keysUsed = [];\r\n\r\n    return (\r\n      <div className=\"Volume\">\r\n        <h1>Volume {this.getId()}</h1>\r\n        <p>This page container information about a specific Volume, and provides simple actions to manage the Volume.</p>\r\n        <p>\r\n          <span className={`toggler danger${(socketOpen === true ? \" checked\" : \"\")}`}> \r\n            Connection Open\r\n          </span><br />\r\n          <em>This page uses WebSockets to stream the output of the build process to this page.  If the indicator above is red, there is no connection.</em><br />\r\n          { backupStarted ? (\r\n            <span className={`toggler danger${(backupStarted === true ? \" checked\" : \"\")}`}> \r\n              Backup Started\r\n            </span>\r\n          ) : null }\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.handleDeleteClick.bind(this)}>\r\n              Delete Volume\r\n            </a>\r\n          </li>\r\n          { !backupStarted  ? (\r\n            <li>\r\n              <a href=\"void\" onClick={this.handleBackupClick.bind(this)}>\r\n                Create Backup\r\n              </a>\r\n            </li>\r\n          ) : null }\r\n        </ul>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <table className=\"border\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    Name\r\n                  </th>\r\n                  <th>\r\n                    Value \r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { volume ? (\r\n                  Object.keys(volume).map( (key, index) => {\r\n                    keysUsed.push(key.toLowerCase());\r\n                    return (\r\n                      <tr key={`volume-basic-${key}-${index}`}>\r\n                        <td>{key}</td><td>{this.parseValue(volume[key])}</td>\r\n                      </tr>\r\n                    );\r\n                  } )\r\n                ) : null }\r\n                { volumeDetails ? (\r\n                  Object.keys(volumeDetails).map( (key, index) => {\r\n                    if ( keysUsed.indexOf(key.toLowerCase()) >= 0 ){\r\n                      return null;\r\n                    }\r\n                    return (\r\n                      <tr key={`volume-meta-${key}-${index}`}>\r\n                        <td>{key}</td><td>{this.parseValue(volumeDetails[key])}</td>\r\n                      </tr>\r\n                    );\r\n                  } )\r\n                ) : null }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre \r\n            className=\"console\" \r\n            key=\"console\"\r\n            ref={ (r) => {\r\n              self.stdout = r;\r\n            } }\r\n          >\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withApiWatch(Volume);\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default (props) => {\r\n  const listener = (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    window.history.pushState({}, props.title || \"Page Change\", props.to);\r\n    if ( typeof props.onClick === \"function\" ){\r\n      props.onClick();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  };\r\n  return (\r\n    <a href={props.to} onClick={listener} className={props.className || \"\"}>\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport Link from '../components/Link';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\n\r\nclass Volumes extends React.Component {\r\n  componentDidMount(){\r\n    this.props.addRepeatingApi(\"volumes\", \"volumes\");\r\n    this.props.addApiWatchId(\"volume-create\");\r\n  }\r\n\r\n  handleNewVolume(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var volumeName = window.prompt(\"Please enter a name for the Volume.\");\r\n    if ( volumeName ){\r\n      Actions.api(\"volume-create\", \"volume/create\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({\r\n          name: volumeName\r\n        })\r\n      } );\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var volumes = _.get(this.props, \"volumes.output\") || [];\r\n    return (\r\n      <div className='Volumes'>\r\n        <h1>Volumes</h1>\r\n        <p>This page lists the available volumes.</p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"void\" onClick={this.handleNewVolume.bind(this)}>\r\n              Create new Volume\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        { volumes && volumes.length ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                { Object.keys(volumes[0]).map( (col,i) => {\r\n                  return (\r\n                    <th key={`col-${col}`}>{col}</th>\r\n                  );\r\n                } ) }\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { volumes.map( (vol, index) => {\r\n                return (\r\n                  <tr key={`vol-${index}`}>\r\n                    { Object.keys(vol).map( (v,i) => {\r\n                      var val = vol[v];\r\n                      if ( v === \"VOLUME NAME\" ){\r\n                        val = <Link to={`/volume/${vol[v]}`}>{vol[v]}</Link>;\r\n                      }\r\n                      return (\r\n                        <td key={`vol-key-${v}`}>\r\n                          {val}\r\n                        </td>\r\n                      );\r\n                    } ) }\r\n                  </tr>\r\n                );\r\n              } ) }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Volumes);\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\nimport * as Actions from '../actions';\r\n\r\nclass Images extends React.Component {\r\n  componentDidMount(){\r\n    Actions.api(\"images\", \"images\");\r\n  }\r\n\r\n  render(){\r\n    var images = this.props.images || {};\r\n    return (\r\n      <div className='Images'>\r\n        <h1>Images</h1>\r\n        <p>This page lists the available images</p>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/image/create\">\r\n              Create new Image\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        { images && images.output ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image ID</th>\r\n                <th>Repository</th>\r\n                <th>Size</th>\r\n                <th>Created</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { images.output.map( (image, index) => {\r\n                if ( !image['IMAGE ID'] ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={image['IMAGE ID']}>\r\n                    <td>\r\n                      <Link to={`/image/${image['IMAGE ID']}`}>{image['IMAGE ID']}</Link>\r\n                    </td>\r\n                    <td>\r\n                      {image.REPOSITORY}\r\n                    </td>\r\n                    <td>\r\n                      {image.SIZE}\r\n                    </td>\r\n                    <td>\r\n                      {image.CREATED}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              } ) }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport _ from 'lodash';\r\nimport './Images.css';\r\n\r\nclass Image extends React.Component {\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.addRepeatingApi(`image-${this.getId()}`, `image/inspect/${this.getId()}`);\r\n    this.props.addApiWatchId(`image-${this.getId()}`);\r\n    this.props.addApiWatchId(`run-img-command`);\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  imageCommand(cmd){\r\n    var self = this;\r\n    return (e) => {\r\n      e.preventDefault();\r\n      var params = {\r\n        method: \"post\"\r\n      };\r\n      if ( cmd === \"force-rm\" ){\r\n        cmd = \"rm\";\r\n        params.body = JSON.stringify({\r\n          options: [\"-f\"]\r\n        });\r\n      }\r\n      Actions.api(\"run-img-command\", `image/${self.getId()}/perform/${cmd}`, params );\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var image = this.props[`image-${this.getId()}`] || {},\r\n      isLoading = _.get(this.props,`image-${this.getId()}.isLoading`) || false,\r\n      isShowFull = this.props.args.isShowFull || false;\r\n    if ( Array.isArray(image) ){\r\n      image = image[0]\r\n    }\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Image {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for an Image</p>\r\n        <h2>Details</h2>\r\n        { isLoading && !image.Size ? (\r\n          <p>Please wait while the image details is loaded</p>\r\n        ) : null }\r\n        <ul className=\"inline\">\r\n          <li>\r\n            <Link to={`/container/run/${this.getId()}`}>\r\n              Create a Container\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.imageCommand(\"rm\")}>\r\n              Delete Image\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.imageCommand(\"force-rm\")}>\r\n              Force Delete Image\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a key=\"full-link\" href=\"void\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  Author\r\n                </td>\r\n                <td>\r\n                  {image.Author}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Architecture\r\n                </td>\r\n                <td>\r\n                  {image.Architecture}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  OS\r\n                </td>\r\n                <td>\r\n                  {image.Os}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Size\r\n                </td>\r\n                <td>\r\n                  {image.Size > 0 ? (\r\n                    <ul className=\"no-bullets\">\r\n                      <li>\r\n                        {(image.Size/1000000).toFixed(2)} MB\r\n                      </li>\r\n                      <li>\r\n                        {(image.Size/1000000000).toFixed(2)} GB\r\n                      </li>\r\n                    </ul>\r\n                  ) : null }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Tags\r\n                </td>\r\n                <td>\r\n                  { image.RepoTags && image.RepoTags.length ? (\r\n                    <ul className=\"no-bullets\">\r\n                      {image.RepoTags.map( (tag, index) => {\r\n                        return (\r\n                          <li key={`tag-${index}`}>{tag}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Exposed Ports\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.ExposedPorts ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.ExposedPorts).map((key,index) => {\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Environment Variables\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Env ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { image.Config.Env.map((key,index) => {\r\n                        if ( key.match(/^PATH/) ){\r\n                          return null;\r\n                        }\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Labels\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Labels ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.Labels).map((key,index) => {\r\n                        return (\r\n                          <li key={`label-${key}`}><em>{key}</em> : \"{image.Config.Labels[key]}\"</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(image, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Image);\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nexport default function(WrapperComponent){\r\n  return class extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.type = null;\r\n      this.stdout = null;\r\n\r\n      var self = this;\r\n      Actions.setArg(\"socketOpen\", false);\r\n      this.socket = new WebSocket(\"ws://localhost:8086\");\r\n      this.socket.onopen = () => {\r\n        Actions.setArg(\"socketOpen\", true);\r\n      };\r\n      this.socket.onclose = () => {\r\n        Actions.setArg(\"socketOpen\", false);\r\n      };\r\n      this.socket.onmessage = (msg) => {\r\n        var data;\r\n        try {\r\n          data = JSON.parse(msg.data);\r\n        } catch ( e ) {\r\n          return;\r\n        }\r\n        if ( data && data.type === self.type ){\r\n          if ( data && ( data.data || data.error ) ){\r\n            var output = _.get(self.props,\"args.output\") || [];\r\n            var line = data.data || data.error;\r\n            if ( line.match(/^\\(/) ){\r\n              if ( output.length && output[output.length - 1].match(/^\\(/) ){\r\n                output[output - 1] = line;\r\n              } else {\r\n                output.push(line);\r\n              }\r\n            } else {\r\n              output.push(line);\r\n            }\r\n            Actions.setArg(\"output\", output);\r\n          }\r\n          if ( data && data.finished === true ){\r\n            Actions.setArg(\"backupStarted\", false);\r\n          }\r\n          setTimeout( () => {\r\n            if ( self.stdout ){\r\n              self.stdout.scrollTop = self.stdout.scrollHeight;\r\n            }\r\n          }, 100 );\r\n        }\r\n      };\r\n    }\r\n\r\n    sendMessage(msg){\r\n      var message;\r\n      var isOpen = _.get(this.props, \"args.socketOpen\");\r\n      if ( typeof msg === \"object\" ){\r\n        if ( !Array.isArray(msg) && !msg.type ){\r\n          message = JSON.stringify(\r\n            Object.assign( {}, {\r\n              type: this.type\r\n            }, msg )\r\n          );\r\n        } else {\r\n          message = JSON.stringify(msg);\r\n        }\r\n      } else {\r\n        message = \"\" + msg;\r\n      }\r\n      if ( message && isOpen ){\r\n        this.socket.send(message);\r\n      }\r\n    }\r\n\r\n    render(){\r\n      var self = this;\r\n      return (\r\n        <WrapperComponent \r\n          stdoutRef={(r) => {\r\n            if ( r ){\r\n              self.stdout = r;\r\n            }\r\n          }}\r\n          sendMessage={this.sendMessage.bind(this)}\r\n          setSocketKey={(key) => {\r\n            self.type = key;\r\n          }}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport withSocket from '../components/withSocket';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nclass ImageCreate extends React.Component {\r\n  constructor(props){\r\n    super(props); \r\n    if ( this.props.setSocketKey ){\r\n      this.props.setSocketKey(\"build-image\");\r\n    }\r\n  }\r\n\r\n  handleFormSubmit(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var {\r\n      path,\r\n      name,\r\n      buildArgs,\r\n      socketOpen\r\n    } = this.props.args;\r\n    if ( path && socketOpen ){\r\n      this.props.sendMessage({\r\n        name,\r\n        path,\r\n        buildArgs\r\n      });\r\n    } \r\n    else if ( !socketOpen ){\r\n      Actions.setMessage(\"Socket is not connected.  Please refresh the page.\", \"error\");\r\n    }\r\n    else if ( !path ) {\r\n      Actions.setMessage(\"Please enter a path first.\", \"error\");\r\n    }\r\n  }\r\n\r\n  handleAddArg(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var buildArgs = ( _.get(this.props,\"args.buildArgs\") || [] ).slice();\r\n    buildArgs.push({\r\n       name: \"\",\r\n      value: \"\"\r\n    });\r\n    Actions.setArg(\"buildArgs\", buildArgs);\r\n  }\r\n\r\n  getArgChangeListener(index, key){\r\n    var self = this;\r\n    return (e) => {\r\n      var args = ( _.get(self.props, \"args.buildArgs\") || [] ).slice();\r\n      if ( key === \"delete\" && e && e.preventDefault ){\r\n        e.preventDefault();\r\n        args.splice(index, 1);\r\n        Actions.setArg(\"buildArgs\", args);\r\n        return;\r\n      }\r\n      if ( args[index] ){\r\n        var newArg = Object.assign({}, args[index], {\r\n          [key]: e.target.value\r\n        } );\r\n        args.splice(index, 1, newArg);\r\n        Actions.setArg(\"buildArgs\", args);\r\n      }\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var socketOpen = _.get(this.props,\"args.socketOpen\") || false,\r\n      output = _.get(this.props, \"args.output\"),\r\n      path = _.get(this.props,\"args.path\") || \"\",\r\n      buildArgs = _.get(this.props, \"args.buildArgs\"),\r\n      name = _.get(this.props,\"args.name\") || \"\";\r\n\r\n    return (\r\n      <div className=\"Image-create\">\r\n        <h1>Create an Image</h1>\r\n        <p>This page can be used to build an image from a Dockerfile</p>\r\n        <p>\r\n          <span className={`toggler danger${(socketOpen === true ? \" checked\" : \"\")}`}> \r\n            Connection Open\r\n          </span><br />\r\n          <em>This page uses WebSockets to stream the output of the build process to this page.  If the indicator above is red, there is no connection.</em><br />\r\n        </p>\r\n        <form onSubmit={this.handleFormSubmit.bind(this)}>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Name</strong> <em>(optional)</em><br />\r\n                  Please enter name to easily identify this image\r\n                </p>\r\n                <input \r\n                  type=\"text\" \r\n                  onChange={(e) => {\r\n                    Actions.setArg(\"name\", e.target.value);\r\n                  }}\r\n                  value={name}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Build Directory</strong><br />\r\n                  Please enter the full path of the <strong>directory</strong> where your Dockerfile is located\r\n                </p>\r\n                <input \r\n                  type=\"text\" \r\n                  onChange={(e) => {\r\n                    Actions.setArg(\"path\", e.target.value);\r\n                  }}\r\n                  value={path}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Build Args</strong><br />\r\n                  Arguments placed here will be replace any ARG/ENV values \r\n                </p>\r\n                { buildArgs && buildArgs.length ? (\r\n                  buildArgs.map( (arg, index) => {\r\n                    return (\r\n                      <div key={`arg-${index}`} className=\"flex-fill\">\r\n                        <div className=\"flex-col\" style={{marginRight: \"10px\"}}>\r\n                          <strong>Name</strong>\r\n                          <input value={arg.name} onChange={this.getArgChangeListener(index, \"name\")} />\r\n                        </div>\r\n                        <div className=\"flex-col\" style={{marginRight: \"10px\"}}>\r\n                          <strong>Value</strong>\r\n                          <input value={arg.value} onChange={this.getArgChangeListener(index, \"value\")} />\r\n                        </div>\r\n                        <a href=\"void\" className=\"text-danger\" onClick={this.getArgChangeListener(index, \"delete\")}>\r\n                          - Delete\r\n                        </a>\r\n                      </div>\r\n                    );\r\n                  } )\r\n                ) : null }\r\n                <a href=\"void\" onClick={this.handleAddArg.bind(this)}>\r\n                  + add Arg\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <button type=\"submit\">Create Image</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre className=\"console\" key=\"console\" ref={this.props.stdoutRef}>\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withApiWatch(withSocket(ImageCreate));\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport withSocket from '../components/withSocket';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport _ from 'lodash';\r\nimport './Images.css';\r\n\r\nclass Container extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n    this.stdout = null;\r\n    if ( this.props.setSocketKey ){\r\n      this.props.setSocketKey(\"container-create-directory-backup\");\r\n    }\r\n  }\r\n\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.mounted = true;\r\n    var id = this.getId(),\r\n      key = `container-${id}`;\r\n    this.props.addApiWatchId(key);\r\n    this.props.addApiWatchId(\"run-command\");\r\n    Actions.api(key, `container/inspect/${id}`);\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( self.props[key].isLoading === true ){\r\n        return;\r\n      }\r\n      if ( self.props[key].error ){\r\n        clearInterval(self.timer);\r\n        self.timer = null;\r\n        return;\r\n      }\r\n      Actions.api(key, `container/inspect/${id}`);\r\n    }, 1000 );\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  containerCommand(cmd){\r\n    var self = this;\r\n    return (e) => {\r\n      e.preventDefault();\r\n      if ( cmd == \"create-dir-backup\" ){\r\n        var path = window.prompt(\"Please enter the full path to the container's folder.\",\"/app\");\r\n        if ( path ){\r\n          var volName = window.prompt(\"Please enter a name for the volume.\");\r\n          this.props.sendMessage({\r\n            sourceDirectory: path,\r\n            containerId: this.getId(),\r\n            volumeName: volName\r\n          });\r\n        }\r\n      } else {\r\n        Actions.api(\"run-command\", `container/${self.getId()}/perform/${cmd}`, {\r\n          method: \"post\"\r\n        } );\r\n      }\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var container = this.props[`container-${this.getId()}`] || {},\r\n      isShowFull = this.props.args.isShowFull || false,\r\n      isSocketOpen = _.get(this.props, \"args.socketOpen\");\r\n    if ( Array.isArray(container) ){\r\n      container = container[0];\r\n    }\r\n    var state = container.State ? container.State.Status : null,\r\n      stateFieldList = [\r\n        \"Status\",\"Running\",\"Paused\",\"Restarting\",\"Dead\"\r\n      ],\r\n      output = _.get(this.props, \"args.output\");\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Container {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for a Container</p>\r\n        <span className={`toggler danger${(isSocketOpen === true ? \" checked\" : \"\")}`}> \r\n          Connection Open\r\n        </span><br />\r\n        <h2>Details</h2>\r\n        <ul className=\"inline\">\r\n          { state === \"exited\" ? [\r\n            <li key=\"start\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"start\")}>\r\n                Start\r\n              </a>\r\n            </li>,\r\n            <li key=\"remove\">\r\n              <a href=\"void\" className=\"text-danger\" onClick={this.containerCommand(\"rm\")}>\r\n                Remove\r\n              </a>\r\n            </li>,\r\n          ] : null } \r\n          { state === \"running\" ? [\r\n\r\n            <li key=\"stop\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"stop\")}>\r\n                Stop\r\n              </a>\r\n            </li>,\r\n            <li key=\"pause\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"pause\")}>\r\n                Pause\r\n              </a>\r\n            </li>,\r\n            <li key=\"restart\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"restart\")}>\r\n                Restart\r\n              </a>\r\n            </li>,\r\n            <li key=\"create-dir-backup\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"create-dir-backup\")}>\r\n                Create Volume from Container Directory\r\n              </a>\r\n            </li>\r\n          ] : null }\r\n          { state === \"paused\" ? (\r\n            <li>\r\n              <a href=\"void\" onClick={this.containerCommand(\"unpause\")}>\r\n                Unpause\r\n              </a>\r\n            </li>\r\n          ) : null }\r\n          <li>\r\n            <a key=\"full-link\" href=\"void\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { state === \"running\" ? (\r\n                <tr>\r\n                  <td>\r\n                    Started At\r\n                  </td>\r\n                  <td>\r\n                    {container.State.StartedAt}\r\n                  </td>\r\n                </tr>\r\n              ) : null }\r\n              { container.State ? (\r\n              <tr>\r\n                <td>\r\n                  State\r\n                </td>\r\n                <td>\r\n                  <ul>\r\n                    { stateFieldList.map( (field) => {\r\n                      return (\r\n                        <li key={field}>\r\n                          <strong>{field}</strong> : {\"\" + container.State[field]}\r\n                        </li>\r\n                      );\r\n                    } ) }\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n              { container.Config && container.Config.Image ? (\r\n              <tr>\r\n                <td>\r\n                  Image\r\n                </td>\r\n                <td>\r\n                  <Link to={`/image/${container.Config.Image}`}>{container.Config.Image}</Link>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(container, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre \r\n            className=\"console\" \r\n            key=\"console\"\r\n            ref={this.props.stdoutRef}\r\n          >\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSocket(withApiWatch(Container));\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Containers.css';\r\n\r\nclass Containers extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n  }\r\n\r\n  getType(){\r\n    var type = this.props.args || {};\r\n    type = type.type || \"all\";\r\n    return type;\r\n  }\r\n\r\n  componentDidMount(){\r\n    var type = this.getType();\r\n    Actions.api(\"containers\", `containers/show/${type}`);\r\n    this.mounted = true;\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( !self.mounted ){\r\n        clearInterval(self.timer);\r\n        return;\r\n      }\r\n      Actions.api(\"containers\", `containers/show/${self.getType()}`);\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    var type = this.getType();\r\n    if ( prevProps.args.type !== type ){\r\n      Actions.api(\"containers\", `containers/show/${type}`);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var args = this.props.args || {},\r\n      containers = this.props.containers || [];\r\n    if ( containers.output && containers.output.length ){\r\n      containers = containers.output;\r\n    }\r\n    var first = containers.length ? containers[0] : null;\r\n    return (\r\n      <React.Fragment>\r\n        <div className='Containers'>\r\n          <h1>Containers</h1>\r\n          <div className=\"Containers-options\">\r\n            <Link to={`/containers/show/${this.getType() === \"all\" ? \"running\" : \"all\"}`} className={`toggler${(args.type === \"all\" ? \" checked\" : \"\")}`}>\r\n              Show All\r\n            </Link>\r\n          </div>\r\n          { args.type === \"all\" ? (\r\n            <p>This page is showing all containers.</p>\r\n          ) : (\r\n            <p>This page is showing only the running containers.</p>\r\n          ) }\r\n          { first ? (\r\n            <table className=\"border\">\r\n              <thead>\r\n                <tr>\r\n                  { Object.keys(first).map( (col) => <th key={col}>{col}</th> ) }\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              { containers.map ( (container, index) => {\r\n                var total = 0,\r\n                  emptyCount = 0;\r\n                Object.keys(container).forEach( (con,i) => {\r\n                  total++;\r\n                  if ( !container[con] ){\r\n                    emptyCount++;\r\n                  }\r\n                } );\r\n                // Skip Empty row\r\n                if ( total === emptyCount ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={`row-${index}`}>\r\n                    { Object.keys(container).map( (con,i) => {\r\n                      var v = container[con];\r\n                      if ( con === \"IMAGE\" ){\r\n                        v = <Link to={`/image/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"CONTAINER ID\" ){\r\n                        v = <Link to={`/container/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"PORTS\" && v.length ){\r\n                        v = (\r\n                          <ul>\r\n                            { v.split(/,/).map( (line, lineI) => {\r\n                              return (\r\n                                <li key={`line-${lineI}`}>\r\n                                  {line}\r\n                                </li>\r\n                              );\r\n                            } ) }\r\n                          </ul>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <td key={`row-${i}`}>{v}</td> \r\n                      );\r\n                    } ) }\r\n                  </tr>\r\n                );\r\n              } ) }\r\n              </tbody>\r\n            </table>\r\n          ) : null }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Containers;\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport _ from 'lodash';\r\n\r\nclass ContainerRun extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      flag: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    var key = `image-${this.props.args.imageId}`;\r\n    this.props.addApiWatchId(\"container_run\");\r\n    this.props.addApiWatchId(key);\r\n    if ( this.props[key] ){\r\n      Actions.api(key, `image/inspect/${this.props.args.imageId}`);\r\n    }\r\n    Actions.api(\"volumes\", \"volumes\");\r\n  }\r\n \r\n  handleForm(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var args = this.props.args || {},\r\n      options = [],\r\n      mounts = [],\r\n      volumes = [];\r\n    var map = {\r\n      flagRm: \"--rm\",\r\n      flagTty: \"-t\"\r\n    };\r\n    Object.keys(args).forEach( (key) => {\r\n      if ( map.hasOwnProperty(key) ){\r\n        var v = map[key].split(/\\s/);\r\n        options.push({\r\n          key: v[0],\r\n          value: v[1] || \"\"\r\n        });\r\n      }\r\n    } );\r\n    if ( args.name && args.name.length ){\r\n      options.push({\r\n        key: \"--name\",\r\n        value: args.name\r\n      });\r\n    }\r\n    if ( args.mounts && args.mounts.length ){\r\n      args.mounts.forEach( (vol) => {\r\n        if ( vol.local && vol.remote ){\r\n          mounts.push(vol);\r\n        }\r\n      } );\r\n    }\r\n    if ( args.volumes && args.volumes.length ){\r\n      args.volumes.forEach( (vol) => {\r\n        if ( vol.volumeId && vol.remote ){\r\n          volumes.push(vol);\r\n        }\r\n      } );\r\n    }\r\n    Actions.api(\"container_run\", `container/run/${this.props.args.imageId}`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        options,\r\n        mounts,\r\n        volumes,\r\n        additionalArgs: args.additionalArgs || \"\",\r\n        ports: args.ports,\r\n      })\r\n    });\r\n  }\r\n\r\n  addBountMount(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var mounts = this.props.args.mounts || [];\r\n    mounts.push({\r\n      local: \"\",\r\n      remote: \"\"\r\n    });\r\n    Actions.setArg(\"mounts\", mounts);\r\n  }\r\n\r\n  addVolume(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var volumes = this.props.args.volumes || [];\r\n    volumes.push({\r\n      volumeId: \"\",\r\n      remote: \"\"\r\n    });\r\n    Actions.setArg(\"volumes\", volumes);\r\n  }\r\n\r\n  inputListener(name){\r\n    var self = this;\r\n    return (e) => {\r\n      switch ( name ){\r\n        case \"flagRm\":\r\n          Actions.setArg(\"flagRm\", self.props.args.flagRm ? false : true);\r\n          self.setState({\r\n            flag: !self.state.flag\r\n          });\r\n          break;\r\n\r\n        case \"flagTty\":\r\n          Actions.setArg(\"flagTty\", self.props.args.flagTty === true ? false : true);\r\n          break;\r\n\r\n        default:\r\n          var match,\r\n            i,\r\n            mounts,\r\n            argType;\r\n          if ( name.match(/port_/) ){\r\n            var ports = this.props.args.ports || {};\r\n            ports[name.replace(/port_/,'')] = e.target.value;\r\n            Actions.setArg(\"ports\", ports);\r\n          } \r\n          else if ( match = name.match(/(mounts|volumes)-(\\d+)-(volumeId|local|remote)/) ){\r\n            argType = match[1];\r\n            i = match[2];\r\n            var type = match[3];\r\n            mounts = self.props.args[argType] || [];\r\n            mounts = mounts.slice();\r\n            if ( mounts[i] ){\r\n              mounts[i][type] = e.target.value;\r\n            }\r\n            Actions.setArg(argType, mounts);\r\n          }\r\n          else if ( match = name.match(/remove-(volumes|mounts)-(\\d+)/) ){\r\n            e.preventDefault();\r\n            argType = match[1];\r\n            i = match[2];\r\n            mounts = ( _.get(self.props,`args.${argType}`) || [] ).slice();\r\n            mounts.splice(i,1);\r\n            Actions.setArg(argType, mounts);\r\n          }\r\n          else {\r\n            Actions.setArg(name, e.target.value);\r\n          }\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var imageKey = `image-${this.props.args.imageId}`;\r\n    var image = this.props[imageKey] || {},\r\n      args = this.props.args,\r\n      ports = args.ports || {},\r\n      additionalArgs = args.additionalArgs || \"\",\r\n      mounts = args.mounts || [],\r\n      volumes = args.volumes || [],\r\n      availableVolumes = _.get(this.props, \"volumes.output\") || [];\r\n    if ( Array.isArray(image) ){\r\n      image = image[0];\r\n    }\r\n    var self = this;\r\n    return (\r\n      <div className=\"Container-run\">\r\n        <h1>Start a Container</h1>\r\n        <p>From this page you can start a new container using the selected image.  Please customize the details below to set different options on the container.</p>\r\n        <form onSubmit={this.handleForm.bind(this)}>\r\n          <p>\r\n            <strong>Name</strong> <em>(optional)</em><br />\r\n            <em>Gives the container a name so you can easily run commands on the container.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input value={args.name || \"\"} onChange={this.inputListener(\"name\")} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/** ==================== FLAGS ==================== **/}\r\n          <p><strong>Flags</strong></p>\r\n          <div className=\"flex-col\">\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagRm} onChange={this.inputListener(\"flagRm\")} checked={args.flagRm ? true : false} /> Don't Persist\r\n              </label>\r\n              &nbsp;- <em>When the container is stopped, it is automatically removed, and can't be restarted.</em>\r\n            </span>\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagTty} onChange={this.inputListener(\"flagTty\")} checked={args.flagTty ? true : false} /> Prevent Exit\r\n                &nbsp;- <em>Containers exit if a script isn't set to run at start, this flag prevents the container from exiting</em> \r\n              </label>\r\n            </span>\r\n          </div>\r\n          {/** ==================== PORT MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Port Mapping</strong> <em>(optional)</em><br />\r\n            <em>If left empty, that port will not be exposed to localhost</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <div className=\"flex-row flex-justify-between\">\r\n                  <span>Local Port</span><span></span><span>Container Port</span>\r\n                </div>\r\n            { image.Config && image.Config.ExposedPorts ? ( \r\n              Object.keys(image.Config.ExposedPorts).map( (port) => {\r\n                port = port.replace(/(\\d+).*/,\"$1\");\r\n                return (\r\n                  <div key={`port-${port}`} className=\"flex-row flex-justify-between\">\r\n                    <div>\r\n                      <input onChange={self.inputListener(`port_${port}`)} value={ports[port] || \"\"} />\r\n                    </div>\r\n                    <span>=></span>\r\n                    <div>\r\n                      <input readOnly value={port} />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              } )\r\n            ) : \"No Exposed Ports\" }\r\n            </div>\r\n          </div>\r\n          {/** ==================== BIND MOUNT MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Volume Binding Mapping</strong> <em>(optional)</em><br />\r\n            <em>Binds a local directory to a directory in the container.  Please use full paths</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            { mounts.map( (vol,index) => {\r\n              return (\r\n                <div key={`vol-${index}`} className=\"flex-row flex-justify-between\">\r\n                  <div>\r\n                    <input placeholder=\"local\" value={vol.local} onChange={self.inputListener(`mounts-${index}-local`)} />\r\n                  </div>\r\n                  <span>=></span>\r\n                  <div>\r\n                    <input placeholder=\"container\" value={vol.remote} onChange={self.inputListener(`mounts-${index}-remote`)} /> &nbsp;\r\n                    <a href=\"void\" onClick={this.inputListener(`remove-mounts-${index}`)} className=\"no-style text-danger\">- Delete</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            } ) }\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <a href=\"void\" onClick={this.addBountMount.bind(this)}>\r\n                + Add a Local Mount\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/** ==================== VOLUME MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Volume Mapping</strong> <em>(optional)</em><br />\r\n            <em>Binds a docker volume to a directory in the container.  Please use full paths</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            { volumes.map( (vol,index) => {\r\n              return (\r\n                <div key={`vol-${index}`} className=\"flex-row flex-justify-between\">\r\n                  <div>\r\n                    <div className=\"flex-col\">\r\n                      <select value={vol.volumeId || \"\"} onChange={self.inputListener(`volumes-${index}-volumeId`)}>\r\n                        <option>Select a Volume</option>\r\n                        { availableVolumes.map( (vol, vi) => {\r\n                          return (\r\n                            <option key={vol['VOLUME NAME']}>{vol['VOLUME NAME']}</option>\r\n                          );\r\n                        } ) }\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <span>=></span>\r\n                  <div>\r\n                    <input placeholder=\"container\" value={vol.remote} onChange={self.inputListener(`volumes-${index}-remote`)} /> &nbsp;\r\n                    <a href=\"void\" onClick={this.inputListener(`remove-volumes-${index}`)} className=\"no-style text-danger\">- Delete</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            } ) }\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <a href=\"void\" onClick={this.addVolume.bind(this)}>\r\n                + Add a Volume\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/** ==================== Additional Arguments ==================== **/}\r\n          <p>\r\n            <strong>Additional Arguments</strong><br />\r\n            <em>Enter any other options/arguments to the command.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input placeholder=\"docker run arguments\" value={additionalArgs} onChange={self.inputListener(`additionalArgs`)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button type=\"submit\">Start Container</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(ContainerRun);\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div>\r\n      <h1>404 - Page Not Found</h1>\r\n      <p>\r\n        Return to the <Link to=\"/\">Home page</Link>.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Docker GUI</h1>      \r\n      <p>\r\n        This is a simple interface for managing your local Docker images, containers, and volumes (<em>coming soon</em>)\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport * as Actions from './actions';\r\nimport Volume from './pages/Volume';\r\nimport Volumes from './pages/Volumes';\r\nimport Images from './pages/Images';\r\nimport Image from './pages/Image';\r\nimport ImageCreate from './pages/ImageCreate';\r\nimport Container from './pages/Container';\r\nimport Containers from './pages/Containers';\r\nimport ContainerRun from './pages/ContainerRun';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport Home from './pages/Home';\r\nimport Link from './components/Link';\r\nimport './App.scss';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    /**\r\n     * Create Global access reference to\r\n     * Main App Wrapper Component\r\n     */\r\n    Actions.setApp(this);\r\n\r\n    this.originalPopstateListener = window.onpopstate;\r\n\r\n    /**\r\n     * Main App State\r\n     * Changes are managed through\r\n     * Actions.js function calls\r\n     */\r\n    this.state = Actions.getInitialState();\r\n  }\r\n\r\n  handleHistoryEvent(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.onpopstate = this.handleHistoryEvent;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.onpopstate = this.originalPopstateListener;\r\n  }\r\n\r\n  route(viewName){\r\n    var ret = null;\r\n    switch ( viewName ){\r\n      // Containers List Page\r\n      case \"containers\":\r\n        ret = <Containers {...this.state} />;\r\n        break;\r\n\r\n      // Images List Page\r\n      case \"images\":\r\n        ret = <Images {...this.state} />;\r\n        break;\r\n\r\n      // Image Create Page\r\n      case \"image-create\":\r\n        ret = <ImageCreate {...this.state} />;\r\n        break;\r\n\r\n      // Image Summary Page\r\n      case \"image\":\r\n        ret = <Image {...this.state} />;\r\n        break;\r\n\r\n      // Start Container from Image Page\r\n      case \"container-run\":\r\n        ret = <ContainerRun {...this.state} />;\r\n        break;\r\n\r\n      // Container Summary Page\r\n      case \"container\":\r\n        ret = <Container {...this.state} />;\r\n        break;\r\n        \r\n      // Volume Summary Page\r\n      case \"volume\":\r\n        ret = <Volume {...this.state} />;\r\n        break;\r\n\r\n      // Volumes List Page\r\n      case \"volumes\":\r\n        ret = <Volumes {...this.state} />;\r\n        break;\r\n        \r\n      // Home Page\r\n      case \"home\":\r\n        ret = <Home />;\r\n        break;\r\n\r\n      default: \r\n        ret = <PageNotFound />;\r\n        break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  handleLoadSwitch(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    Actions.setState({\r\n      isLoadArgs: !this.state.isLoadArgs\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <ul className=\"App-nav\">\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/containers/show/running\">Containers</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/images\">Images</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/volumes\">Volumes</Link>\r\n            </li>\r\n          </ul>\r\n          <p>\r\n            <a style={{color:\"white\",textDecoration: \"none\"}} href=\"https://github.com/chrisonbass/docker-gui\">@chrisonbass</a>\r\n          </p>\r\n        </header>\r\n        {/** =========== OUTPUT ERROR ============= **/}\r\n        { this.state.message && (\"\" + this.state.message).length ? (\r\n          <div className={`App-msg-${this.state.messageType === \"success\" ? \"success\" : \"error\"}`}>\r\n            <a href=\"void\" onClick={Actions.clearMessage} className=\"close\">x</a>\r\n            <pre>\r\n              {this.state.message}\r\n            </pre>\r\n          </div>\r\n        ) : null }\r\n\r\n        <div className=\"App-body\">\r\n          { this.route(this.state.view) }\r\n        </div>\r\n        <p></p>\r\n        <div className=\"App-footer\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\" style={{textAlign:'left'}}>\r\n            { this.state.isLoadArgs === true ? (\r\n              <div>\r\n                <strong>Please select the Args json file to load</strong><br />\r\n                <button onClick={this.handleLoadSwitch.bind(this)}>Show Current Args</button><br />\r\n                <input type=\"file\" onChange={Actions.handleLoadArgs} />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <strong>Current Page Args</strong><br />\r\n                <button onClick={Actions.outputArgs}>Save Args</button><span>&nbsp;</span>\r\n                <button onClick={this.handleLoadSwitch.bind(this)}>Load Args</button><br />\r\n                <pre>\r\n                  { Actions.getArgsDisplay() }\r\n                </pre>\r\n              </div>\r\n            ) }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}