{"version":3,"sources":["actions.js","components/Link.js","pages/Images.js","components/withApiWatch.js","pages/Image.js","pages/ImageCreate.js","pages/Container.js","pages/Containers.js","pages/ContainerRun.js","pages/PageNotFound.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["app","setApp","appInstance","setState","state","setMessage","message","messageType","length","console","error","clearMessage","e","preventDefault","setArg","name","value","Object","assign","args","api","id","endpoint","params","isLoading","fetch","method","then","res","json","Array","isArray","catch","err","getInitialState","view","loc","window","location","pathname","matchFound","r","v","m","match","type","imageId","forEach","check","exec","props","href","to","onClick","history","pushState","title","Actions","className","children","Images","images","this","Link","output","map","image","index","key","REPOSITORY","SIZE","CREATED","React","Component","WrapperComponent","apiId","repeating","timer","mounted","setInterval","timerCallback","bind","prevProps","messages","prev","apiResults","push","results","msg","command","msgJoined","join","clearInterval","concat","c","hasOwnProperty","item","self","add","indexOf","addRepeatingApi","found","find","warn","addApiWatchId","setApiWatchId","withApiWatch","getId","isShowFull","cmd","body","JSON","stringify","options","_","get","Size","imageCommand","toggleShowFullDetails","Author","Architecture","Os","toFixed","RepoTags","tag","Config","ExposedPorts","keys","replace","Env","Labels","socket","WebSocket","onopen","onclose","onmessage","data","parse","line","finished","setTimeout","stdout","scrollTop","scrollHeight","path","socketOpen","send","buildStarted","onSubmit","handleFormSubmit","onChange","target","ref","container","State","Status","containerCommand","StartedAt","field","Image","Containers","getType","containers","first","Fragment","col","total","emptyCount","con","i","split","lineI","flag","volumes","flagRm","flagTty","vol","local","remote","additionalArgs","ports","slice","splice","imageKey","handleForm","inputListener","checked","port","readOnly","placeholder","addVolume","App","originalPopstateListener","onpopstate","handleHistoryEvent","viewName","ret","Home","PageNotFound","style","color","textDecoration","route","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa004c86.chunk.js","sourcesContent":["import _ from 'lodash';\r\nvar app = null;\r\n\r\nexport const setApp = (appInstance) => {\r\n  app = appInstance;\r\n};\r\n\r\nexport const setState = (state = {}) => {\r\n  app.setState(state);\r\n};\r\n\r\nexport const clearStateKey = (key) => {\r\n  if ( app && app.state.hasOwnProperty(key) ){\r\n    delete app.state[key];\r\n    app.setState(app.state);\r\n  }\r\n};\r\n\r\nexport const setMessage = (message = \"\", messageType = \"success\") => {\r\n  if ( typeof message === \"string\" && message.length ){\r\n    app.setState({\r\n      message,\r\n      messageType\r\n    });\r\n  } \r\n  else if ( typeof message !== \"string\" ){\r\n    console.error(`setErrorMessage only accepts strings.  A '${(typeof message)}' was provided`);\r\n  }\r\n  else {\r\n    console.error(\"Trying to call setErrorMessage with an empty string\");\r\n  }\r\n};\r\n\r\nexport const clearMessage = (e = null) => {\r\n  if ( e && e.preventDefault ){\r\n    e.preventDefault();\r\n  }\r\n  app.setState({\r\n    message: null,\r\n    messageType: \"success\"\r\n  });\r\n};\r\n\r\nexport const setArg = (name, value) => {\r\n  var state =  Object.assign( {}, app.state, {\r\n    args: Object.assign({}, app.state.args, {\r\n      [name]: value\r\n    } )\r\n  } );\r\n  app.setState(state);\r\n};\r\n\r\nexport const navClickListener = (view, args = {}) => {\r\n  return (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    app.setState({\r\n      view,\r\n      args\r\n    });\r\n  };\r\n};\r\n\r\nexport const api = (id, endpoint, params = {}) => {\r\n  var state = app.state[id] || {};\r\n  app.setState({\r\n    [id]: Object.assign({}, state, {\r\n      isLoading: true\r\n    } )\r\n  });\r\n  fetch( \"http://localhost:8085/\" + endpoint, Object.assign({}, {\r\n    method: \"GET\",\r\n  }, params) )\r\n  .then( (res) => {\r\n    return res.json();\r\n  } )\r\n  .then( (json) => {\r\n    if ( Array.isArray(json) && json.length === 1 ){\r\n      json = json[0];\r\n    }\r\n    app.setState({\r\n      [id]: json\r\n    });\r\n  } )\r\n  .catch( (err) => {\r\n    app.setState({\r\n      [id]: {\r\n        error: err\r\n      }\r\n    });\r\n  } );\r\n};\r\n\r\nexport const getInitialState = () => {\r\n  var state = {\r\n    view: \"unknown\", \r\n    args: { }\r\n  };\r\n  var loc = window.location.pathname;\r\n  var matchFound = false;\r\n  var matches = [\r\n    // Matches Home Page /\r\n    {\r\n      r: /^\\/$/,\r\n      v: \"home\"\r\n    },\r\n    {\r\n      r: /^\\/image\\/create$/,\r\n      v: \"image-create\"\r\n    },\r\n    // Matches /image/:id\r\n    {\r\n      r: /\\/image\\/(.*)/,\r\n      v: \"image\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /images\r\n    {\r\n      r: /\\/images/,\r\n      v: \"images\"\r\n    },\r\n    // Matches /containers/show/:type\r\n    {\r\n      r: /\\/containers\\/show\\/(.*)/,\r\n      v: \"containers\",\r\n      m: (match) => {\r\n        return {\r\n          type: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/run/:id\r\n    {\r\n      r: /\\/container\\/run\\/(.*)/,\r\n      v: \"container-run\",\r\n      m: (match) => {\r\n        return {\r\n          imageId: match[1]\r\n        };\r\n      }\r\n    },\r\n    // Matches /container/:id\r\n    {\r\n      r: /\\/container\\/(.*)/,\r\n      v: \"container\",\r\n      m: (match) => {\r\n        return {\r\n          id: match[1]\r\n        };\r\n      }\r\n    },\r\n\r\n  ];\r\n  matches.forEach( (check) => {\r\n    if ( matchFound === true ){\r\n      return;\r\n    }\r\n    var m = check.r.exec( loc );\r\n    if ( m  ){\r\n      if ( check.v ){\r\n        state.view = check.v;\r\n      }\r\n      state.args = check.m ? check.m(m) : {};\r\n      matchFound = true;\r\n    }\r\n  } );\r\n  return state;\r\n};\r\n\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default (props) => {\r\n  const listener = (e) => {\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    window.history.pushState({}, props.title || \"Page Change\", props.to);\r\n    if ( typeof props.onClick === \"function\" ){\r\n      props.onClick();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  };\r\n  return (\r\n    <a href={props.to} onClick={listener} className={props.className || \"\"}>\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\nimport * as Actions from '../actions';\r\n\r\nclass Images extends React.Component {\r\n  componentDidMount(){\r\n    Actions.api(\"images\", \"images\");\r\n  }\r\n\r\n  render(){\r\n    var images = this.props.images || {};\r\n    return (\r\n      <div className='Images'>\r\n        <h1>Images</h1>\r\n        <p>This page lists the available images</p>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/image/create\">\r\n              Create new Image\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        { images && images.output ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image ID</th>\r\n                <th>Repository</th>\r\n                <th>Size</th>\r\n                <th>Created</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { images.output.map( (image, index) => {\r\n                if ( !image['IMAGE ID'] ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={image['IMAGE ID']}>\r\n                    <td>\r\n                      <Link to={`/image/${image['IMAGE ID']}`}>{image['IMAGE ID']}</Link>\r\n                    </td>\r\n                    <td>\r\n                      {image.REPOSITORY}\r\n                    </td>\r\n                    <td>\r\n                      {image.SIZE}\r\n                    </td>\r\n                    <td>\r\n                      {image.CREATED}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              } ) }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\n\r\nexport default function(WrapperComponent){\r\n  return class extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.apiId = [];\r\n      this.repeating = [];\r\n      this.timer = null;\r\n      this.mounted = false;\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.mounted = true;\r\n      if ( this.repeating ){\r\n        this.timer = setInterval(this.timerCallback.bind(this), 1500);\r\n        this.timerCallback();\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      if ( this.apiId ){\r\n        var messages = [],\r\n          type = \"success\",\r\n          prev = prevProps.message || null;\r\n        this.apiId.forEach( (id) => {\r\n          var apiResults = this.props[id];\r\n          if ( apiResults ){\r\n            if ( apiResults.error ){\r\n              messages.push(apiResults.error);\r\n              type = \"error\";\r\n            }\r\n            else if ( apiResults.results ){\r\n              var msg = \"\";\r\n              if ( apiResults.command ){\r\n                msg += `Successful Result\\n`;\r\n                msg += `Command:\\n ${apiResults.command}`;\r\n                msg += \"\\n\\n\";\r\n              }\r\n              msg += `Ouput:\\n${apiResults.results}`;\r\n              messages.push(msg);\r\n            }\r\n          }\r\n        } );\r\n        if ( messages && messages.length ){\r\n          var msgJoined = messages.join(\"\\n\\n\");\r\n          if ( prev !== msgJoined ){\r\n            Actions.setMessage(msgJoined, type);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      this.mounted = false;\r\n      if ( this.timer ){\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n      }\r\n      this.repeating.concat(this.apiId).forEach( (id) => {\r\n        var c = id;\r\n        if ( id && id.id ){\r\n          c = id.id;\r\n        }\r\n        Actions.clearStateKey(c);\r\n      } );\r\n    }\r\n\r\n    timerCallback(e){\r\n      if ( !this.mounted ){\r\n        if ( this.timer ){\r\n          clearInterval(this.timer);\r\n          this.timer = null;\r\n        }\r\n        return;\r\n      }\r\n      this.repeating.forEach( (item) => {\r\n        Actions.api(item.id, item.endpoint, item.params);\r\n      } );\r\n    }\r\n\r\n    render(){\r\n      var self = this;\r\n      var add =  (id) => {\r\n        if ( self.apiId.indexOf(id) < 0 ){\r\n          self.apiId.push(id);\r\n        }\r\n      };\r\n      var repeat = (id, endpoint, params = {}) => {\r\n        if ( self.mounted === true ){\r\n          console.warn(\"`addRepeatingApi` must be called before `withApiWatch` is mounted\")\r\n          return;\r\n        }\r\n        var found = self.repeating.find( (item) => {\r\n          return item.id === id;\r\n        } );\r\n        if ( !found ){\r\n          self.repeating.push({\r\n            id,\r\n            endpoint,\r\n            params,\r\n            timer: null\r\n          });\r\n        }\r\n      };\r\n      return (\r\n        <WrapperComponent \r\n          addRepeatingApi={repeat}\r\n          addApiWatchId={add}\r\n          setApiWatchId={add}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport _ from 'lodash';\r\nimport './Images.css';\r\n\r\nclass Image extends React.Component {\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.addRepeatingApi(`image-${this.getId()}`, `image/inspect/${this.getId()}`);\r\n    this.props.addApiWatchId(`image-${this.getId()}`);\r\n    this.props.addApiWatchId(`run-img-command`);\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  imageCommand(cmd){\r\n    var self = this;\r\n    return (e) => {\r\n      e.preventDefault();\r\n      var params = {\r\n        method: \"post\"\r\n      };\r\n      if ( cmd === \"force-rm\" ){\r\n        cmd = \"rm\";\r\n        params.body = JSON.stringify({\r\n          options: [\"-f\"]\r\n        });\r\n      }\r\n      Actions.api(\"run-img-command\", `image/${self.getId()}/perform/${cmd}`, params );\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var image = this.props[`image-${this.getId()}`] || {},\r\n      isLoading = _.get(this.props,`image-${this.getId()}.isLoading`) || false,\r\n      isShowFull = this.props.args.isShowFull || false;\r\n    if ( Array.isArray(image) ){\r\n      image = image[0]\r\n    }\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Image {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for an Image</p>\r\n        <h2>Details</h2>\r\n        { isLoading && !image.Size ? (\r\n          <p>Please wait while the image details is loaded</p>\r\n        ) : null }\r\n        <ul className=\"inline\">\r\n          <li>\r\n            <Link to={`/container/run/${this.getId()}`}>\r\n              Create a Container\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.imageCommand(\"rm\")}>\r\n              Delete Image\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"void\" className=\"text-danger\" onClick={this.imageCommand(\"force-rm\")}>\r\n              Force Delete Image\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a key=\"full-link\" href=\"void\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  Author\r\n                </td>\r\n                <td>\r\n                  {image.Author}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Architecture\r\n                </td>\r\n                <td>\r\n                  {image.Architecture}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  OS\r\n                </td>\r\n                <td>\r\n                  {image.Os}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Size\r\n                </td>\r\n                <td>\r\n                  {image.Size > 0 ? (\r\n                    <ul className=\"no-bullets\">\r\n                      <li>\r\n                        {(image.Size/1000000).toFixed(2)} MB\r\n                      </li>\r\n                      <li>\r\n                        {(image.Size/1000000000).toFixed(2)} GB\r\n                      </li>\r\n                    </ul>\r\n                  ) : null }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Tags\r\n                </td>\r\n                <td>\r\n                  { image.RepoTags && image.RepoTags.length ? (\r\n                    <ul className=\"no-bullets\">\r\n                      {image.RepoTags.map( (tag, index) => {\r\n                        return (\r\n                          <li key={`tag-${index}`}>{tag}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Exposed Ports\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.ExposedPorts ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.ExposedPorts).map((key,index) => {\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Environment Variables\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Env ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { image.Config.Env.map((key,index) => {\r\n                        if ( key.match(/^PATH/) ){\r\n                          return null;\r\n                        }\r\n                        return (\r\n                          <li key={`port-${key}`}>{key.replace(/(\\d+).*/,\"$1\")}</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  Labels\r\n                </td>\r\n                <td>\r\n                  { image.Config && image.Config.Labels ? (\r\n                    <ul className=\"no-bullets\">\r\n                      { Object.keys(image.Config.Labels).map((key,index) => {\r\n                        return (\r\n                          <li key={`label-${key}`}><em>{key}</em> : \"{image.Config.Labels[key]}\"</li>\r\n                        );\r\n                      } ) }\r\n                    </ul>\r\n                  ) : \"None\" }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(image, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Image);\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport _ from 'lodash';\r\n\r\nclass ImageCreate extends React.Component {\r\n  constructor(props){\r\n    super(props); \r\n    var self = this;\r\n    Actions.setArg(\"socketOpen\", false);\r\n    this.socket = new WebSocket(\"ws://localhost:8086\");\r\n    this.socket.onopen = () => {\r\n      Actions.setArg(\"socketOpen\", true);\r\n    };\r\n    this.socket.onclose = () => {\r\n      Actions.setArg(\"socketOpen\", false);\r\n    };\r\n    this.socket.onmessage = (msg) => {\r\n      var data;\r\n      try {\r\n        data = JSON.parse(msg.data);\r\n      } catch ( e ) {\r\n        return;\r\n      }\r\n      if ( data && data.type === \"build-image\" ){\r\n        if ( data && ( data.data || data.error ) ){\r\n          var output = _.get(self.props,\"args.output\") || [];\r\n          var line = data.data || data.error;\r\n          if ( line.match(/^\\(/) ){\r\n            if ( output.length && output[output.length - 1].match(/^\\(/) ){\r\n              output[output - 1] = line;\r\n            } else {\r\n              output.push(line);\r\n            }\r\n          } else {\r\n            output.push(line);\r\n          }\r\n          Actions.setArg(\"output\", output);\r\n        }\r\n        if ( data && data.finished === true ){\r\n          Actions.setArg(\"buildStarted\", false);\r\n        }\r\n        setTimeout( () => {\r\n          if ( self.stdout ){\r\n            self.stdout.scrollTop = self.stdout.scrollHeight;\r\n          }\r\n        }, 100 );\r\n      }\r\n    };\r\n\r\n    this.stdout = null;\r\n  }\r\n\r\n  handleFormSubmit(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var {\r\n      path,\r\n      name,\r\n      socketOpen\r\n    } = this.props.args;\r\n    if ( path && socketOpen ){\r\n      this.socket.send(JSON.stringify({\r\n        type: \"build-image\",\r\n        name,\r\n        path\r\n      }));\r\n      Actions.setArg(\"buildStarted\", true);\r\n    } \r\n    else if ( !socketOpen ){\r\n      Actions.setMessage(\"Socket is not connected.  Please refresh the page.\", \"error\");\r\n    }\r\n    else if ( !path ) {\r\n      Actions.setMessage(\"Please enter a path first.\", \"error\");\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var socketOpen = _.get(this.props,\"args.socketOpen\") || false,\r\n      output = _.get(this.props, \"args.output\"),\r\n      buildStarted = _.get(this.props, \"args.buildStarted\") || false,\r\n      path = _.get(this.props,\"args.path\") || \"\",\r\n      name = _.get(this.props,\"args.name\") || \"\",\r\n      self = this;\r\n\r\n    return (\r\n      <div className=\"Image-create\">\r\n        <h1>Create an Image</h1>\r\n        <p>This page can be used to build an image from a Dockerfile</p>\r\n        <p>\r\n          <span className={`toggler danger${(socketOpen === true ? \" checked\" : \"\")}`}> \r\n            Connection Open\r\n          </span><br />\r\n          <em>This page uses WebSockets to stream the output of the build process to this page.  If the indicator above is red, there is no connection.</em>\r\n          { buildStarted ? (\r\n            <span className={`toggler danger${(buildStarted === true ? \" checked\" : \"\")}`}> \r\n              Build Started\r\n            </span>\r\n          ) : null }\r\n        </p>\r\n        <form onSubmit={this.handleFormSubmit.bind(this)}>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Name</strong> <em>(optional)</em><br />\r\n                  Please enter name to easily identify this image\r\n                </p>\r\n                <input \r\n                  type=\"text\" \r\n                  onChange={(e) => {\r\n                    Actions.setArg(\"name\", e.target.value);\r\n                  }}\r\n                  value={name}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <p>\r\n                  <strong>Build Directory</strong><br />\r\n                  Please enter the full path of the <strong>directory</strong> where your Dockerfile is located\r\n                </p>\r\n                <input \r\n                  type=\"text\" \r\n                  onChange={(e) => {\r\n                    Actions.setArg(\"path\", e.target.value);\r\n                  }}\r\n                  value={path}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <button type=\"submit\">Create Image</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        { output ? [\r\n          <p key='blank'></p>,\r\n          <pre \r\n            className=\"console\" \r\n            key=\"console\"\r\n            ref={ (r) => {\r\n              self.stdout = r;\r\n            } }\r\n          >\r\n            {output.join(\"\")}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withApiWatch(ImageCreate);\r\n","import React from 'react';\r\nimport withApiWatch from '../components/withApiWatch';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Images.css';\r\n\r\nclass Container extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n  }\r\n\r\n  getId(){\r\n    return this.props.args.id;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.mounted = true;\r\n    var id = this.getId(),\r\n      key = `container-${id}`;\r\n    this.props.addApiWatchId(key);\r\n    this.props.addApiWatchId(\"run-command\");\r\n    Actions.api(key, `container/inspect/${id}`);\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( self.props[key].isLoading === true ){\r\n        return;\r\n      }\r\n      if ( self.props[key].error ){\r\n        clearInterval(self.timer);\r\n        self.timer = null;\r\n        return;\r\n      }\r\n      Actions.api(key, `container/inspect/${id}`);\r\n    }, 1000 );\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  toggleShowFullDetails(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var isShowFull = this.props.args.isShowFull === true ? false : true;\r\n    Actions.setArg(\"isShowFull\", isShowFull);\r\n  }\r\n\r\n  containerCommand(cmd){\r\n    var self = this;\r\n    return (e) => {\r\n      e.preventDefault();\r\n      Actions.api(\"run-command\", `container/${self.getId()}/perform/${cmd}`, {\r\n        method: \"post\"\r\n      } );\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var container = this.props[`container-${this.getId()}`] || {},\r\n      isShowFull = this.props.args.isShowFull || false;\r\n    if ( Array.isArray(container) ){\r\n      container = container[0];\r\n    }\r\n    var state = container.State ? container.State.Status : null;\r\n    var stateFieldList = [\r\n      \"Status\",\"Running\",\"Paused\",\"Restarting\",\"Dead\"\r\n    ];\r\n    return (\r\n      <div className='Image'>\r\n        <h1>Container {this.props.args.id}</h1>\r\n        <p>This page show the details and available actions for a Container</p>\r\n        <h2>Details</h2>\r\n        <ul className=\"inline\">\r\n          { state === \"exited\" ? [\r\n            <li key=\"start\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"start\")}>\r\n                Start\r\n              </a>\r\n            </li>,\r\n            <li key=\"remove\">\r\n              <a href=\"void\" className=\"text-danger\" onClick={this.containerCommand(\"rm\")}>\r\n                Remove\r\n              </a>\r\n            </li>,\r\n          ] : null } \r\n          { state === \"running\" ? [\r\n            <li key=\"stop\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"stop\")}>\r\n                Stop\r\n              </a>\r\n            </li>,\r\n            <li key=\"pause\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"pause\")}>\r\n                Pause\r\n              </a>\r\n            </li>,\r\n            <li key=\"restart\">\r\n              <a href=\"void\" onClick={this.containerCommand(\"restart\")}>\r\n                Restart\r\n              </a>\r\n            </li>\r\n          ] : null }\r\n          { state === \"paused\" ? (\r\n            <li>\r\n              <a href=\"void\" onClick={this.containerCommand(\"unpause\")}>\r\n                Unpause\r\n              </a>\r\n            </li>\r\n          ) : null }\r\n          <li>\r\n            <a key=\"full-link\" href=\"void\" onClick={this.toggleShowFullDetails.bind(this)}>\r\n              { isShowFull ? \"Hide Raw Details\" : \"Show Raw Details\" }\r\n            </a> \r\n          </li>\r\n        </ul>\r\n        { !isShowFull ? (\r\n          <table className=\"border\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Name\r\n                </th>\r\n                <th>\r\n                  Value \r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { state === \"running\" ? (\r\n                <tr>\r\n                  <td>\r\n                    Started At\r\n                  </td>\r\n                  <td>\r\n                    {container.State.StartedAt}\r\n                  </td>\r\n                </tr>\r\n              ) : null }\r\n              { container.State ? (\r\n              <tr>\r\n                <td>\r\n                  State\r\n                </td>\r\n                <td>\r\n                  <ul>\r\n                    { stateFieldList.map( (field) => {\r\n                      return (\r\n                        <li key={field}>\r\n                          <strong>{field}</strong> : {\"\" + container.State[field]}\r\n                        </li>\r\n                      );\r\n                    } ) }\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n              { container.Config && container.Config.Image ? (\r\n              <tr>\r\n                <td>\r\n                  Image\r\n                </td>\r\n                <td>\r\n                  <Link to={`/image/${container.Config.Image}`}>{container.Config.Image}</Link>\r\n                </td>\r\n              </tr>\r\n              ) : null }\r\n            </tbody>\r\n          </table>\r\n        ) : null }\r\n        { isShowFull === true ? [\r\n          <pre key=\"details-dump\">\r\n            {JSON.stringify(container, null, 2)}\r\n          </pre>\r\n        ] : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(Container);\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport Link from '../components/Link';\r\nimport './Containers.css';\r\n\r\nclass Containers extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.mounted = false;\r\n    this.timer = null;\r\n  }\r\n\r\n  getType(){\r\n    var type = this.props.args || {};\r\n    type = type.type || \"all\";\r\n    return type;\r\n  }\r\n\r\n  componentDidMount(){\r\n    var type = this.getType();\r\n    Actions.api(\"containers\", `containers/show/${type}`);\r\n    this.mounted = true;\r\n    var self = this;\r\n    this.timer = setInterval(() => {\r\n      if ( !self.mounted ){\r\n        clearInterval(self.timer);\r\n        return;\r\n      }\r\n      Actions.api(\"containers\", `containers/show/${self.getType()}`);\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n    if ( this.timer ){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    var type = this.getType();\r\n    if ( prevProps.args.type !== type ){\r\n      Actions.api(\"containers\", `containers/show/${type}`);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var args = this.props.args || {},\r\n      containers = this.props.containers || [];\r\n    if ( containers.output && containers.output.length ){\r\n      containers = containers.output;\r\n    }\r\n    var first = containers.length ? containers[0] : null;\r\n    return (\r\n      <React.Fragment>\r\n        <div className='Containers'>\r\n          <h1>Containers</h1>\r\n          <div className=\"Containers-options\">\r\n            <Link to={`/containers/show/${this.getType() === \"all\" ? \"running\" : \"all\"}`} className={`toggler${(args.type === \"all\" ? \" checked\" : \"\")}`}>\r\n              Show All\r\n            </Link>\r\n          </div>\r\n          { args.type === \"all\" ? (\r\n            <p>This page is showing all containers.</p>\r\n          ) : (\r\n            <p>This page is showing only the running containers.</p>\r\n          ) }\r\n          { first ? (\r\n            <table className=\"border\">\r\n              <thead>\r\n                <tr>\r\n                  { Object.keys(first).map( (col) => <th key={col}>{col}</th> ) }\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              { containers.map ( (container, index) => {\r\n                var total = 0,\r\n                  emptyCount = 0;\r\n                Object.keys(container).forEach( (con,i) => {\r\n                  total++;\r\n                  if ( !container[con] ){\r\n                    emptyCount++;\r\n                  }\r\n                } );\r\n                // Skip Empty row\r\n                if ( total === emptyCount ){\r\n                  return null;\r\n                }\r\n                return (\r\n                  <tr key={`row-${index}`}>\r\n                    { Object.keys(container).map( (con,i) => {\r\n                      var v = container[con];\r\n                      if ( con === \"IMAGE\" ){\r\n                        v = <Link to={`/image/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"CONTAINER ID\" ){\r\n                        v = <Link to={`/container/${v}`} className=\"no-style\">{v}</Link>;\r\n                      }\r\n                      else if ( con === \"PORTS\" && v.length ){\r\n                        v = (\r\n                          <ul>\r\n                            { v.split(/,/).map( (line, lineI) => {\r\n                              return (\r\n                                <li key={`line-${lineI}`}>\r\n                                  {line}\r\n                                </li>\r\n                              );\r\n                            } ) }\r\n                          </ul>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <td key={`row-${i}`}>{v}</td> \r\n                      );\r\n                    } ) }\r\n                  </tr>\r\n                );\r\n              } ) }\r\n              </tbody>\r\n            </table>\r\n          ) : null }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Containers;\r\n","import React from 'react';\r\nimport * as Actions from '../actions';\r\nimport withApiWatch from '../components/withApiWatch';\r\n\r\nclass ContainerRun extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      flag: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    var key = `image-${this.props.args.imageId}`;\r\n    this.props.addApiWatchId(\"container_run\");\r\n    this.props.addApiWatchId(key);\r\n    if ( !this.props[key] ){\r\n      Actions.api(key, `image/inspect/${this.props.args.imageId}`);\r\n    }\r\n  }\r\n \r\n  handleForm(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var args = this.props.args || {},\r\n      options = [],\r\n      volumes = [];\r\n    var map = {\r\n      flagRm: \"--rm\",\r\n      flagTty: \"-t\"\r\n    };\r\n    Object.keys(args).forEach( (key) => {\r\n      if ( map.hasOwnProperty(key) ){\r\n        var v = map[key].split(/\\s/);\r\n        options.push({\r\n          key: v[0],\r\n          value: v[1] || \"\"\r\n        });\r\n      }\r\n    } );\r\n    if ( args.name && args.name.length ){\r\n      options.push({\r\n        key: \"--name\",\r\n        value: args.name\r\n      });\r\n    }\r\n    if ( args.volumes && args.volumes.length ){\r\n      args.volumes.forEach( (vol) => {\r\n        if ( vol.local && vol.remote ){\r\n          volumes.push(vol);\r\n        }\r\n      } );\r\n    }\r\n    Actions.api(\"container_run\", `container/run/${this.props.args.imageId}`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        options,\r\n        volumes,\r\n        additionalArgs: args.additionalArgs || \"\",\r\n        ports: args.ports,\r\n      })\r\n    });\r\n  }\r\n\r\n  addVolume(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    var volumes = this.props.args.volumes || [];\r\n    volumes.push({\r\n      local: \"\",\r\n      remote: \"\"\r\n    });\r\n    Actions.setArg(\"volumes\", volumes);\r\n  }\r\n\r\n  inputListener(name){\r\n    var self = this;\r\n    return (e) => {\r\n      switch ( name ){\r\n        case \"flagRm\":\r\n          Actions.setArg(\"flagRm\", self.props.args.flagRm ? false : true);\r\n          self.setState({\r\n            flag: !self.state.flag\r\n          });\r\n          break;\r\n\r\n        case \"flagTty\":\r\n          Actions.setArg(\"flagTty\", self.props.args.flagTty === true ? false : true);\r\n          break;\r\n\r\n        default:\r\n          var match;\r\n          if ( name.match(/port_/) ){\r\n            var ports = this.props.args.ports || {};\r\n            ports[name.replace(/port_/,'')] = e.target.value;\r\n            Actions.setArg(\"ports\", ports);\r\n          } \r\n          else if ( match = name.match(/volume-(\\d+)-(local|remote)/) ){\r\n            var i = match[1],\r\n              type = match[2];\r\n            var volumes = self.props.args.volumes || [];\r\n            volumes = volumes.slice();\r\n            if ( volumes[i] ){\r\n              volumes[i][type] = e.target.value;\r\n            }\r\n            Actions.setArg(\"volumes\", volumes);\r\n          }\r\n          else if ( match = name.match(/remove-volume-(\\d+)/) ){\r\n            e.preventDefault();\r\n            var i = match[1];\r\n            var volumes = self.props.args.volumes ? self.props.args.volumes.slice() : [];\r\n            volumes.splice(i,1);\r\n            Actions.setArg(\"volumes\", volumes);\r\n          }\r\n          else {\r\n            Actions.setArg(name, e.target.value);\r\n          }\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  render(){\r\n    var imageKey = `image-${this.props.args.imageId}`;\r\n    var image = this.props[imageKey] || {},\r\n      args = this.props.args,\r\n      ports = args.ports || {},\r\n      additionalArgs = args.additionalArgs || \"\",\r\n      volumes = args.volumes || [];\r\n    if ( Array.isArray(image) ){\r\n      image = image[0];\r\n    }\r\n    var self = this;\r\n    return (\r\n      <div className=\"Container-run\">\r\n        <h1>Start a Container</h1>\r\n        <p>From this page you can start a new container using the selected image.  Please customize the details below to set different options on the container.</p>\r\n        <form onSubmit={this.handleForm.bind(this)}>\r\n          <p>\r\n            <strong>Name</strong> <em>(optional)</em><br />\r\n            <em>Gives the container a name so you can easily run commands on the container.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input value={args.name || \"\"} onChange={this.inputListener(\"name\")} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/** ==================== FLAGS ==================== **/}\r\n          <p><strong>Flags</strong></p>\r\n          <div className=\"flex-col\">\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagRm} onChange={this.inputListener(\"flagRm\")} checked={args.flagRm ? true : false} /> Don't Persist\r\n              </label>\r\n              &nbsp;- <em>When the container is stopped, it is automatically removed, and can't be restarted.</em>\r\n            </span>\r\n            <span>\r\n              <label>\r\n                <input type=\"checkbox\" value={!!args.flagTty} onChange={this.inputListener(\"flagTty\")} checked={args.flagTty ? true : false} /> Prevent Exit\r\n                &nbsp;- <em>Containers exit if a script isn't set to run at start, this flag prevents the container from exiting</em> \r\n              </label>\r\n            </span>\r\n          </div>\r\n          {/** ==================== PORT MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Port Mapping</strong> <em>(optional)</em><br />\r\n            <em>If left empty, that port will not be exposed to localhost</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <div className=\"flex-row flex-justify-between\">\r\n                  <span>Local Port</span><span></span><span>Container Port</span>\r\n                </div>\r\n            { image.Config && image.Config.ExposedPorts ? ( \r\n              Object.keys(image.Config.ExposedPorts).map( (port) => {\r\n                port = port.replace(/(\\d+).*/,\"$1\");\r\n                return (\r\n                  <div key={`port-${port}`} className=\"flex-row flex-justify-between\">\r\n                    <div>\r\n                      <input onChange={self.inputListener(`port_${port}`)} value={ports[port] || \"\"} />\r\n                    </div>\r\n                    <span>=></span>\r\n                    <div>\r\n                      <input readOnly value={port} />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              } )\r\n            ) : \"No Exposed Ports\" }\r\n            </div>\r\n          </div>\r\n          {/** ==================== VOLUME MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Volume Binding Mapping</strong> <em>(optional)</em><br />\r\n            <em>Binds a local directory to a directory in the container.  Please use full paths</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            { volumes.map( (vol,index) => {\r\n              return (\r\n                <div key={`vol-${index}`} className=\"flex-row flex-justify-between\">\r\n                  <div>\r\n                    <input placeholder=\"local\" value={vol.local} onChange={self.inputListener(`volume-${index}-local`)} />\r\n                  </div>\r\n                  <span>=></span>\r\n                  <div>\r\n                    <input placeholder=\"container\" value={vol.remote} onChange={self.inputListener(`volume-${index}-remote`)} /> &nbsp;\r\n                    <a href=\"#\" onClick={this.inputListener(`remove-volume-${index}`)} className=\"no-style text-danger\">- Delete</a>\r\n                  </div>\r\n                </div>\r\n              );\r\n            } ) }\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <a href=\"#\" onClick={this.addVolume.bind(this)}>\r\n                + Add a Volume\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/** ==================== VOLUME MAPPING ==================== **/}\r\n          <p>\r\n            <strong>Additional Arguments</strong><br />\r\n            <em>Enter any other options/arguments to the command.</em>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"flex-col\">\r\n                <input placeholder=\"docker run arguments\" value={additionalArgs} onChange={self.inputListener(`additionalArgs`)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p></p>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button type=\"submit\">Start Container</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApiWatch(ContainerRun);\r\n","import React from 'react';\r\nimport Link from '../components/Link';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div>\r\n      <h1>404 - Page Not Found</h1>\r\n      <p>\r\n        Return to <Link to=\"/containers/show/running\">Containers</Link> page.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function(props){\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Docker GUI</h1>      \r\n      <p>\r\n        This is a simple interface for managing your local Docker images, containers, and volumes (<em>coming soon</em>)\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport * as Actions from './actions';\r\nimport Images from './pages/Images';\r\nimport Image from './pages/Image';\r\nimport ImageCreate from './pages/ImageCreate';\r\nimport Container from './pages/Container';\r\nimport Containers from './pages/Containers';\r\nimport ContainerRun from './pages/ContainerRun';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport Home from './pages/Home';\r\nimport Link from './components/Link';\r\nimport './App.scss';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    /**\r\n     * Create Global access reference to\r\n     * Main App Wrapper Component\r\n     */\r\n    Actions.setApp(this);\r\n\r\n    this.originalPopstateListener = window.onpopstate;\r\n\r\n    /**\r\n     * Main App State\r\n     * Changes are managed through\r\n     * Actions.js function calls\r\n     */\r\n    this.state = Actions.getInitialState();\r\n  }\r\n\r\n  handleHistoryEvent(e){\r\n    if ( e && e.preventDefault ){\r\n      e.preventDefault();\r\n    }\r\n    Actions.setState(Actions.getInitialState());\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.onpopstate = this.handleHistoryEvent;\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.onpopstate = this.originalPopstateListener;\r\n  }\r\n\r\n  route(viewName){\r\n    var ret = null;\r\n    switch ( viewName ){\r\n      // Containers List Page\r\n      case \"containers\":\r\n        ret = <Containers {...this.state} />;\r\n        break;\r\n\r\n      // Images List Page\r\n      case \"images\":\r\n        ret = <Images {...this.state} />;\r\n        break;\r\n\r\n      // Image Create Page\r\n      case \"image-create\":\r\n        ret = <ImageCreate {...this.state} />;\r\n        break;\r\n\r\n      // Image Summary Page\r\n      case \"image\":\r\n        ret = <Image {...this.state} />;\r\n        break;\r\n\r\n      // Start Container from Image Page\r\n      case \"container-run\":\r\n        ret = <ContainerRun {...this.state} />;\r\n        break;\r\n\r\n      // Container Summary Page\r\n      case \"container\":\r\n        ret = <Container {...this.state} />;\r\n        break;\r\n        \r\n      // Home Page\r\n      case \"home\":\r\n        ret = <Home />;\r\n        break;\r\n\r\n      default: \r\n        ret = <PageNotFound />;\r\n        break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <ul className=\"App-nav\">\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/containers/show/running\">Containers</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/images\">Images</Link>\r\n            </li>\r\n          </ul>\r\n          <p>\r\n            <a style={{color:\"white\",textDecoration: \"none\"}} href=\"https://github.com/chrisonbass/docker-gui\">@chrisonbass</a>\r\n          </p>\r\n        </header>\r\n        {/** =========== OUTPUT ERROR ============= **/}\r\n        { this.state.message && (\"\" + this.state.message).length ? (\r\n          <div className={`App-msg-${this.state.messageType === \"success\" ? \"success\" : \"error\"}`}>\r\n            <a href=\"void\" onClick={Actions.clearMessage} className=\"close\">x</a>\r\n            <pre>\r\n              {this.state.message}\r\n            </pre>\r\n          </div>\r\n        ) : null }\r\n\r\n        <div className=\"App-body\">\r\n          { this.route(this.state.view) }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}